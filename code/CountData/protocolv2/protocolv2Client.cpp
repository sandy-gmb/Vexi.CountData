/* protocolv2Client.cpp
   Generated by gSOAP 2.8.111 for cwebservice.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "protocolv2H.h"

namespace protocolv2 {

SOAP_SOURCE_STAMP("@(#) protocolv2Client.cpp ver 2.8.111 2021-03-18 08:34:29 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Counts(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Counts *ns1__Counts, _ns1__CountsResponse &ns1__CountsResponse)
{	if (soap_send___ns1__Counts(soap, soap_endpoint, soap_action, ns1__Counts) || soap_recv___ns1__Counts(soap, ns1__CountsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__Counts(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Counts *ns1__Counts)
{	struct __ns1__Counts soap_tmp___ns1__Counts;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/Counts";
	soap_tmp___ns1__Counts.ns1__Counts = ns1__Counts;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__Counts(soap, &soap_tmp___ns1__Counts);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Counts(soap, &soap_tmp___ns1__Counts, "-ns1:Counts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Counts(soap, &soap_tmp___ns1__Counts, "-ns1:Counts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__Counts(struct soap *soap, _ns1__CountsResponse &ns1__CountsResponse)
{
	ns1__CountsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CountsResponse.soap_get(soap, "ns1:CountsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CountsByArticle(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CountsByArticle *ns1__CountsByArticle, _ns1__CountsByArticleResponse &ns1__CountsByArticleResponse)
{	if (soap_send___ns1__CountsByArticle(soap, soap_endpoint, soap_action, ns1__CountsByArticle) || soap_recv___ns1__CountsByArticle(soap, ns1__CountsByArticleResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__CountsByArticle(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CountsByArticle *ns1__CountsByArticle)
{	struct __ns1__CountsByArticle soap_tmp___ns1__CountsByArticle;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/CountsByArticle";
	soap_tmp___ns1__CountsByArticle.ns1__CountsByArticle = ns1__CountsByArticle;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CountsByArticle(soap, &soap_tmp___ns1__CountsByArticle);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CountsByArticle(soap, &soap_tmp___ns1__CountsByArticle, "-ns1:CountsByArticle", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CountsByArticle(soap, &soap_tmp___ns1__CountsByArticle, "-ns1:CountsByArticle", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__CountsByArticle(struct soap *soap, _ns1__CountsByArticleResponse &ns1__CountsByArticleResponse)
{
	ns1__CountsByArticleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CountsByArticleResponse.soap_get(soap, "ns1:CountsByArticleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__PreserveCounts(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PreserveCounts *ns1__PreserveCounts, _ns1__PreserveCountsResponse &ns1__PreserveCountsResponse)
{	if (soap_send___ns1__PreserveCounts(soap, soap_endpoint, soap_action, ns1__PreserveCounts) || soap_recv___ns1__PreserveCounts(soap, ns1__PreserveCountsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__PreserveCounts(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PreserveCounts *ns1__PreserveCounts)
{	struct __ns1__PreserveCounts soap_tmp___ns1__PreserveCounts;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/PreserveCounts";
	soap_tmp___ns1__PreserveCounts.ns1__PreserveCounts = ns1__PreserveCounts;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__PreserveCounts(soap, &soap_tmp___ns1__PreserveCounts);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__PreserveCounts(soap, &soap_tmp___ns1__PreserveCounts, "-ns1:PreserveCounts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__PreserveCounts(soap, &soap_tmp___ns1__PreserveCounts, "-ns1:PreserveCounts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__PreserveCounts(struct soap *soap, _ns1__PreserveCountsResponse &ns1__PreserveCountsResponse)
{
	ns1__PreserveCountsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PreserveCountsResponse.soap_get(soap, "ns1:PreserveCountsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUpdatedLastRequestDate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUpdatedLastRequestDate *ns1__GetUpdatedLastRequestDate, _ns1__GetUpdatedLastRequestDateResponse &ns1__GetUpdatedLastRequestDateResponse)
{	if (soap_send___ns1__GetUpdatedLastRequestDate(soap, soap_endpoint, soap_action, ns1__GetUpdatedLastRequestDate) || soap_recv___ns1__GetUpdatedLastRequestDate(soap, ns1__GetUpdatedLastRequestDateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetUpdatedLastRequestDate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUpdatedLastRequestDate *ns1__GetUpdatedLastRequestDate)
{	struct __ns1__GetUpdatedLastRequestDate soap_tmp___ns1__GetUpdatedLastRequestDate;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/GetUpdatedLastRequestDate";
	soap_tmp___ns1__GetUpdatedLastRequestDate.ns1__GetUpdatedLastRequestDate = ns1__GetUpdatedLastRequestDate;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUpdatedLastRequestDate(soap, &soap_tmp___ns1__GetUpdatedLastRequestDate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUpdatedLastRequestDate(soap, &soap_tmp___ns1__GetUpdatedLastRequestDate, "-ns1:GetUpdatedLastRequestDate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUpdatedLastRequestDate(soap, &soap_tmp___ns1__GetUpdatedLastRequestDate, "-ns1:GetUpdatedLastRequestDate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetUpdatedLastRequestDate(struct soap *soap, _ns1__GetUpdatedLastRequestDateResponse &ns1__GetUpdatedLastRequestDateResponse)
{
	ns1__GetUpdatedLastRequestDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUpdatedLastRequestDateResponse.soap_get(soap, "ns1:GetUpdatedLastRequestDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__MountedMolds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__MountedMolds *ns1__MountedMolds, _ns1__MountedMoldsResponse &ns1__MountedMoldsResponse)
{	if (soap_send___ns1__MountedMolds(soap, soap_endpoint, soap_action, ns1__MountedMolds) || soap_recv___ns1__MountedMolds(soap, ns1__MountedMoldsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__MountedMolds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__MountedMolds *ns1__MountedMolds)
{	struct __ns1__MountedMolds soap_tmp___ns1__MountedMolds;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/MountedMolds";
	soap_tmp___ns1__MountedMolds.ns1__MountedMolds = ns1__MountedMolds;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__MountedMolds(soap, &soap_tmp___ns1__MountedMolds);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MountedMolds(soap, &soap_tmp___ns1__MountedMolds, "-ns1:MountedMolds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MountedMolds(soap, &soap_tmp___ns1__MountedMolds, "-ns1:MountedMolds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__MountedMolds(struct soap *soap, _ns1__MountedMoldsResponse &ns1__MountedMoldsResponse)
{
	ns1__MountedMoldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MountedMoldsResponse.soap_get(soap, "ns1:MountedMoldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__EjectedMolds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__EjectedMolds *ns1__EjectedMolds, _ns1__EjectedMoldsResponse &ns1__EjectedMoldsResponse)
{	if (soap_send___ns1__EjectedMolds(soap, soap_endpoint, soap_action, ns1__EjectedMolds) || soap_recv___ns1__EjectedMolds(soap, ns1__EjectedMoldsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__EjectedMolds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__EjectedMolds *ns1__EjectedMolds)
{	struct __ns1__EjectedMolds soap_tmp___ns1__EjectedMolds;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/EjectedMolds";
	soap_tmp___ns1__EjectedMolds.ns1__EjectedMolds = ns1__EjectedMolds;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__EjectedMolds(soap, &soap_tmp___ns1__EjectedMolds);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EjectedMolds(soap, &soap_tmp___ns1__EjectedMolds, "-ns1:EjectedMolds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EjectedMolds(soap, &soap_tmp___ns1__EjectedMolds, "-ns1:EjectedMolds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__EjectedMolds(struct soap *soap, _ns1__EjectedMoldsResponse &ns1__EjectedMoldsResponse)
{
	ns1__EjectedMoldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__EjectedMoldsResponse.soap_get(soap, "ns1:EjectedMoldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ReadenMolds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ReadenMolds *ns1__ReadenMolds, _ns1__ReadenMoldsResponse &ns1__ReadenMoldsResponse)
{	if (soap_send___ns1__ReadenMolds(soap, soap_endpoint, soap_action, ns1__ReadenMolds) || soap_recv___ns1__ReadenMolds(soap, ns1__ReadenMoldsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__ReadenMolds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ReadenMolds *ns1__ReadenMolds)
{	struct __ns1__ReadenMolds soap_tmp___ns1__ReadenMolds;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/ReadenMolds";
	soap_tmp___ns1__ReadenMolds.ns1__ReadenMolds = ns1__ReadenMolds;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__ReadenMolds(soap, &soap_tmp___ns1__ReadenMolds);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReadenMolds(soap, &soap_tmp___ns1__ReadenMolds, "-ns1:ReadenMolds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReadenMolds(soap, &soap_tmp___ns1__ReadenMolds, "-ns1:ReadenMolds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__ReadenMolds(struct soap *soap, _ns1__ReadenMoldsResponse &ns1__ReadenMoldsResponse)
{
	ns1__ReadenMoldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReadenMoldsResponse.soap_get(soap, "ns1:ReadenMoldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Measures(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Measures *ns1__Measures, _ns1__MeasuresResponse &ns1__MeasuresResponse)
{	if (soap_send___ns1__Measures(soap, soap_endpoint, soap_action, ns1__Measures) || soap_recv___ns1__Measures(soap, ns1__MeasuresResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__Measures(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Measures *ns1__Measures)
{	struct __ns1__Measures soap_tmp___ns1__Measures;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/Measures";
	soap_tmp___ns1__Measures.ns1__Measures = ns1__Measures;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__Measures(soap, &soap_tmp___ns1__Measures);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Measures(soap, &soap_tmp___ns1__Measures, "-ns1:Measures", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Measures(soap, &soap_tmp___ns1__Measures, "-ns1:Measures", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__Measures(struct soap *soap, _ns1__MeasuresResponse &ns1__MeasuresResponse)
{
	ns1__MeasuresResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MeasuresResponse.soap_get(soap, "ns1:MeasuresResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Alarms(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Alarms *ns1__Alarms, _ns1__AlarmsResponse &ns1__AlarmsResponse)
{	if (soap_send___ns1__Alarms(soap, soap_endpoint, soap_action, ns1__Alarms) || soap_recv___ns1__Alarms(soap, ns1__AlarmsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__Alarms(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Alarms *ns1__Alarms)
{	struct __ns1__Alarms soap_tmp___ns1__Alarms;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/Alarms";
	soap_tmp___ns1__Alarms.ns1__Alarms = ns1__Alarms;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__Alarms(soap, &soap_tmp___ns1__Alarms);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Alarms(soap, &soap_tmp___ns1__Alarms, "-ns1:Alarms", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Alarms(soap, &soap_tmp___ns1__Alarms, "-ns1:Alarms", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__Alarms(struct soap *soap, _ns1__AlarmsResponse &ns1__AlarmsResponse)
{
	ns1__AlarmsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AlarmsResponse.soap_get(soap, "ns1:AlarmsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Samples(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Samples *ns1__Samples, _ns1__SamplesResponse &ns1__SamplesResponse)
{	if (soap_send___ns1__Samples(soap, soap_endpoint, soap_action, ns1__Samples) || soap_recv___ns1__Samples(soap, ns1__SamplesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__Samples(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Samples *ns1__Samples)
{	struct __ns1__Samples soap_tmp___ns1__Samples;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/Samples";
	soap_tmp___ns1__Samples.ns1__Samples = ns1__Samples;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__Samples(soap, &soap_tmp___ns1__Samples);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Samples(soap, &soap_tmp___ns1__Samples, "-ns1:Samples", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Samples(soap, &soap_tmp___ns1__Samples, "-ns1:Samples", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__Samples(struct soap *soap, _ns1__SamplesResponse &ns1__SamplesResponse)
{
	ns1__SamplesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SamplesResponse.soap_get(soap, "ns1:SamplesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__AddMountedMolds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddMountedMolds *ns1__AddMountedMolds, _ns1__AddMountedMoldsResponse &ns1__AddMountedMoldsResponse)
{	if (soap_send___ns1__AddMountedMolds(soap, soap_endpoint, soap_action, ns1__AddMountedMolds) || soap_recv___ns1__AddMountedMolds(soap, ns1__AddMountedMoldsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__AddMountedMolds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddMountedMolds *ns1__AddMountedMolds)
{	struct __ns1__AddMountedMolds soap_tmp___ns1__AddMountedMolds;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/AddMountedMolds";
	soap_tmp___ns1__AddMountedMolds.ns1__AddMountedMolds = ns1__AddMountedMolds;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__AddMountedMolds(soap, &soap_tmp___ns1__AddMountedMolds);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddMountedMolds(soap, &soap_tmp___ns1__AddMountedMolds, "-ns1:AddMountedMolds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddMountedMolds(soap, &soap_tmp___ns1__AddMountedMolds, "-ns1:AddMountedMolds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__AddMountedMolds(struct soap *soap, _ns1__AddMountedMoldsResponse &ns1__AddMountedMoldsResponse)
{
	ns1__AddMountedMoldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddMountedMoldsResponse.soap_get(soap, "ns1:AddMountedMoldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__AddEjectedMolds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddEjectedMolds *ns1__AddEjectedMolds, _ns1__AddEjectedMoldsResponse &ns1__AddEjectedMoldsResponse)
{	if (soap_send___ns1__AddEjectedMolds(soap, soap_endpoint, soap_action, ns1__AddEjectedMolds) || soap_recv___ns1__AddEjectedMolds(soap, ns1__AddEjectedMoldsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__AddEjectedMolds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddEjectedMolds *ns1__AddEjectedMolds)
{	struct __ns1__AddEjectedMolds soap_tmp___ns1__AddEjectedMolds;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/AddEjectedMolds";
	soap_tmp___ns1__AddEjectedMolds.ns1__AddEjectedMolds = ns1__AddEjectedMolds;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__AddEjectedMolds(soap, &soap_tmp___ns1__AddEjectedMolds);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddEjectedMolds(soap, &soap_tmp___ns1__AddEjectedMolds, "-ns1:AddEjectedMolds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddEjectedMolds(soap, &soap_tmp___ns1__AddEjectedMolds, "-ns1:AddEjectedMolds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__AddEjectedMolds(struct soap *soap, _ns1__AddEjectedMoldsResponse &ns1__AddEjectedMoldsResponse)
{
	ns1__AddEjectedMoldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddEjectedMoldsResponse.soap_get(soap, "ns1:AddEjectedMoldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__AddSamples(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddSamples *ns1__AddSamples, _ns1__AddSamplesResponse &ns1__AddSamplesResponse)
{	if (soap_send___ns1__AddSamples(soap, soap_endpoint, soap_action, ns1__AddSamples) || soap_recv___ns1__AddSamples(soap, ns1__AddSamplesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__AddSamples(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddSamples *ns1__AddSamples)
{	struct __ns1__AddSamples soap_tmp___ns1__AddSamples;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/AddSamples";
	soap_tmp___ns1__AddSamples.ns1__AddSamples = ns1__AddSamples;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__AddSamples(soap, &soap_tmp___ns1__AddSamples);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddSamples(soap, &soap_tmp___ns1__AddSamples, "-ns1:AddSamples", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddSamples(soap, &soap_tmp___ns1__AddSamples, "-ns1:AddSamples", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__AddSamples(struct soap *soap, _ns1__AddSamplesResponse &ns1__AddSamplesResponse)
{
	ns1__AddSamplesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddSamplesResponse.soap_get(soap, "ns1:AddSamplesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetLastRequestDate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetLastRequestDate *ns1__GetLastRequestDate, _ns1__GetLastRequestDateResponse &ns1__GetLastRequestDateResponse)
{	if (soap_send___ns1__GetLastRequestDate(soap, soap_endpoint, soap_action, ns1__GetLastRequestDate) || soap_recv___ns1__GetLastRequestDate(soap, ns1__GetLastRequestDateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetLastRequestDate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetLastRequestDate *ns1__GetLastRequestDate)
{	struct __ns1__GetLastRequestDate soap_tmp___ns1__GetLastRequestDate;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/GetLastRequestDate";
	soap_tmp___ns1__GetLastRequestDate.ns1__GetLastRequestDate = ns1__GetLastRequestDate;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLastRequestDate(soap, &soap_tmp___ns1__GetLastRequestDate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLastRequestDate(soap, &soap_tmp___ns1__GetLastRequestDate, "-ns1:GetLastRequestDate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLastRequestDate(soap, &soap_tmp___ns1__GetLastRequestDate, "-ns1:GetLastRequestDate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetLastRequestDate(struct soap *soap, _ns1__GetLastRequestDateResponse &ns1__GetLastRequestDateResponse)
{
	ns1__GetLastRequestDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLastRequestDateResponse.soap_get(soap, "ns1:GetLastRequestDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Counts_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Counts *ns1__Counts, _ns1__CountsResponse &ns1__CountsResponse)
{	if (soap_send___ns1__Counts_(soap, soap_endpoint, soap_action, ns1__Counts) || soap_recv___ns1__Counts_(soap, ns1__CountsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__Counts_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Counts *ns1__Counts)
{	struct __ns1__Counts_ soap_tmp___ns1__Counts_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/Counts";
	soap_tmp___ns1__Counts_.ns1__Counts = ns1__Counts;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__Counts_(soap, &soap_tmp___ns1__Counts_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Counts_(soap, &soap_tmp___ns1__Counts_, "-ns1:Counts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Counts_(soap, &soap_tmp___ns1__Counts_, "-ns1:Counts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__Counts_(struct soap *soap, _ns1__CountsResponse &ns1__CountsResponse)
{
	ns1__CountsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CountsResponse.soap_get(soap, "ns1:CountsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CountsByArticle_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CountsByArticle *ns1__CountsByArticle, _ns1__CountsByArticleResponse &ns1__CountsByArticleResponse)
{	if (soap_send___ns1__CountsByArticle_(soap, soap_endpoint, soap_action, ns1__CountsByArticle) || soap_recv___ns1__CountsByArticle_(soap, ns1__CountsByArticleResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__CountsByArticle_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CountsByArticle *ns1__CountsByArticle)
{	struct __ns1__CountsByArticle_ soap_tmp___ns1__CountsByArticle_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/CountsByArticle";
	soap_tmp___ns1__CountsByArticle_.ns1__CountsByArticle = ns1__CountsByArticle;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CountsByArticle_(soap, &soap_tmp___ns1__CountsByArticle_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CountsByArticle_(soap, &soap_tmp___ns1__CountsByArticle_, "-ns1:CountsByArticle", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CountsByArticle_(soap, &soap_tmp___ns1__CountsByArticle_, "-ns1:CountsByArticle", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__CountsByArticle_(struct soap *soap, _ns1__CountsByArticleResponse &ns1__CountsByArticleResponse)
{
	ns1__CountsByArticleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CountsByArticleResponse.soap_get(soap, "ns1:CountsByArticleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__PreserveCounts_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PreserveCounts *ns1__PreserveCounts, _ns1__PreserveCountsResponse &ns1__PreserveCountsResponse)
{	if (soap_send___ns1__PreserveCounts_(soap, soap_endpoint, soap_action, ns1__PreserveCounts) || soap_recv___ns1__PreserveCounts_(soap, ns1__PreserveCountsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__PreserveCounts_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PreserveCounts *ns1__PreserveCounts)
{	struct __ns1__PreserveCounts_ soap_tmp___ns1__PreserveCounts_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/PreserveCounts";
	soap_tmp___ns1__PreserveCounts_.ns1__PreserveCounts = ns1__PreserveCounts;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__PreserveCounts_(soap, &soap_tmp___ns1__PreserveCounts_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__PreserveCounts_(soap, &soap_tmp___ns1__PreserveCounts_, "-ns1:PreserveCounts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__PreserveCounts_(soap, &soap_tmp___ns1__PreserveCounts_, "-ns1:PreserveCounts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__PreserveCounts_(struct soap *soap, _ns1__PreserveCountsResponse &ns1__PreserveCountsResponse)
{
	ns1__PreserveCountsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PreserveCountsResponse.soap_get(soap, "ns1:PreserveCountsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUpdatedLastRequestDate_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUpdatedLastRequestDate *ns1__GetUpdatedLastRequestDate, _ns1__GetUpdatedLastRequestDateResponse &ns1__GetUpdatedLastRequestDateResponse)
{	if (soap_send___ns1__GetUpdatedLastRequestDate_(soap, soap_endpoint, soap_action, ns1__GetUpdatedLastRequestDate) || soap_recv___ns1__GetUpdatedLastRequestDate_(soap, ns1__GetUpdatedLastRequestDateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetUpdatedLastRequestDate_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUpdatedLastRequestDate *ns1__GetUpdatedLastRequestDate)
{	struct __ns1__GetUpdatedLastRequestDate_ soap_tmp___ns1__GetUpdatedLastRequestDate_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/GetUpdatedLastRequestDate";
	soap_tmp___ns1__GetUpdatedLastRequestDate_.ns1__GetUpdatedLastRequestDate = ns1__GetUpdatedLastRequestDate;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUpdatedLastRequestDate_(soap, &soap_tmp___ns1__GetUpdatedLastRequestDate_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUpdatedLastRequestDate_(soap, &soap_tmp___ns1__GetUpdatedLastRequestDate_, "-ns1:GetUpdatedLastRequestDate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUpdatedLastRequestDate_(soap, &soap_tmp___ns1__GetUpdatedLastRequestDate_, "-ns1:GetUpdatedLastRequestDate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetUpdatedLastRequestDate_(struct soap *soap, _ns1__GetUpdatedLastRequestDateResponse &ns1__GetUpdatedLastRequestDateResponse)
{
	ns1__GetUpdatedLastRequestDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUpdatedLastRequestDateResponse.soap_get(soap, "ns1:GetUpdatedLastRequestDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__MountedMolds_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__MountedMolds *ns1__MountedMolds, _ns1__MountedMoldsResponse &ns1__MountedMoldsResponse)
{	if (soap_send___ns1__MountedMolds_(soap, soap_endpoint, soap_action, ns1__MountedMolds) || soap_recv___ns1__MountedMolds_(soap, ns1__MountedMoldsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__MountedMolds_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__MountedMolds *ns1__MountedMolds)
{	struct __ns1__MountedMolds_ soap_tmp___ns1__MountedMolds_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/MountedMolds";
	soap_tmp___ns1__MountedMolds_.ns1__MountedMolds = ns1__MountedMolds;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__MountedMolds_(soap, &soap_tmp___ns1__MountedMolds_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MountedMolds_(soap, &soap_tmp___ns1__MountedMolds_, "-ns1:MountedMolds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MountedMolds_(soap, &soap_tmp___ns1__MountedMolds_, "-ns1:MountedMolds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__MountedMolds_(struct soap *soap, _ns1__MountedMoldsResponse &ns1__MountedMoldsResponse)
{
	ns1__MountedMoldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MountedMoldsResponse.soap_get(soap, "ns1:MountedMoldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__EjectedMolds_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__EjectedMolds *ns1__EjectedMolds, _ns1__EjectedMoldsResponse &ns1__EjectedMoldsResponse)
{	if (soap_send___ns1__EjectedMolds_(soap, soap_endpoint, soap_action, ns1__EjectedMolds) || soap_recv___ns1__EjectedMolds_(soap, ns1__EjectedMoldsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__EjectedMolds_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__EjectedMolds *ns1__EjectedMolds)
{	struct __ns1__EjectedMolds_ soap_tmp___ns1__EjectedMolds_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/EjectedMolds";
	soap_tmp___ns1__EjectedMolds_.ns1__EjectedMolds = ns1__EjectedMolds;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__EjectedMolds_(soap, &soap_tmp___ns1__EjectedMolds_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EjectedMolds_(soap, &soap_tmp___ns1__EjectedMolds_, "-ns1:EjectedMolds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EjectedMolds_(soap, &soap_tmp___ns1__EjectedMolds_, "-ns1:EjectedMolds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__EjectedMolds_(struct soap *soap, _ns1__EjectedMoldsResponse &ns1__EjectedMoldsResponse)
{
	ns1__EjectedMoldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__EjectedMoldsResponse.soap_get(soap, "ns1:EjectedMoldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ReadenMolds_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ReadenMolds *ns1__ReadenMolds, _ns1__ReadenMoldsResponse &ns1__ReadenMoldsResponse)
{	if (soap_send___ns1__ReadenMolds_(soap, soap_endpoint, soap_action, ns1__ReadenMolds) || soap_recv___ns1__ReadenMolds_(soap, ns1__ReadenMoldsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__ReadenMolds_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ReadenMolds *ns1__ReadenMolds)
{	struct __ns1__ReadenMolds_ soap_tmp___ns1__ReadenMolds_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/ReadenMolds";
	soap_tmp___ns1__ReadenMolds_.ns1__ReadenMolds = ns1__ReadenMolds;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__ReadenMolds_(soap, &soap_tmp___ns1__ReadenMolds_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReadenMolds_(soap, &soap_tmp___ns1__ReadenMolds_, "-ns1:ReadenMolds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReadenMolds_(soap, &soap_tmp___ns1__ReadenMolds_, "-ns1:ReadenMolds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__ReadenMolds_(struct soap *soap, _ns1__ReadenMoldsResponse &ns1__ReadenMoldsResponse)
{
	ns1__ReadenMoldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReadenMoldsResponse.soap_get(soap, "ns1:ReadenMoldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Measures_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Measures *ns1__Measures, _ns1__MeasuresResponse &ns1__MeasuresResponse)
{	if (soap_send___ns1__Measures_(soap, soap_endpoint, soap_action, ns1__Measures) || soap_recv___ns1__Measures_(soap, ns1__MeasuresResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__Measures_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Measures *ns1__Measures)
{	struct __ns1__Measures_ soap_tmp___ns1__Measures_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/Measures";
	soap_tmp___ns1__Measures_.ns1__Measures = ns1__Measures;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__Measures_(soap, &soap_tmp___ns1__Measures_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Measures_(soap, &soap_tmp___ns1__Measures_, "-ns1:Measures", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Measures_(soap, &soap_tmp___ns1__Measures_, "-ns1:Measures", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__Measures_(struct soap *soap, _ns1__MeasuresResponse &ns1__MeasuresResponse)
{
	ns1__MeasuresResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MeasuresResponse.soap_get(soap, "ns1:MeasuresResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Alarms_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Alarms *ns1__Alarms, _ns1__AlarmsResponse &ns1__AlarmsResponse)
{	if (soap_send___ns1__Alarms_(soap, soap_endpoint, soap_action, ns1__Alarms) || soap_recv___ns1__Alarms_(soap, ns1__AlarmsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__Alarms_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Alarms *ns1__Alarms)
{	struct __ns1__Alarms_ soap_tmp___ns1__Alarms_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/Alarms";
	soap_tmp___ns1__Alarms_.ns1__Alarms = ns1__Alarms;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__Alarms_(soap, &soap_tmp___ns1__Alarms_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Alarms_(soap, &soap_tmp___ns1__Alarms_, "-ns1:Alarms", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Alarms_(soap, &soap_tmp___ns1__Alarms_, "-ns1:Alarms", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__Alarms_(struct soap *soap, _ns1__AlarmsResponse &ns1__AlarmsResponse)
{
	ns1__AlarmsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AlarmsResponse.soap_get(soap, "ns1:AlarmsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Samples_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Samples *ns1__Samples, _ns1__SamplesResponse &ns1__SamplesResponse)
{	if (soap_send___ns1__Samples_(soap, soap_endpoint, soap_action, ns1__Samples) || soap_recv___ns1__Samples_(soap, ns1__SamplesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__Samples_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Samples *ns1__Samples)
{	struct __ns1__Samples_ soap_tmp___ns1__Samples_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/Samples";
	soap_tmp___ns1__Samples_.ns1__Samples = ns1__Samples;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__Samples_(soap, &soap_tmp___ns1__Samples_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Samples_(soap, &soap_tmp___ns1__Samples_, "-ns1:Samples", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Samples_(soap, &soap_tmp___ns1__Samples_, "-ns1:Samples", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__Samples_(struct soap *soap, _ns1__SamplesResponse &ns1__SamplesResponse)
{
	ns1__SamplesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SamplesResponse.soap_get(soap, "ns1:SamplesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__AddMountedMolds_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddMountedMolds *ns1__AddMountedMolds, _ns1__AddMountedMoldsResponse &ns1__AddMountedMoldsResponse)
{	if (soap_send___ns1__AddMountedMolds_(soap, soap_endpoint, soap_action, ns1__AddMountedMolds) || soap_recv___ns1__AddMountedMolds_(soap, ns1__AddMountedMoldsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__AddMountedMolds_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddMountedMolds *ns1__AddMountedMolds)
{	struct __ns1__AddMountedMolds_ soap_tmp___ns1__AddMountedMolds_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/AddMountedMolds";
	soap_tmp___ns1__AddMountedMolds_.ns1__AddMountedMolds = ns1__AddMountedMolds;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__AddMountedMolds_(soap, &soap_tmp___ns1__AddMountedMolds_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddMountedMolds_(soap, &soap_tmp___ns1__AddMountedMolds_, "-ns1:AddMountedMolds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddMountedMolds_(soap, &soap_tmp___ns1__AddMountedMolds_, "-ns1:AddMountedMolds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__AddMountedMolds_(struct soap *soap, _ns1__AddMountedMoldsResponse &ns1__AddMountedMoldsResponse)
{
	ns1__AddMountedMoldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddMountedMoldsResponse.soap_get(soap, "ns1:AddMountedMoldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__AddEjectedMolds_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddEjectedMolds *ns1__AddEjectedMolds, _ns1__AddEjectedMoldsResponse &ns1__AddEjectedMoldsResponse)
{	if (soap_send___ns1__AddEjectedMolds_(soap, soap_endpoint, soap_action, ns1__AddEjectedMolds) || soap_recv___ns1__AddEjectedMolds_(soap, ns1__AddEjectedMoldsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__AddEjectedMolds_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddEjectedMolds *ns1__AddEjectedMolds)
{	struct __ns1__AddEjectedMolds_ soap_tmp___ns1__AddEjectedMolds_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/AddEjectedMolds";
	soap_tmp___ns1__AddEjectedMolds_.ns1__AddEjectedMolds = ns1__AddEjectedMolds;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__AddEjectedMolds_(soap, &soap_tmp___ns1__AddEjectedMolds_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddEjectedMolds_(soap, &soap_tmp___ns1__AddEjectedMolds_, "-ns1:AddEjectedMolds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddEjectedMolds_(soap, &soap_tmp___ns1__AddEjectedMolds_, "-ns1:AddEjectedMolds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__AddEjectedMolds_(struct soap *soap, _ns1__AddEjectedMoldsResponse &ns1__AddEjectedMoldsResponse)
{
	ns1__AddEjectedMoldsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddEjectedMoldsResponse.soap_get(soap, "ns1:AddEjectedMoldsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__AddSamples_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddSamples *ns1__AddSamples, _ns1__AddSamplesResponse &ns1__AddSamplesResponse)
{	if (soap_send___ns1__AddSamples_(soap, soap_endpoint, soap_action, ns1__AddSamples) || soap_recv___ns1__AddSamples_(soap, ns1__AddSamplesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__AddSamples_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddSamples *ns1__AddSamples)
{	struct __ns1__AddSamples_ soap_tmp___ns1__AddSamples_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/AddSamples";
	soap_tmp___ns1__AddSamples_.ns1__AddSamples = ns1__AddSamples;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__AddSamples_(soap, &soap_tmp___ns1__AddSamples_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddSamples_(soap, &soap_tmp___ns1__AddSamples_, "-ns1:AddSamples", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddSamples_(soap, &soap_tmp___ns1__AddSamples_, "-ns1:AddSamples", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__AddSamples_(struct soap *soap, _ns1__AddSamplesResponse &ns1__AddSamplesResponse)
{
	ns1__AddSamplesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddSamplesResponse.soap_get(soap, "ns1:AddSamplesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetLastRequestDate_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetLastRequestDate *ns1__GetLastRequestDate, _ns1__GetLastRequestDateResponse &ns1__GetLastRequestDateResponse)
{	if (soap_send___ns1__GetLastRequestDate_(soap, soap_endpoint, soap_action, ns1__GetLastRequestDate) || soap_recv___ns1__GetLastRequestDate_(soap, ns1__GetLastRequestDateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetLastRequestDate_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetLastRequestDate *ns1__GetLastRequestDate)
{	struct __ns1__GetLastRequestDate_ soap_tmp___ns1__GetLastRequestDate_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1/webservice/cwebservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.tiama-inspection.com/GetLastRequestDate";
	soap_tmp___ns1__GetLastRequestDate_.ns1__GetLastRequestDate = ns1__GetLastRequestDate;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLastRequestDate_(soap, &soap_tmp___ns1__GetLastRequestDate_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLastRequestDate_(soap, &soap_tmp___ns1__GetLastRequestDate_, "-ns1:GetLastRequestDate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLastRequestDate_(soap, &soap_tmp___ns1__GetLastRequestDate_, "-ns1:GetLastRequestDate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetLastRequestDate_(struct soap *soap, _ns1__GetLastRequestDateResponse &ns1__GetLastRequestDateResponse)
{
	ns1__GetLastRequestDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLastRequestDateResponse.soap_get(soap, "ns1:GetLastRequestDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

} // namespace protocolv2


#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of protocolv2Client.cpp */
