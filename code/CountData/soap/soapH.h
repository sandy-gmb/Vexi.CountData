/* soapH.h
   Generated by gSOAP 2.8.111 for service.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, const char*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void * SOAP_FMAC4 soap_dupelement(struct soap*, const void*, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_delelement(const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);
SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap *soap, struct soap_clist*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fbase(int, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_finsert(struct soap*, int, int, void*, size_t, const void*, void**);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

inline void soap_default_byte(struct soap *soap, char *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_byte
	*a = SOAP_DEFAULT_byte;
#else
	*a = (char)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

inline int soap_write_byte(struct soap *soap, char const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_byte(soap, p, "byte", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_byte(struct soap *soap, const char *URL, char const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_byte(soap, p, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_byte(struct soap *soap, const char *URL, char const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_byte(soap, p, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_byte(struct soap *soap, const char *URL, char const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_byte(soap, p, "byte", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

inline int soap_read_byte(struct soap *soap, char *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_byte(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_byte(struct soap *soap, const char *URL, char *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_byte(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_byte(struct soap *soap, char *p)
{
	if (::soap_read_byte(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

inline void soap_default_int(struct soap *soap, int *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_int
	*a = SOAP_DEFAULT_int;
#else
	*a = (int)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

inline int soap_write_int(struct soap *soap, int const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_int(soap, p, "int", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_int(struct soap *soap, const char *URL, int const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_int(soap, p, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_int(struct soap *soap, const char *URL, int const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_int(soap, p, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_int(struct soap *soap, const char *URL, int const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_int(soap, p, "int", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

inline int soap_read_int(struct soap *soap, int *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_int(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_int(struct soap *soap, const char *URL, int *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_int(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_int(struct soap *soap, int *p)
{
	if (::soap_read_int(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__EResetMode_DEFINED
#define SOAP_TYPE_ns1__EResetMode_DEFINED

inline void soap_default_ns1__EResetMode(struct soap *soap, enum ns1__EResetMode *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_ns1__EResetMode
	*a = SOAP_DEFAULT_ns1__EResetMode;
#else
	*a = (enum ns1__EResetMode)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__EResetMode(struct soap*, const char*, int, const enum ns1__EResetMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns1__EResetMode2s(struct soap*, enum ns1__EResetMode);
SOAP_FMAC3 enum ns1__EResetMode * SOAP_FMAC4 soap_in_ns1__EResetMode(struct soap*, const char*, enum ns1__EResetMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns1__EResetMode(struct soap*, const char*, enum ns1__EResetMode *);

SOAP_FMAC3 enum ns1__EResetMode * SOAP_FMAC4 soap_new_ns1__EResetMode(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__EResetMode(struct soap*, const enum ns1__EResetMode *, const char*, const char*);

inline int soap_write_ns1__EResetMode(struct soap *soap, enum ns1__EResetMode const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_ns1__EResetMode(soap, p, "ns1:EResetMode", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_ns1__EResetMode(struct soap *soap, const char *URL, enum ns1__EResetMode const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_ns1__EResetMode(soap, p, "ns1:EResetMode", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__EResetMode(struct soap *soap, const char *URL, enum ns1__EResetMode const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_ns1__EResetMode(soap, p, "ns1:EResetMode", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__EResetMode(struct soap *soap, const char *URL, enum ns1__EResetMode const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_ns1__EResetMode(soap, p, "ns1:EResetMode", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum ns1__EResetMode * SOAP_FMAC4 soap_get_ns1__EResetMode(struct soap*, enum ns1__EResetMode *, const char*, const char*);

inline int soap_read_ns1__EResetMode(struct soap *soap, enum ns1__EResetMode *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_ns1__EResetMode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__EResetMode(struct soap *soap, const char *URL, enum ns1__EResetMode *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__EResetMode(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__EResetMode(struct soap *soap, enum ns1__EResetMode *p)
{
	if (::soap_read_ns1__EResetMode(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__CodeDetection_DEFINED
#define SOAP_TYPE_ns1__CodeDetection_DEFINED

inline void soap_default_ns1__CodeDetection(struct soap *soap, enum ns1__CodeDetection *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_ns1__CodeDetection
	*a = SOAP_DEFAULT_ns1__CodeDetection;
#else
	*a = (enum ns1__CodeDetection)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__CodeDetection(struct soap*, const char*, int, const enum ns1__CodeDetection *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns1__CodeDetection2s(struct soap*, enum ns1__CodeDetection);
SOAP_FMAC3 enum ns1__CodeDetection * SOAP_FMAC4 soap_in_ns1__CodeDetection(struct soap*, const char*, enum ns1__CodeDetection *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns1__CodeDetection(struct soap*, const char*, enum ns1__CodeDetection *);

SOAP_FMAC3 enum ns1__CodeDetection * SOAP_FMAC4 soap_new_ns1__CodeDetection(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__CodeDetection(struct soap*, const enum ns1__CodeDetection *, const char*, const char*);

inline int soap_write_ns1__CodeDetection(struct soap *soap, enum ns1__CodeDetection const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_ns1__CodeDetection(soap, p, "ns1:CodeDetection", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_ns1__CodeDetection(struct soap *soap, const char *URL, enum ns1__CodeDetection const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_ns1__CodeDetection(soap, p, "ns1:CodeDetection", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__CodeDetection(struct soap *soap, const char *URL, enum ns1__CodeDetection const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_ns1__CodeDetection(soap, p, "ns1:CodeDetection", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__CodeDetection(struct soap *soap, const char *URL, enum ns1__CodeDetection const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_ns1__CodeDetection(soap, p, "ns1:CodeDetection", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum ns1__CodeDetection * SOAP_FMAC4 soap_get_ns1__CodeDetection(struct soap*, enum ns1__CodeDetection *, const char*, const char*);

inline int soap_read_ns1__CodeDetection(struct soap *soap, enum ns1__CodeDetection *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_ns1__CodeDetection(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__CodeDetection(struct soap *soap, const char *URL, enum ns1__CodeDetection *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__CodeDetection(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__CodeDetection(struct soap *soap, enum ns1__CodeDetection *p)
{
	if (::soap_read_ns1__CodeDetection(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ChangeSamplesResponse_ChangeSamplesResult_DEFINED
#define SOAP_TYPE__ns1__ChangeSamplesResponse_ChangeSamplesResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap*, const char*, int, const _ns1__ChangeSamplesResponse_ChangeSamplesResult *, const char*);
SOAP_FMAC3 _ns1__ChangeSamplesResponse_ChangeSamplesResult * SOAP_FMAC4 soap_in__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap*, const char*, _ns1__ChangeSamplesResponse_ChangeSamplesResult *, const char*);
SOAP_FMAC1 _ns1__ChangeSamplesResponse_ChangeSamplesResult * SOAP_FMAC2 soap_instantiate__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ChangeSamplesResponse_ChangeSamplesResult * soap_new__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ChangeSamplesResponse_ChangeSamplesResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__ChangeSamplesResponse_ChangeSamplesResult * soap_new_req__ns1__ChangeSamplesResponse_ChangeSamplesResult(
	struct soap *soap)
{
	_ns1__ChangeSamplesResponse_ChangeSamplesResult *_p = ::soap_new__ns1__ChangeSamplesResponse_ChangeSamplesResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ChangeSamplesResponse_ChangeSamplesResult * soap_new_set__ns1__ChangeSamplesResponse_ChangeSamplesResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__ChangeSamplesResponse_ChangeSamplesResult *_p = ::soap_new__ns1__ChangeSamplesResponse_ChangeSamplesResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeSamplesResponse_ChangeSamplesResult::__any = __any;
		_p->_ns1__ChangeSamplesResponse_ChangeSamplesResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap *soap, _ns1__ChangeSamplesResponse_ChangeSamplesResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamplesResponse-ChangeSamplesResult", p->soap_type() == SOAP_TYPE__ns1__ChangeSamplesResponse_ChangeSamplesResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap *soap, const char *URL, _ns1__ChangeSamplesResponse_ChangeSamplesResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamplesResponse-ChangeSamplesResult", p->soap_type() == SOAP_TYPE__ns1__ChangeSamplesResponse_ChangeSamplesResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap *soap, const char *URL, _ns1__ChangeSamplesResponse_ChangeSamplesResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamplesResponse-ChangeSamplesResult", p->soap_type() == SOAP_TYPE__ns1__ChangeSamplesResponse_ChangeSamplesResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap *soap, const char *URL, _ns1__ChangeSamplesResponse_ChangeSamplesResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamplesResponse-ChangeSamplesResult", p->soap_type() == SOAP_TYPE__ns1__ChangeSamplesResponse_ChangeSamplesResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ChangeSamplesResponse_ChangeSamplesResult * SOAP_FMAC4 soap_get__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap*, _ns1__ChangeSamplesResponse_ChangeSamplesResult *, const char*, const char*);

inline int soap_read__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap *soap, _ns1__ChangeSamplesResponse_ChangeSamplesResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ChangeSamplesResponse_ChangeSamplesResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap *soap, const char *URL, _ns1__ChangeSamplesResponse_ChangeSamplesResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ChangeSamplesResponse_ChangeSamplesResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap *soap, _ns1__ChangeSamplesResponse_ChangeSamplesResult *p)
{
	if (::soap_read__ns1__ChangeSamplesResponse_ChangeSamplesResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetVersionsResponse_GetVersionsResult_DEFINED
#define SOAP_TYPE__ns1__GetVersionsResponse_GetVersionsResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetVersionsResponse_GetVersionsResult(struct soap*, const char*, int, const _ns1__GetVersionsResponse_GetVersionsResult *, const char*);
SOAP_FMAC3 _ns1__GetVersionsResponse_GetVersionsResult * SOAP_FMAC4 soap_in__ns1__GetVersionsResponse_GetVersionsResult(struct soap*, const char*, _ns1__GetVersionsResponse_GetVersionsResult *, const char*);
SOAP_FMAC1 _ns1__GetVersionsResponse_GetVersionsResult * SOAP_FMAC2 soap_instantiate__ns1__GetVersionsResponse_GetVersionsResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetVersionsResponse_GetVersionsResult * soap_new__ns1__GetVersionsResponse_GetVersionsResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetVersionsResponse_GetVersionsResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetVersionsResponse_GetVersionsResult * soap_new_req__ns1__GetVersionsResponse_GetVersionsResult(
	struct soap *soap)
{
	_ns1__GetVersionsResponse_GetVersionsResult *_p = ::soap_new__ns1__GetVersionsResponse_GetVersionsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetVersionsResponse_GetVersionsResult * soap_new_set__ns1__GetVersionsResponse_GetVersionsResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__GetVersionsResponse_GetVersionsResult *_p = ::soap_new__ns1__GetVersionsResponse_GetVersionsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetVersionsResponse_GetVersionsResult::__any = __any;
		_p->_ns1__GetVersionsResponse_GetVersionsResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__GetVersionsResponse_GetVersionsResult(struct soap *soap, _ns1__GetVersionsResponse_GetVersionsResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersionsResponse-GetVersionsResult", p->soap_type() == SOAP_TYPE__ns1__GetVersionsResponse_GetVersionsResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetVersionsResponse_GetVersionsResult(struct soap *soap, const char *URL, _ns1__GetVersionsResponse_GetVersionsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersionsResponse-GetVersionsResult", p->soap_type() == SOAP_TYPE__ns1__GetVersionsResponse_GetVersionsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetVersionsResponse_GetVersionsResult(struct soap *soap, const char *URL, _ns1__GetVersionsResponse_GetVersionsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersionsResponse-GetVersionsResult", p->soap_type() == SOAP_TYPE__ns1__GetVersionsResponse_GetVersionsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetVersionsResponse_GetVersionsResult(struct soap *soap, const char *URL, _ns1__GetVersionsResponse_GetVersionsResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersionsResponse-GetVersionsResult", p->soap_type() == SOAP_TYPE__ns1__GetVersionsResponse_GetVersionsResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetVersionsResponse_GetVersionsResult * SOAP_FMAC4 soap_get__ns1__GetVersionsResponse_GetVersionsResult(struct soap*, _ns1__GetVersionsResponse_GetVersionsResult *, const char*, const char*);

inline int soap_read__ns1__GetVersionsResponse_GetVersionsResult(struct soap *soap, _ns1__GetVersionsResponse_GetVersionsResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetVersionsResponse_GetVersionsResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetVersionsResponse_GetVersionsResult(struct soap *soap, const char *URL, _ns1__GetVersionsResponse_GetVersionsResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetVersionsResponse_GetVersionsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetVersionsResponse_GetVersionsResult(struct soap *soap, _ns1__GetVersionsResponse_GetVersionsResult *p)
{
	if (::soap_read__ns1__GetVersionsResponse_GetVersionsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult_DEFINED
#define SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap*, const char*, int, const _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *, const char*);
SOAP_FMAC3 _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult * SOAP_FMAC4 soap_in__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap*, const char*, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *, const char*);
SOAP_FMAC1 _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult * SOAP_FMAC2 soap_instantiate__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult * soap_new__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult * soap_new_req__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(
	struct soap *soap)
{
	_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *_p = ::soap_new__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult * soap_new_set__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *_p = ::soap_new__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult::__any = __any;
		_p->_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap *soap, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTableResponse-ChangeMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTableResponse-ChangeMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTableResponse-ChangeMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTableResponse-ChangeMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult * SOAP_FMAC4 soap_get__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap*, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *, const char*, const char*);

inline int soap_read__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap *soap, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap *soap, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *p)
{
	if (::soap_read__ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult_DEFINED
#define SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap*, const char*, int, const _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *, const char*);
SOAP_FMAC3 _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult * SOAP_FMAC4 soap_in__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap*, const char*, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *, const char*);
SOAP_FMAC1 _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult * SOAP_FMAC2 soap_instantiate__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult * soap_new__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult * soap_new_req__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(
	struct soap *soap)
{
	_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *_p = ::soap_new__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult * soap_new_set__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *_p = ::soap_new__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult::__any = __any;
		_p->_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap *soap, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTableResponse-EraseMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTableResponse-EraseMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTableResponse-EraseMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTableResponse-EraseMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult * SOAP_FMAC4 soap_get__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap*, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *, const char*, const char*);

inline int soap_read__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap *soap, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap *soap, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *p)
{
	if (::soap_read__ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult_DEFINED
#define SOAP_TYPE__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap*, const char*, int, const _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *, const char*);
SOAP_FMAC3 _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult * SOAP_FMAC4 soap_in__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap*, const char*, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *, const char*);
SOAP_FMAC1 _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult * SOAP_FMAC2 soap_instantiate__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult * soap_new__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult * soap_new_req__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(
	struct soap *soap)
{
	_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *_p = ::soap_new__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult * soap_new_set__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *_p = ::soap_new__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult::__any = __any;
		_p->_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap *soap, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMoldsResponse-ChangeMountedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap *soap, const char *URL, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMoldsResponse-ChangeMountedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap *soap, const char *URL, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMoldsResponse-ChangeMountedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap *soap, const char *URL, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMoldsResponse-ChangeMountedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult * SOAP_FMAC4 soap_get__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap*, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *, const char*, const char*);

inline int soap_read__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap *soap, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap *soap, const char *URL, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap *soap, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *p)
{
	if (::soap_read__ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult_DEFINED
#define SOAP_TYPE__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap*, const char*, int, const _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *, const char*);
SOAP_FMAC3 _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult * SOAP_FMAC4 soap_in__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap*, const char*, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *, const char*);
SOAP_FMAC1 _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult * SOAP_FMAC2 soap_instantiate__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult * soap_new__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult * soap_new_req__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(
	struct soap *soap)
{
	_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *_p = ::soap_new__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult * soap_new_set__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *_p = ::soap_new__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult::__any = __any;
		_p->_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap *soap, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTableResponse-GetMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTableResponse-GetMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTableResponse-GetMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTableResponse-GetMoldsInSampleTableResult", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult * SOAP_FMAC4 soap_get__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap*, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *, const char*, const char*);

inline int soap_read__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap *soap, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap *soap, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *p)
{
	if (::soap_read__ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__EjectedMoldsResponse_EjectedMoldsResult_DEFINED
#define SOAP_TYPE__ns1__EjectedMoldsResponse_EjectedMoldsResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap*, const char*, int, const _ns1__EjectedMoldsResponse_EjectedMoldsResult *, const char*);
SOAP_FMAC3 _ns1__EjectedMoldsResponse_EjectedMoldsResult * SOAP_FMAC4 soap_in__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap*, const char*, _ns1__EjectedMoldsResponse_EjectedMoldsResult *, const char*);
SOAP_FMAC1 _ns1__EjectedMoldsResponse_EjectedMoldsResult * SOAP_FMAC2 soap_instantiate__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__EjectedMoldsResponse_EjectedMoldsResult * soap_new__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__EjectedMoldsResponse_EjectedMoldsResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__EjectedMoldsResponse_EjectedMoldsResult * soap_new_req__ns1__EjectedMoldsResponse_EjectedMoldsResult(
	struct soap *soap)
{
	_ns1__EjectedMoldsResponse_EjectedMoldsResult *_p = ::soap_new__ns1__EjectedMoldsResponse_EjectedMoldsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__EjectedMoldsResponse_EjectedMoldsResult * soap_new_set__ns1__EjectedMoldsResponse_EjectedMoldsResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__EjectedMoldsResponse_EjectedMoldsResult *_p = ::soap_new__ns1__EjectedMoldsResponse_EjectedMoldsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__EjectedMoldsResponse_EjectedMoldsResult::__any = __any;
		_p->_ns1__EjectedMoldsResponse_EjectedMoldsResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap *soap, _ns1__EjectedMoldsResponse_EjectedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMoldsResponse-EjectedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__EjectedMoldsResponse_EjectedMoldsResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap *soap, const char *URL, _ns1__EjectedMoldsResponse_EjectedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMoldsResponse-EjectedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__EjectedMoldsResponse_EjectedMoldsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap *soap, const char *URL, _ns1__EjectedMoldsResponse_EjectedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMoldsResponse-EjectedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__EjectedMoldsResponse_EjectedMoldsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap *soap, const char *URL, _ns1__EjectedMoldsResponse_EjectedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMoldsResponse-EjectedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__EjectedMoldsResponse_EjectedMoldsResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__EjectedMoldsResponse_EjectedMoldsResult * SOAP_FMAC4 soap_get__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap*, _ns1__EjectedMoldsResponse_EjectedMoldsResult *, const char*, const char*);

inline int soap_read__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap *soap, _ns1__EjectedMoldsResponse_EjectedMoldsResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__EjectedMoldsResponse_EjectedMoldsResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap *soap, const char *URL, _ns1__EjectedMoldsResponse_EjectedMoldsResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__EjectedMoldsResponse_EjectedMoldsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap *soap, _ns1__EjectedMoldsResponse_EjectedMoldsResult *p)
{
	if (::soap_read__ns1__EjectedMoldsResponse_EjectedMoldsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ReadenMoldsResponse_ReadenMoldsResult_DEFINED
#define SOAP_TYPE__ns1__ReadenMoldsResponse_ReadenMoldsResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap*, const char*, int, const _ns1__ReadenMoldsResponse_ReadenMoldsResult *, const char*);
SOAP_FMAC3 _ns1__ReadenMoldsResponse_ReadenMoldsResult * SOAP_FMAC4 soap_in__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap*, const char*, _ns1__ReadenMoldsResponse_ReadenMoldsResult *, const char*);
SOAP_FMAC1 _ns1__ReadenMoldsResponse_ReadenMoldsResult * SOAP_FMAC2 soap_instantiate__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ReadenMoldsResponse_ReadenMoldsResult * soap_new__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ReadenMoldsResponse_ReadenMoldsResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__ReadenMoldsResponse_ReadenMoldsResult * soap_new_req__ns1__ReadenMoldsResponse_ReadenMoldsResult(
	struct soap *soap)
{
	_ns1__ReadenMoldsResponse_ReadenMoldsResult *_p = ::soap_new__ns1__ReadenMoldsResponse_ReadenMoldsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ReadenMoldsResponse_ReadenMoldsResult * soap_new_set__ns1__ReadenMoldsResponse_ReadenMoldsResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__ReadenMoldsResponse_ReadenMoldsResult *_p = ::soap_new__ns1__ReadenMoldsResponse_ReadenMoldsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ReadenMoldsResponse_ReadenMoldsResult::__any = __any;
		_p->_ns1__ReadenMoldsResponse_ReadenMoldsResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap *soap, _ns1__ReadenMoldsResponse_ReadenMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMoldsResponse-ReadenMoldsResult", p->soap_type() == SOAP_TYPE__ns1__ReadenMoldsResponse_ReadenMoldsResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap *soap, const char *URL, _ns1__ReadenMoldsResponse_ReadenMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMoldsResponse-ReadenMoldsResult", p->soap_type() == SOAP_TYPE__ns1__ReadenMoldsResponse_ReadenMoldsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap *soap, const char *URL, _ns1__ReadenMoldsResponse_ReadenMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMoldsResponse-ReadenMoldsResult", p->soap_type() == SOAP_TYPE__ns1__ReadenMoldsResponse_ReadenMoldsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap *soap, const char *URL, _ns1__ReadenMoldsResponse_ReadenMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMoldsResponse-ReadenMoldsResult", p->soap_type() == SOAP_TYPE__ns1__ReadenMoldsResponse_ReadenMoldsResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ReadenMoldsResponse_ReadenMoldsResult * SOAP_FMAC4 soap_get__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap*, _ns1__ReadenMoldsResponse_ReadenMoldsResult *, const char*, const char*);

inline int soap_read__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap *soap, _ns1__ReadenMoldsResponse_ReadenMoldsResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ReadenMoldsResponse_ReadenMoldsResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap *soap, const char *URL, _ns1__ReadenMoldsResponse_ReadenMoldsResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ReadenMoldsResponse_ReadenMoldsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap *soap, _ns1__ReadenMoldsResponse_ReadenMoldsResult *p)
{
	if (::soap_read__ns1__ReadenMoldsResponse_ReadenMoldsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__CumulCountsResponse_CumulCountsResult_DEFINED
#define SOAP_TYPE__ns1__CumulCountsResponse_CumulCountsResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CumulCountsResponse_CumulCountsResult(struct soap*, const char*, int, const _ns1__CumulCountsResponse_CumulCountsResult *, const char*);
SOAP_FMAC3 _ns1__CumulCountsResponse_CumulCountsResult * SOAP_FMAC4 soap_in__ns1__CumulCountsResponse_CumulCountsResult(struct soap*, const char*, _ns1__CumulCountsResponse_CumulCountsResult *, const char*);
SOAP_FMAC1 _ns1__CumulCountsResponse_CumulCountsResult * SOAP_FMAC2 soap_instantiate__ns1__CumulCountsResponse_CumulCountsResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CumulCountsResponse_CumulCountsResult * soap_new__ns1__CumulCountsResponse_CumulCountsResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__CumulCountsResponse_CumulCountsResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__CumulCountsResponse_CumulCountsResult * soap_new_req__ns1__CumulCountsResponse_CumulCountsResult(
	struct soap *soap)
{
	_ns1__CumulCountsResponse_CumulCountsResult *_p = ::soap_new__ns1__CumulCountsResponse_CumulCountsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__CumulCountsResponse_CumulCountsResult * soap_new_set__ns1__CumulCountsResponse_CumulCountsResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__CumulCountsResponse_CumulCountsResult *_p = ::soap_new__ns1__CumulCountsResponse_CumulCountsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CumulCountsResponse_CumulCountsResult::__any = __any;
		_p->_ns1__CumulCountsResponse_CumulCountsResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__CumulCountsResponse_CumulCountsResult(struct soap *soap, _ns1__CumulCountsResponse_CumulCountsResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCountsResponse-CumulCountsResult", p->soap_type() == SOAP_TYPE__ns1__CumulCountsResponse_CumulCountsResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__CumulCountsResponse_CumulCountsResult(struct soap *soap, const char *URL, _ns1__CumulCountsResponse_CumulCountsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCountsResponse-CumulCountsResult", p->soap_type() == SOAP_TYPE__ns1__CumulCountsResponse_CumulCountsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__CumulCountsResponse_CumulCountsResult(struct soap *soap, const char *URL, _ns1__CumulCountsResponse_CumulCountsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCountsResponse-CumulCountsResult", p->soap_type() == SOAP_TYPE__ns1__CumulCountsResponse_CumulCountsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__CumulCountsResponse_CumulCountsResult(struct soap *soap, const char *URL, _ns1__CumulCountsResponse_CumulCountsResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCountsResponse-CumulCountsResult", p->soap_type() == SOAP_TYPE__ns1__CumulCountsResponse_CumulCountsResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__CumulCountsResponse_CumulCountsResult * SOAP_FMAC4 soap_get__ns1__CumulCountsResponse_CumulCountsResult(struct soap*, _ns1__CumulCountsResponse_CumulCountsResult *, const char*, const char*);

inline int soap_read__ns1__CumulCountsResponse_CumulCountsResult(struct soap *soap, _ns1__CumulCountsResponse_CumulCountsResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__CumulCountsResponse_CumulCountsResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__CumulCountsResponse_CumulCountsResult(struct soap *soap, const char *URL, _ns1__CumulCountsResponse_CumulCountsResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__CumulCountsResponse_CumulCountsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__CumulCountsResponse_CumulCountsResult(struct soap *soap, _ns1__CumulCountsResponse_CumulCountsResult *p)
{
	if (::soap_read__ns1__CumulCountsResponse_CumulCountsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__MeasuresResponse_MeasuresResult_DEFINED
#define SOAP_TYPE__ns1__MeasuresResponse_MeasuresResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__MeasuresResponse_MeasuresResult(struct soap*, const char*, int, const _ns1__MeasuresResponse_MeasuresResult *, const char*);
SOAP_FMAC3 _ns1__MeasuresResponse_MeasuresResult * SOAP_FMAC4 soap_in__ns1__MeasuresResponse_MeasuresResult(struct soap*, const char*, _ns1__MeasuresResponse_MeasuresResult *, const char*);
SOAP_FMAC1 _ns1__MeasuresResponse_MeasuresResult * SOAP_FMAC2 soap_instantiate__ns1__MeasuresResponse_MeasuresResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__MeasuresResponse_MeasuresResult * soap_new__ns1__MeasuresResponse_MeasuresResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__MeasuresResponse_MeasuresResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__MeasuresResponse_MeasuresResult * soap_new_req__ns1__MeasuresResponse_MeasuresResult(
	struct soap *soap)
{
	_ns1__MeasuresResponse_MeasuresResult *_p = ::soap_new__ns1__MeasuresResponse_MeasuresResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__MeasuresResponse_MeasuresResult * soap_new_set__ns1__MeasuresResponse_MeasuresResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__MeasuresResponse_MeasuresResult *_p = ::soap_new__ns1__MeasuresResponse_MeasuresResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__MeasuresResponse_MeasuresResult::__any = __any;
		_p->_ns1__MeasuresResponse_MeasuresResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__MeasuresResponse_MeasuresResult(struct soap *soap, _ns1__MeasuresResponse_MeasuresResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MeasuresResponse-MeasuresResult", p->soap_type() == SOAP_TYPE__ns1__MeasuresResponse_MeasuresResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__MeasuresResponse_MeasuresResult(struct soap *soap, const char *URL, _ns1__MeasuresResponse_MeasuresResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MeasuresResponse-MeasuresResult", p->soap_type() == SOAP_TYPE__ns1__MeasuresResponse_MeasuresResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__MeasuresResponse_MeasuresResult(struct soap *soap, const char *URL, _ns1__MeasuresResponse_MeasuresResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MeasuresResponse-MeasuresResult", p->soap_type() == SOAP_TYPE__ns1__MeasuresResponse_MeasuresResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__MeasuresResponse_MeasuresResult(struct soap *soap, const char *URL, _ns1__MeasuresResponse_MeasuresResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MeasuresResponse-MeasuresResult", p->soap_type() == SOAP_TYPE__ns1__MeasuresResponse_MeasuresResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__MeasuresResponse_MeasuresResult * SOAP_FMAC4 soap_get__ns1__MeasuresResponse_MeasuresResult(struct soap*, _ns1__MeasuresResponse_MeasuresResult *, const char*, const char*);

inline int soap_read__ns1__MeasuresResponse_MeasuresResult(struct soap *soap, _ns1__MeasuresResponse_MeasuresResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__MeasuresResponse_MeasuresResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__MeasuresResponse_MeasuresResult(struct soap *soap, const char *URL, _ns1__MeasuresResponse_MeasuresResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__MeasuresResponse_MeasuresResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__MeasuresResponse_MeasuresResult(struct soap *soap, _ns1__MeasuresResponse_MeasuresResult *p)
{
	if (::soap_read__ns1__MeasuresResponse_MeasuresResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__MountedMoldsResponse_MountedMoldsResult_DEFINED
#define SOAP_TYPE__ns1__MountedMoldsResponse_MountedMoldsResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap*, const char*, int, const _ns1__MountedMoldsResponse_MountedMoldsResult *, const char*);
SOAP_FMAC3 _ns1__MountedMoldsResponse_MountedMoldsResult * SOAP_FMAC4 soap_in__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap*, const char*, _ns1__MountedMoldsResponse_MountedMoldsResult *, const char*);
SOAP_FMAC1 _ns1__MountedMoldsResponse_MountedMoldsResult * SOAP_FMAC2 soap_instantiate__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__MountedMoldsResponse_MountedMoldsResult * soap_new__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__MountedMoldsResponse_MountedMoldsResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__MountedMoldsResponse_MountedMoldsResult * soap_new_req__ns1__MountedMoldsResponse_MountedMoldsResult(
	struct soap *soap)
{
	_ns1__MountedMoldsResponse_MountedMoldsResult *_p = ::soap_new__ns1__MountedMoldsResponse_MountedMoldsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__MountedMoldsResponse_MountedMoldsResult * soap_new_set__ns1__MountedMoldsResponse_MountedMoldsResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__MountedMoldsResponse_MountedMoldsResult *_p = ::soap_new__ns1__MountedMoldsResponse_MountedMoldsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__MountedMoldsResponse_MountedMoldsResult::__any = __any;
		_p->_ns1__MountedMoldsResponse_MountedMoldsResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap *soap, _ns1__MountedMoldsResponse_MountedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsResponse-MountedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__MountedMoldsResponse_MountedMoldsResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap *soap, const char *URL, _ns1__MountedMoldsResponse_MountedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsResponse-MountedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__MountedMoldsResponse_MountedMoldsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap *soap, const char *URL, _ns1__MountedMoldsResponse_MountedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsResponse-MountedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__MountedMoldsResponse_MountedMoldsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap *soap, const char *URL, _ns1__MountedMoldsResponse_MountedMoldsResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsResponse-MountedMoldsResult", p->soap_type() == SOAP_TYPE__ns1__MountedMoldsResponse_MountedMoldsResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__MountedMoldsResponse_MountedMoldsResult * SOAP_FMAC4 soap_get__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap*, _ns1__MountedMoldsResponse_MountedMoldsResult *, const char*, const char*);

inline int soap_read__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap *soap, _ns1__MountedMoldsResponse_MountedMoldsResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__MountedMoldsResponse_MountedMoldsResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap *soap, const char *URL, _ns1__MountedMoldsResponse_MountedMoldsResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__MountedMoldsResponse_MountedMoldsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__MountedMoldsResponse_MountedMoldsResult(struct soap *soap, _ns1__MountedMoldsResponse_MountedMoldsResult *p)
{
	if (::soap_read__ns1__MountedMoldsResponse_MountedMoldsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetAlarmsResponse_GetAlarmsResult_DEFINED
#define SOAP_TYPE__ns1__GetAlarmsResponse_GetAlarmsResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap*, const char*, int, const _ns1__GetAlarmsResponse_GetAlarmsResult *, const char*);
SOAP_FMAC3 _ns1__GetAlarmsResponse_GetAlarmsResult * SOAP_FMAC4 soap_in__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap*, const char*, _ns1__GetAlarmsResponse_GetAlarmsResult *, const char*);
SOAP_FMAC1 _ns1__GetAlarmsResponse_GetAlarmsResult * SOAP_FMAC2 soap_instantiate__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAlarmsResponse_GetAlarmsResult * soap_new__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetAlarmsResponse_GetAlarmsResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetAlarmsResponse_GetAlarmsResult * soap_new_req__ns1__GetAlarmsResponse_GetAlarmsResult(
	struct soap *soap)
{
	_ns1__GetAlarmsResponse_GetAlarmsResult *_p = ::soap_new__ns1__GetAlarmsResponse_GetAlarmsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetAlarmsResponse_GetAlarmsResult * soap_new_set__ns1__GetAlarmsResponse_GetAlarmsResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__GetAlarmsResponse_GetAlarmsResult *_p = ::soap_new__ns1__GetAlarmsResponse_GetAlarmsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetAlarmsResponse_GetAlarmsResult::__any = __any;
		_p->_ns1__GetAlarmsResponse_GetAlarmsResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap *soap, _ns1__GetAlarmsResponse_GetAlarmsResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsResponse-GetAlarmsResult", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsResponse_GetAlarmsResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap *soap, const char *URL, _ns1__GetAlarmsResponse_GetAlarmsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsResponse-GetAlarmsResult", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsResponse_GetAlarmsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap *soap, const char *URL, _ns1__GetAlarmsResponse_GetAlarmsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsResponse-GetAlarmsResult", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsResponse_GetAlarmsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap *soap, const char *URL, _ns1__GetAlarmsResponse_GetAlarmsResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsResponse-GetAlarmsResult", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsResponse_GetAlarmsResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetAlarmsResponse_GetAlarmsResult * SOAP_FMAC4 soap_get__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap*, _ns1__GetAlarmsResponse_GetAlarmsResult *, const char*, const char*);

inline int soap_read__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap *soap, _ns1__GetAlarmsResponse_GetAlarmsResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetAlarmsResponse_GetAlarmsResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap *soap, const char *URL, _ns1__GetAlarmsResponse_GetAlarmsResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetAlarmsResponse_GetAlarmsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetAlarmsResponse_GetAlarmsResult(struct soap *soap, _ns1__GetAlarmsResponse_GetAlarmsResult *p)
{
	if (::soap_read__ns1__GetAlarmsResponse_GetAlarmsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult_DEFINED
#define SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap*, const char*, int, const _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *, const char*);
SOAP_FMAC3 _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult * SOAP_FMAC4 soap_in__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap*, const char*, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *, const char*);
SOAP_FMAC1 _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult * SOAP_FMAC2 soap_instantiate__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult * soap_new__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult * soap_new_req__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(
	struct soap *soap)
{
	_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *_p = ::soap_new__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult * soap_new_set__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *_p = ::soap_new__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult::__any = __any;
		_p->_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap *soap, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQueryResponse-GetAlarmsSinceLastQueryResult", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQueryResponse-GetAlarmsSinceLastQueryResult", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQueryResponse-GetAlarmsSinceLastQueryResult", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQueryResponse-GetAlarmsSinceLastQueryResult", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult * SOAP_FMAC4 soap_get__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap*, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *, const char*, const char*);

inline int soap_read__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap *soap, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap *soap, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *p)
{
	if (::soap_read__ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__CountsResponse_CountsResult_DEFINED
#define SOAP_TYPE__ns1__CountsResponse_CountsResult_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CountsResponse_CountsResult(struct soap*, const char*, int, const _ns1__CountsResponse_CountsResult *, const char*);
SOAP_FMAC3 _ns1__CountsResponse_CountsResult * SOAP_FMAC4 soap_in__ns1__CountsResponse_CountsResult(struct soap*, const char*, _ns1__CountsResponse_CountsResult *, const char*);
SOAP_FMAC1 _ns1__CountsResponse_CountsResult * SOAP_FMAC2 soap_instantiate__ns1__CountsResponse_CountsResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CountsResponse_CountsResult * soap_new__ns1__CountsResponse_CountsResult(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__CountsResponse_CountsResult(soap, n, NULL, NULL, NULL);
}

inline _ns1__CountsResponse_CountsResult * soap_new_req__ns1__CountsResponse_CountsResult(
	struct soap *soap)
{
	_ns1__CountsResponse_CountsResult *_p = ::soap_new__ns1__CountsResponse_CountsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__CountsResponse_CountsResult * soap_new_set__ns1__CountsResponse_CountsResult(
	struct soap *soap,
	char *__any,
	char *__mixed)
{
	_ns1__CountsResponse_CountsResult *_p = ::soap_new__ns1__CountsResponse_CountsResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CountsResponse_CountsResult::__any = __any;
		_p->_ns1__CountsResponse_CountsResult::__mixed = __mixed;
	}
	return _p;
}

inline int soap_write__ns1__CountsResponse_CountsResult(struct soap *soap, _ns1__CountsResponse_CountsResult const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CountsResponse-CountsResult", p->soap_type() == SOAP_TYPE__ns1__CountsResponse_CountsResult ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__CountsResponse_CountsResult(struct soap *soap, const char *URL, _ns1__CountsResponse_CountsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CountsResponse-CountsResult", p->soap_type() == SOAP_TYPE__ns1__CountsResponse_CountsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__CountsResponse_CountsResult(struct soap *soap, const char *URL, _ns1__CountsResponse_CountsResult const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CountsResponse-CountsResult", p->soap_type() == SOAP_TYPE__ns1__CountsResponse_CountsResult ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__CountsResponse_CountsResult(struct soap *soap, const char *URL, _ns1__CountsResponse_CountsResult const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CountsResponse-CountsResult", p->soap_type() == SOAP_TYPE__ns1__CountsResponse_CountsResult ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__CountsResponse_CountsResult * SOAP_FMAC4 soap_get__ns1__CountsResponse_CountsResult(struct soap*, _ns1__CountsResponse_CountsResult *, const char*, const char*);

inline int soap_read__ns1__CountsResponse_CountsResult(struct soap *soap, _ns1__CountsResponse_CountsResult *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__CountsResponse_CountsResult(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__CountsResponse_CountsResult(struct soap *soap, const char *URL, _ns1__CountsResponse_CountsResult *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__CountsResponse_CountsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__CountsResponse_CountsResult(struct soap *soap, _ns1__CountsResponse_CountsResult *p)
{
	if (::soap_read__ns1__CountsResponse_CountsResult(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ChangeSamplesResponse_DEFINED
#define SOAP_TYPE__ns1__ChangeSamplesResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ChangeSamplesResponse(struct soap*, const char*, int, const _ns1__ChangeSamplesResponse *, const char*);
SOAP_FMAC3 _ns1__ChangeSamplesResponse * SOAP_FMAC4 soap_in__ns1__ChangeSamplesResponse(struct soap*, const char*, _ns1__ChangeSamplesResponse *, const char*);
SOAP_FMAC1 _ns1__ChangeSamplesResponse * SOAP_FMAC2 soap_instantiate__ns1__ChangeSamplesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ChangeSamplesResponse * soap_new__ns1__ChangeSamplesResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ChangeSamplesResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__ChangeSamplesResponse * soap_new_req__ns1__ChangeSamplesResponse(
	struct soap *soap)
{
	_ns1__ChangeSamplesResponse *_p = ::soap_new__ns1__ChangeSamplesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ChangeSamplesResponse * soap_new_set__ns1__ChangeSamplesResponse(
	struct soap *soap,
	_ns1__ChangeSamplesResponse_ChangeSamplesResult *ChangeSamplesResult)
{
	_ns1__ChangeSamplesResponse *_p = ::soap_new__ns1__ChangeSamplesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeSamplesResponse::ChangeSamplesResult = ChangeSamplesResult;
	}
	return _p;
}

inline int soap_write__ns1__ChangeSamplesResponse(struct soap *soap, _ns1__ChangeSamplesResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamplesResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeSamplesResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ChangeSamplesResponse(struct soap *soap, const char *URL, _ns1__ChangeSamplesResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamplesResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeSamplesResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ChangeSamplesResponse(struct soap *soap, const char *URL, _ns1__ChangeSamplesResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamplesResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeSamplesResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ChangeSamplesResponse(struct soap *soap, const char *URL, _ns1__ChangeSamplesResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamplesResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeSamplesResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ChangeSamplesResponse * SOAP_FMAC4 soap_get__ns1__ChangeSamplesResponse(struct soap*, _ns1__ChangeSamplesResponse *, const char*, const char*);

inline int soap_read__ns1__ChangeSamplesResponse(struct soap *soap, _ns1__ChangeSamplesResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ChangeSamplesResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ChangeSamplesResponse(struct soap *soap, const char *URL, _ns1__ChangeSamplesResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ChangeSamplesResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ChangeSamplesResponse(struct soap *soap, _ns1__ChangeSamplesResponse *p)
{
	if (::soap_read__ns1__ChangeSamplesResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ChangeSamples_DEFINED
#define SOAP_TYPE__ns1__ChangeSamples_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ChangeSamples(struct soap*, const char*, int, const _ns1__ChangeSamples *, const char*);
SOAP_FMAC3 _ns1__ChangeSamples * SOAP_FMAC4 soap_in__ns1__ChangeSamples(struct soap*, const char*, _ns1__ChangeSamples *, const char*);
SOAP_FMAC1 _ns1__ChangeSamples * SOAP_FMAC2 soap_instantiate__ns1__ChangeSamples(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ChangeSamples * soap_new__ns1__ChangeSamples(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ChangeSamples(soap, n, NULL, NULL, NULL);
}

inline _ns1__ChangeSamples * soap_new_req__ns1__ChangeSamples(
	struct soap *soap,
	ns1__MoulesPrelevesXml *ChangeMoldsInSampleTable)
{
	_ns1__ChangeSamples *_p = ::soap_new__ns1__ChangeSamples(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeSamples::ChangeMoldsInSampleTable = ChangeMoldsInSampleTable;
	}
	return _p;
}

inline _ns1__ChangeSamples * soap_new_set__ns1__ChangeSamples(
	struct soap *soap,
	ns1__MoulesPrelevesXml *ChangeMoldsInSampleTable)
{
	_ns1__ChangeSamples *_p = ::soap_new__ns1__ChangeSamples(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeSamples::ChangeMoldsInSampleTable = ChangeMoldsInSampleTable;
	}
	return _p;
}

inline int soap_write__ns1__ChangeSamples(struct soap *soap, _ns1__ChangeSamples const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamples", p->soap_type() == SOAP_TYPE__ns1__ChangeSamples ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ChangeSamples(struct soap *soap, const char *URL, _ns1__ChangeSamples const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamples", p->soap_type() == SOAP_TYPE__ns1__ChangeSamples ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ChangeSamples(struct soap *soap, const char *URL, _ns1__ChangeSamples const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamples", p->soap_type() == SOAP_TYPE__ns1__ChangeSamples ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ChangeSamples(struct soap *soap, const char *URL, _ns1__ChangeSamples const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeSamples", p->soap_type() == SOAP_TYPE__ns1__ChangeSamples ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ChangeSamples * SOAP_FMAC4 soap_get__ns1__ChangeSamples(struct soap*, _ns1__ChangeSamples *, const char*, const char*);

inline int soap_read__ns1__ChangeSamples(struct soap *soap, _ns1__ChangeSamples *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ChangeSamples(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ChangeSamples(struct soap *soap, const char *URL, _ns1__ChangeSamples *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ChangeSamples(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ChangeSamples(struct soap *soap, _ns1__ChangeSamples *p)
{
	if (::soap_read__ns1__ChangeSamples(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetVersionsResponse_DEFINED
#define SOAP_TYPE__ns1__GetVersionsResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetVersionsResponse(struct soap*, const char*, int, const _ns1__GetVersionsResponse *, const char*);
SOAP_FMAC3 _ns1__GetVersionsResponse * SOAP_FMAC4 soap_in__ns1__GetVersionsResponse(struct soap*, const char*, _ns1__GetVersionsResponse *, const char*);
SOAP_FMAC1 _ns1__GetVersionsResponse * SOAP_FMAC2 soap_instantiate__ns1__GetVersionsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetVersionsResponse * soap_new__ns1__GetVersionsResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetVersionsResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetVersionsResponse * soap_new_req__ns1__GetVersionsResponse(
	struct soap *soap)
{
	_ns1__GetVersionsResponse *_p = ::soap_new__ns1__GetVersionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetVersionsResponse * soap_new_set__ns1__GetVersionsResponse(
	struct soap *soap,
	_ns1__GetVersionsResponse_GetVersionsResult *GetVersionsResult)
{
	_ns1__GetVersionsResponse *_p = ::soap_new__ns1__GetVersionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetVersionsResponse::GetVersionsResult = GetVersionsResult;
	}
	return _p;
}

inline int soap_write__ns1__GetVersionsResponse(struct soap *soap, _ns1__GetVersionsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersionsResponse", p->soap_type() == SOAP_TYPE__ns1__GetVersionsResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetVersionsResponse(struct soap *soap, const char *URL, _ns1__GetVersionsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersionsResponse", p->soap_type() == SOAP_TYPE__ns1__GetVersionsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetVersionsResponse(struct soap *soap, const char *URL, _ns1__GetVersionsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersionsResponse", p->soap_type() == SOAP_TYPE__ns1__GetVersionsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetVersionsResponse(struct soap *soap, const char *URL, _ns1__GetVersionsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersionsResponse", p->soap_type() == SOAP_TYPE__ns1__GetVersionsResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetVersionsResponse * SOAP_FMAC4 soap_get__ns1__GetVersionsResponse(struct soap*, _ns1__GetVersionsResponse *, const char*, const char*);

inline int soap_read__ns1__GetVersionsResponse(struct soap *soap, _ns1__GetVersionsResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetVersionsResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetVersionsResponse(struct soap *soap, const char *URL, _ns1__GetVersionsResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetVersionsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetVersionsResponse(struct soap *soap, _ns1__GetVersionsResponse *p)
{
	if (::soap_read__ns1__GetVersionsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetVersions_DEFINED
#define SOAP_TYPE__ns1__GetVersions_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetVersions(struct soap*, const char*, int, const _ns1__GetVersions *, const char*);
SOAP_FMAC3 _ns1__GetVersions * SOAP_FMAC4 soap_in__ns1__GetVersions(struct soap*, const char*, _ns1__GetVersions *, const char*);
SOAP_FMAC1 _ns1__GetVersions * SOAP_FMAC2 soap_instantiate__ns1__GetVersions(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetVersions * soap_new__ns1__GetVersions(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetVersions(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetVersions * soap_new_req__ns1__GetVersions(
	struct soap *soap)
{
	_ns1__GetVersions *_p = ::soap_new__ns1__GetVersions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetVersions * soap_new_set__ns1__GetVersions(
	struct soap *soap)
{
	_ns1__GetVersions *_p = ::soap_new__ns1__GetVersions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetVersions(struct soap *soap, _ns1__GetVersions const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersions", p->soap_type() == SOAP_TYPE__ns1__GetVersions ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetVersions(struct soap *soap, const char *URL, _ns1__GetVersions const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersions", p->soap_type() == SOAP_TYPE__ns1__GetVersions ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetVersions(struct soap *soap, const char *URL, _ns1__GetVersions const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersions", p->soap_type() == SOAP_TYPE__ns1__GetVersions ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetVersions(struct soap *soap, const char *URL, _ns1__GetVersions const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetVersions", p->soap_type() == SOAP_TYPE__ns1__GetVersions ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetVersions * SOAP_FMAC4 soap_get__ns1__GetVersions(struct soap*, _ns1__GetVersions *, const char*, const char*);

inline int soap_read__ns1__GetVersions(struct soap *soap, _ns1__GetVersions *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetVersions(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetVersions(struct soap *soap, const char *URL, _ns1__GetVersions *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetVersions(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetVersions(struct soap *soap, _ns1__GetVersions *p)
{
	if (::soap_read__ns1__GetVersions(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse_DEFINED
#define SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ChangeMoldsInSampleTableResponse(struct soap*, const char*, int, const _ns1__ChangeMoldsInSampleTableResponse *, const char*);
SOAP_FMAC3 _ns1__ChangeMoldsInSampleTableResponse * SOAP_FMAC4 soap_in__ns1__ChangeMoldsInSampleTableResponse(struct soap*, const char*, _ns1__ChangeMoldsInSampleTableResponse *, const char*);
SOAP_FMAC1 _ns1__ChangeMoldsInSampleTableResponse * SOAP_FMAC2 soap_instantiate__ns1__ChangeMoldsInSampleTableResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ChangeMoldsInSampleTableResponse * soap_new__ns1__ChangeMoldsInSampleTableResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ChangeMoldsInSampleTableResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__ChangeMoldsInSampleTableResponse * soap_new_req__ns1__ChangeMoldsInSampleTableResponse(
	struct soap *soap)
{
	_ns1__ChangeMoldsInSampleTableResponse *_p = ::soap_new__ns1__ChangeMoldsInSampleTableResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ChangeMoldsInSampleTableResponse * soap_new_set__ns1__ChangeMoldsInSampleTableResponse(
	struct soap *soap,
	_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *ChangeMoldsInSampleTableResult)
{
	_ns1__ChangeMoldsInSampleTableResponse *_p = ::soap_new__ns1__ChangeMoldsInSampleTableResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeMoldsInSampleTableResponse::ChangeMoldsInSampleTableResult = ChangeMoldsInSampleTableResult;
	}
	return _p;
}

inline int soap_write__ns1__ChangeMoldsInSampleTableResponse(struct soap *soap, _ns1__ChangeMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ChangeMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ChangeMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ChangeMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ChangeMoldsInSampleTableResponse * SOAP_FMAC4 soap_get__ns1__ChangeMoldsInSampleTableResponse(struct soap*, _ns1__ChangeMoldsInSampleTableResponse *, const char*, const char*);

inline int soap_read__ns1__ChangeMoldsInSampleTableResponse(struct soap *soap, _ns1__ChangeMoldsInSampleTableResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ChangeMoldsInSampleTableResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ChangeMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTableResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ChangeMoldsInSampleTableResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ChangeMoldsInSampleTableResponse(struct soap *soap, _ns1__ChangeMoldsInSampleTableResponse *p)
{
	if (::soap_read__ns1__ChangeMoldsInSampleTableResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ChangeMoldsInSampleTable_DEFINED
#define SOAP_TYPE__ns1__ChangeMoldsInSampleTable_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ChangeMoldsInSampleTable(struct soap*, const char*, int, const _ns1__ChangeMoldsInSampleTable *, const char*);
SOAP_FMAC3 _ns1__ChangeMoldsInSampleTable * SOAP_FMAC4 soap_in__ns1__ChangeMoldsInSampleTable(struct soap*, const char*, _ns1__ChangeMoldsInSampleTable *, const char*);
SOAP_FMAC1 _ns1__ChangeMoldsInSampleTable * SOAP_FMAC2 soap_instantiate__ns1__ChangeMoldsInSampleTable(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ChangeMoldsInSampleTable * soap_new__ns1__ChangeMoldsInSampleTable(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ChangeMoldsInSampleTable(soap, n, NULL, NULL, NULL);
}

inline _ns1__ChangeMoldsInSampleTable * soap_new_req__ns1__ChangeMoldsInSampleTable(
	struct soap *soap,
	ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *ChangeMoldsInSampleTable)
{
	_ns1__ChangeMoldsInSampleTable *_p = ::soap_new__ns1__ChangeMoldsInSampleTable(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeMoldsInSampleTable::ChangeMoldsInSampleTable = ChangeMoldsInSampleTable;
	}
	return _p;
}

inline _ns1__ChangeMoldsInSampleTable * soap_new_set__ns1__ChangeMoldsInSampleTable(
	struct soap *soap,
	ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *ChangeMoldsInSampleTable)
{
	_ns1__ChangeMoldsInSampleTable *_p = ::soap_new__ns1__ChangeMoldsInSampleTable(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeMoldsInSampleTable::ChangeMoldsInSampleTable = ChangeMoldsInSampleTable;
	}
	return _p;
}

inline int soap_write__ns1__ChangeMoldsInSampleTable(struct soap *soap, _ns1__ChangeMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTable ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ChangeMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTable ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ChangeMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTable ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ChangeMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__ChangeMoldsInSampleTable ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ChangeMoldsInSampleTable * SOAP_FMAC4 soap_get__ns1__ChangeMoldsInSampleTable(struct soap*, _ns1__ChangeMoldsInSampleTable *, const char*, const char*);

inline int soap_read__ns1__ChangeMoldsInSampleTable(struct soap *soap, _ns1__ChangeMoldsInSampleTable *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ChangeMoldsInSampleTable(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ChangeMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__ChangeMoldsInSampleTable *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ChangeMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ChangeMoldsInSampleTable(struct soap *soap, _ns1__ChangeMoldsInSampleTable *p)
{
	if (::soap_read__ns1__ChangeMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse_DEFINED
#define SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__EraseMoldsInSampleTableResponse(struct soap*, const char*, int, const _ns1__EraseMoldsInSampleTableResponse *, const char*);
SOAP_FMAC3 _ns1__EraseMoldsInSampleTableResponse * SOAP_FMAC4 soap_in__ns1__EraseMoldsInSampleTableResponse(struct soap*, const char*, _ns1__EraseMoldsInSampleTableResponse *, const char*);
SOAP_FMAC1 _ns1__EraseMoldsInSampleTableResponse * SOAP_FMAC2 soap_instantiate__ns1__EraseMoldsInSampleTableResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__EraseMoldsInSampleTableResponse * soap_new__ns1__EraseMoldsInSampleTableResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__EraseMoldsInSampleTableResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__EraseMoldsInSampleTableResponse * soap_new_req__ns1__EraseMoldsInSampleTableResponse(
	struct soap *soap)
{
	_ns1__EraseMoldsInSampleTableResponse *_p = ::soap_new__ns1__EraseMoldsInSampleTableResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__EraseMoldsInSampleTableResponse * soap_new_set__ns1__EraseMoldsInSampleTableResponse(
	struct soap *soap,
	_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *EraseMoldsInSampleTableResult)
{
	_ns1__EraseMoldsInSampleTableResponse *_p = ::soap_new__ns1__EraseMoldsInSampleTableResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__EraseMoldsInSampleTableResponse::EraseMoldsInSampleTableResult = EraseMoldsInSampleTableResult;
	}
	return _p;
}

inline int soap_write__ns1__EraseMoldsInSampleTableResponse(struct soap *soap, _ns1__EraseMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__EraseMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__EraseMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__EraseMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__EraseMoldsInSampleTableResponse * SOAP_FMAC4 soap_get__ns1__EraseMoldsInSampleTableResponse(struct soap*, _ns1__EraseMoldsInSampleTableResponse *, const char*, const char*);

inline int soap_read__ns1__EraseMoldsInSampleTableResponse(struct soap *soap, _ns1__EraseMoldsInSampleTableResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__EraseMoldsInSampleTableResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__EraseMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTableResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__EraseMoldsInSampleTableResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__EraseMoldsInSampleTableResponse(struct soap *soap, _ns1__EraseMoldsInSampleTableResponse *p)
{
	if (::soap_read__ns1__EraseMoldsInSampleTableResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__EraseMoldsInSampleTable_DEFINED
#define SOAP_TYPE__ns1__EraseMoldsInSampleTable_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__EraseMoldsInSampleTable(struct soap*, const char*, int, const _ns1__EraseMoldsInSampleTable *, const char*);
SOAP_FMAC3 _ns1__EraseMoldsInSampleTable * SOAP_FMAC4 soap_in__ns1__EraseMoldsInSampleTable(struct soap*, const char*, _ns1__EraseMoldsInSampleTable *, const char*);
SOAP_FMAC1 _ns1__EraseMoldsInSampleTable * SOAP_FMAC2 soap_instantiate__ns1__EraseMoldsInSampleTable(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__EraseMoldsInSampleTable * soap_new__ns1__EraseMoldsInSampleTable(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__EraseMoldsInSampleTable(soap, n, NULL, NULL, NULL);
}

inline _ns1__EraseMoldsInSampleTable * soap_new_req__ns1__EraseMoldsInSampleTable(
	struct soap *soap)
{
	_ns1__EraseMoldsInSampleTable *_p = ::soap_new__ns1__EraseMoldsInSampleTable(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__EraseMoldsInSampleTable * soap_new_set__ns1__EraseMoldsInSampleTable(
	struct soap *soap)
{
	_ns1__EraseMoldsInSampleTable *_p = ::soap_new__ns1__EraseMoldsInSampleTable(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__EraseMoldsInSampleTable(struct soap *soap, _ns1__EraseMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTable ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__EraseMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTable ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__EraseMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTable ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__EraseMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EraseMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__EraseMoldsInSampleTable ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__EraseMoldsInSampleTable * SOAP_FMAC4 soap_get__ns1__EraseMoldsInSampleTable(struct soap*, _ns1__EraseMoldsInSampleTable *, const char*, const char*);

inline int soap_read__ns1__EraseMoldsInSampleTable(struct soap *soap, _ns1__EraseMoldsInSampleTable *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__EraseMoldsInSampleTable(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__EraseMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__EraseMoldsInSampleTable *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__EraseMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__EraseMoldsInSampleTable(struct soap *soap, _ns1__EraseMoldsInSampleTable *p)
{
	if (::soap_read__ns1__EraseMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__AddEjectedMoldsResponse_DEFINED
#define SOAP_TYPE__ns1__AddEjectedMoldsResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddEjectedMoldsResponse(struct soap*, const char*, int, const _ns1__AddEjectedMoldsResponse *, const char*);
SOAP_FMAC3 _ns1__AddEjectedMoldsResponse * SOAP_FMAC4 soap_in__ns1__AddEjectedMoldsResponse(struct soap*, const char*, _ns1__AddEjectedMoldsResponse *, const char*);
SOAP_FMAC1 _ns1__AddEjectedMoldsResponse * SOAP_FMAC2 soap_instantiate__ns1__AddEjectedMoldsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddEjectedMoldsResponse * soap_new__ns1__AddEjectedMoldsResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__AddEjectedMoldsResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__AddEjectedMoldsResponse * soap_new_req__ns1__AddEjectedMoldsResponse(
	struct soap *soap)
{
	_ns1__AddEjectedMoldsResponse *_p = ::soap_new__ns1__AddEjectedMoldsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__AddEjectedMoldsResponse * soap_new_set__ns1__AddEjectedMoldsResponse(
	struct soap *soap,
	char *AddEjectedMoldsResult)
{
	_ns1__AddEjectedMoldsResponse *_p = ::soap_new__ns1__AddEjectedMoldsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__AddEjectedMoldsResponse::AddEjectedMoldsResult = AddEjectedMoldsResult;
	}
	return _p;
}

inline int soap_write__ns1__AddEjectedMoldsResponse(struct soap *soap, _ns1__AddEjectedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AddEjectedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__AddEjectedMoldsResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__AddEjectedMoldsResponse(struct soap *soap, const char *URL, _ns1__AddEjectedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AddEjectedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__AddEjectedMoldsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__AddEjectedMoldsResponse(struct soap *soap, const char *URL, _ns1__AddEjectedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AddEjectedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__AddEjectedMoldsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__AddEjectedMoldsResponse(struct soap *soap, const char *URL, _ns1__AddEjectedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AddEjectedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__AddEjectedMoldsResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__AddEjectedMoldsResponse * SOAP_FMAC4 soap_get__ns1__AddEjectedMoldsResponse(struct soap*, _ns1__AddEjectedMoldsResponse *, const char*, const char*);

inline int soap_read__ns1__AddEjectedMoldsResponse(struct soap *soap, _ns1__AddEjectedMoldsResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__AddEjectedMoldsResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__AddEjectedMoldsResponse(struct soap *soap, const char *URL, _ns1__AddEjectedMoldsResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__AddEjectedMoldsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__AddEjectedMoldsResponse(struct soap *soap, _ns1__AddEjectedMoldsResponse *p)
{
	if (::soap_read__ns1__AddEjectedMoldsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__AddEjectedMolds_DEFINED
#define SOAP_TYPE__ns1__AddEjectedMolds_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddEjectedMolds(struct soap*, const char*, int, const _ns1__AddEjectedMolds *, const char*);
SOAP_FMAC3 _ns1__AddEjectedMolds * SOAP_FMAC4 soap_in__ns1__AddEjectedMolds(struct soap*, const char*, _ns1__AddEjectedMolds *, const char*);
SOAP_FMAC1 _ns1__AddEjectedMolds * SOAP_FMAC2 soap_instantiate__ns1__AddEjectedMolds(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddEjectedMolds * soap_new__ns1__AddEjectedMolds(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__AddEjectedMolds(soap, n, NULL, NULL, NULL);
}

inline _ns1__AddEjectedMolds * soap_new_req__ns1__AddEjectedMolds(
	struct soap *soap,
	ns1__MoulesEjectesXml *AddEjectedMolds)
{
	_ns1__AddEjectedMolds *_p = ::soap_new__ns1__AddEjectedMolds(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__AddEjectedMolds::AddEjectedMolds = AddEjectedMolds;
	}
	return _p;
}

inline _ns1__AddEjectedMolds * soap_new_set__ns1__AddEjectedMolds(
	struct soap *soap,
	ns1__MoulesEjectesXml *AddEjectedMolds)
{
	_ns1__AddEjectedMolds *_p = ::soap_new__ns1__AddEjectedMolds(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__AddEjectedMolds::AddEjectedMolds = AddEjectedMolds;
	}
	return _p;
}

inline int soap_write__ns1__AddEjectedMolds(struct soap *soap, _ns1__AddEjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AddEjectedMolds", p->soap_type() == SOAP_TYPE__ns1__AddEjectedMolds ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__AddEjectedMolds(struct soap *soap, const char *URL, _ns1__AddEjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AddEjectedMolds", p->soap_type() == SOAP_TYPE__ns1__AddEjectedMolds ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__AddEjectedMolds(struct soap *soap, const char *URL, _ns1__AddEjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AddEjectedMolds", p->soap_type() == SOAP_TYPE__ns1__AddEjectedMolds ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__AddEjectedMolds(struct soap *soap, const char *URL, _ns1__AddEjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AddEjectedMolds", p->soap_type() == SOAP_TYPE__ns1__AddEjectedMolds ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__AddEjectedMolds * SOAP_FMAC4 soap_get__ns1__AddEjectedMolds(struct soap*, _ns1__AddEjectedMolds *, const char*, const char*);

inline int soap_read__ns1__AddEjectedMolds(struct soap *soap, _ns1__AddEjectedMolds *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__AddEjectedMolds(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__AddEjectedMolds(struct soap *soap, const char *URL, _ns1__AddEjectedMolds *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__AddEjectedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__AddEjectedMolds(struct soap *soap, _ns1__AddEjectedMolds *p)
{
	if (::soap_read__ns1__AddEjectedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ChangeMountedMoldsResponse_DEFINED
#define SOAP_TYPE__ns1__ChangeMountedMoldsResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ChangeMountedMoldsResponse(struct soap*, const char*, int, const _ns1__ChangeMountedMoldsResponse *, const char*);
SOAP_FMAC3 _ns1__ChangeMountedMoldsResponse * SOAP_FMAC4 soap_in__ns1__ChangeMountedMoldsResponse(struct soap*, const char*, _ns1__ChangeMountedMoldsResponse *, const char*);
SOAP_FMAC1 _ns1__ChangeMountedMoldsResponse * SOAP_FMAC2 soap_instantiate__ns1__ChangeMountedMoldsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ChangeMountedMoldsResponse * soap_new__ns1__ChangeMountedMoldsResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ChangeMountedMoldsResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__ChangeMountedMoldsResponse * soap_new_req__ns1__ChangeMountedMoldsResponse(
	struct soap *soap)
{
	_ns1__ChangeMountedMoldsResponse *_p = ::soap_new__ns1__ChangeMountedMoldsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ChangeMountedMoldsResponse * soap_new_set__ns1__ChangeMountedMoldsResponse(
	struct soap *soap,
	_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *ChangeMountedMoldsResult)
{
	_ns1__ChangeMountedMoldsResponse *_p = ::soap_new__ns1__ChangeMountedMoldsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeMountedMoldsResponse::ChangeMountedMoldsResult = ChangeMountedMoldsResult;
	}
	return _p;
}

inline int soap_write__ns1__ChangeMountedMoldsResponse(struct soap *soap, _ns1__ChangeMountedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMoldsResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ChangeMountedMoldsResponse(struct soap *soap, const char *URL, _ns1__ChangeMountedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMoldsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ChangeMountedMoldsResponse(struct soap *soap, const char *URL, _ns1__ChangeMountedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMoldsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ChangeMountedMoldsResponse(struct soap *soap, const char *URL, _ns1__ChangeMountedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMoldsResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ChangeMountedMoldsResponse * SOAP_FMAC4 soap_get__ns1__ChangeMountedMoldsResponse(struct soap*, _ns1__ChangeMountedMoldsResponse *, const char*, const char*);

inline int soap_read__ns1__ChangeMountedMoldsResponse(struct soap *soap, _ns1__ChangeMountedMoldsResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ChangeMountedMoldsResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ChangeMountedMoldsResponse(struct soap *soap, const char *URL, _ns1__ChangeMountedMoldsResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ChangeMountedMoldsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ChangeMountedMoldsResponse(struct soap *soap, _ns1__ChangeMountedMoldsResponse *p)
{
	if (::soap_read__ns1__ChangeMountedMoldsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ChangeMountedMolds_DEFINED
#define SOAP_TYPE__ns1__ChangeMountedMolds_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ChangeMountedMolds(struct soap*, const char*, int, const _ns1__ChangeMountedMolds *, const char*);
SOAP_FMAC3 _ns1__ChangeMountedMolds * SOAP_FMAC4 soap_in__ns1__ChangeMountedMolds(struct soap*, const char*, _ns1__ChangeMountedMolds *, const char*);
SOAP_FMAC1 _ns1__ChangeMountedMolds * SOAP_FMAC2 soap_instantiate__ns1__ChangeMountedMolds(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ChangeMountedMolds * soap_new__ns1__ChangeMountedMolds(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ChangeMountedMolds(soap, n, NULL, NULL, NULL);
}

inline _ns1__ChangeMountedMolds * soap_new_req__ns1__ChangeMountedMolds(
	struct soap *soap,
	ns1__MountedMoldsXml *mountedMolds)
{
	_ns1__ChangeMountedMolds *_p = ::soap_new__ns1__ChangeMountedMolds(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeMountedMolds::mountedMolds = mountedMolds;
	}
	return _p;
}

inline _ns1__ChangeMountedMolds * soap_new_set__ns1__ChangeMountedMolds(
	struct soap *soap,
	ns1__MountedMoldsXml *mountedMolds)
{
	_ns1__ChangeMountedMolds *_p = ::soap_new__ns1__ChangeMountedMolds(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChangeMountedMolds::mountedMolds = mountedMolds;
	}
	return _p;
}

inline int soap_write__ns1__ChangeMountedMolds(struct soap *soap, _ns1__ChangeMountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMolds", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMolds ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ChangeMountedMolds(struct soap *soap, const char *URL, _ns1__ChangeMountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMolds", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMolds ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ChangeMountedMolds(struct soap *soap, const char *URL, _ns1__ChangeMountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMolds", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMolds ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ChangeMountedMolds(struct soap *soap, const char *URL, _ns1__ChangeMountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChangeMountedMolds", p->soap_type() == SOAP_TYPE__ns1__ChangeMountedMolds ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ChangeMountedMolds * SOAP_FMAC4 soap_get__ns1__ChangeMountedMolds(struct soap*, _ns1__ChangeMountedMolds *, const char*, const char*);

inline int soap_read__ns1__ChangeMountedMolds(struct soap *soap, _ns1__ChangeMountedMolds *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ChangeMountedMolds(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ChangeMountedMolds(struct soap *soap, const char *URL, _ns1__ChangeMountedMolds *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ChangeMountedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ChangeMountedMolds(struct soap *soap, _ns1__ChangeMountedMolds *p)
{
	if (::soap_read__ns1__ChangeMountedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetMoldsInSampleTableResponse_DEFINED
#define SOAP_TYPE__ns1__GetMoldsInSampleTableResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMoldsInSampleTableResponse(struct soap*, const char*, int, const _ns1__GetMoldsInSampleTableResponse *, const char*);
SOAP_FMAC3 _ns1__GetMoldsInSampleTableResponse * SOAP_FMAC4 soap_in__ns1__GetMoldsInSampleTableResponse(struct soap*, const char*, _ns1__GetMoldsInSampleTableResponse *, const char*);
SOAP_FMAC1 _ns1__GetMoldsInSampleTableResponse * SOAP_FMAC2 soap_instantiate__ns1__GetMoldsInSampleTableResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMoldsInSampleTableResponse * soap_new__ns1__GetMoldsInSampleTableResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMoldsInSampleTableResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMoldsInSampleTableResponse * soap_new_req__ns1__GetMoldsInSampleTableResponse(
	struct soap *soap)
{
	_ns1__GetMoldsInSampleTableResponse *_p = ::soap_new__ns1__GetMoldsInSampleTableResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMoldsInSampleTableResponse * soap_new_set__ns1__GetMoldsInSampleTableResponse(
	struct soap *soap,
	_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *GetMoldsInSampleTableResult)
{
	_ns1__GetMoldsInSampleTableResponse *_p = ::soap_new__ns1__GetMoldsInSampleTableResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMoldsInSampleTableResponse::GetMoldsInSampleTableResult = GetMoldsInSampleTableResult;
	}
	return _p;
}

inline int soap_write__ns1__GetMoldsInSampleTableResponse(struct soap *soap, _ns1__GetMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTableResponse", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTableResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMoldsInSampleTableResponse * SOAP_FMAC4 soap_get__ns1__GetMoldsInSampleTableResponse(struct soap*, _ns1__GetMoldsInSampleTableResponse *, const char*, const char*);

inline int soap_read__ns1__GetMoldsInSampleTableResponse(struct soap *soap, _ns1__GetMoldsInSampleTableResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMoldsInSampleTableResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMoldsInSampleTableResponse(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTableResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMoldsInSampleTableResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetMoldsInSampleTableResponse(struct soap *soap, _ns1__GetMoldsInSampleTableResponse *p)
{
	if (::soap_read__ns1__GetMoldsInSampleTableResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetMoldsInSampleTable_DEFINED
#define SOAP_TYPE__ns1__GetMoldsInSampleTable_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMoldsInSampleTable(struct soap*, const char*, int, const _ns1__GetMoldsInSampleTable *, const char*);
SOAP_FMAC3 _ns1__GetMoldsInSampleTable * SOAP_FMAC4 soap_in__ns1__GetMoldsInSampleTable(struct soap*, const char*, _ns1__GetMoldsInSampleTable *, const char*);
SOAP_FMAC1 _ns1__GetMoldsInSampleTable * SOAP_FMAC2 soap_instantiate__ns1__GetMoldsInSampleTable(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMoldsInSampleTable * soap_new__ns1__GetMoldsInSampleTable(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMoldsInSampleTable(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMoldsInSampleTable * soap_new_req__ns1__GetMoldsInSampleTable(
	struct soap *soap)
{
	_ns1__GetMoldsInSampleTable *_p = ::soap_new__ns1__GetMoldsInSampleTable(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMoldsInSampleTable * soap_new_set__ns1__GetMoldsInSampleTable(
	struct soap *soap)
{
	_ns1__GetMoldsInSampleTable *_p = ::soap_new__ns1__GetMoldsInSampleTable(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetMoldsInSampleTable(struct soap *soap, _ns1__GetMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTable ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTable ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTable ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMoldsInSampleTable", p->soap_type() == SOAP_TYPE__ns1__GetMoldsInSampleTable ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMoldsInSampleTable * SOAP_FMAC4 soap_get__ns1__GetMoldsInSampleTable(struct soap*, _ns1__GetMoldsInSampleTable *, const char*, const char*);

inline int soap_read__ns1__GetMoldsInSampleTable(struct soap *soap, _ns1__GetMoldsInSampleTable *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMoldsInSampleTable(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMoldsInSampleTable(struct soap *soap, const char *URL, _ns1__GetMoldsInSampleTable *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetMoldsInSampleTable(struct soap *soap, _ns1__GetMoldsInSampleTable *p)
{
	if (::soap_read__ns1__GetMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__EjectedMoldsResponse_DEFINED
#define SOAP_TYPE__ns1__EjectedMoldsResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__EjectedMoldsResponse(struct soap*, const char*, int, const _ns1__EjectedMoldsResponse *, const char*);
SOAP_FMAC3 _ns1__EjectedMoldsResponse * SOAP_FMAC4 soap_in__ns1__EjectedMoldsResponse(struct soap*, const char*, _ns1__EjectedMoldsResponse *, const char*);
SOAP_FMAC1 _ns1__EjectedMoldsResponse * SOAP_FMAC2 soap_instantiate__ns1__EjectedMoldsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__EjectedMoldsResponse * soap_new__ns1__EjectedMoldsResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__EjectedMoldsResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__EjectedMoldsResponse * soap_new_req__ns1__EjectedMoldsResponse(
	struct soap *soap)
{
	_ns1__EjectedMoldsResponse *_p = ::soap_new__ns1__EjectedMoldsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__EjectedMoldsResponse * soap_new_set__ns1__EjectedMoldsResponse(
	struct soap *soap,
	_ns1__EjectedMoldsResponse_EjectedMoldsResult *EjectedMoldsResult)
{
	_ns1__EjectedMoldsResponse *_p = ::soap_new__ns1__EjectedMoldsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__EjectedMoldsResponse::EjectedMoldsResult = EjectedMoldsResult;
	}
	return _p;
}

inline int soap_write__ns1__EjectedMoldsResponse(struct soap *soap, _ns1__EjectedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__EjectedMoldsResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__EjectedMoldsResponse(struct soap *soap, const char *URL, _ns1__EjectedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__EjectedMoldsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__EjectedMoldsResponse(struct soap *soap, const char *URL, _ns1__EjectedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__EjectedMoldsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__EjectedMoldsResponse(struct soap *soap, const char *URL, _ns1__EjectedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__EjectedMoldsResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__EjectedMoldsResponse * SOAP_FMAC4 soap_get__ns1__EjectedMoldsResponse(struct soap*, _ns1__EjectedMoldsResponse *, const char*, const char*);

inline int soap_read__ns1__EjectedMoldsResponse(struct soap *soap, _ns1__EjectedMoldsResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__EjectedMoldsResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__EjectedMoldsResponse(struct soap *soap, const char *URL, _ns1__EjectedMoldsResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__EjectedMoldsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__EjectedMoldsResponse(struct soap *soap, _ns1__EjectedMoldsResponse *p)
{
	if (::soap_read__ns1__EjectedMoldsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__EjectedMolds_DEFINED
#define SOAP_TYPE__ns1__EjectedMolds_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__EjectedMolds(struct soap*, const char*, int, const _ns1__EjectedMolds *, const char*);
SOAP_FMAC3 _ns1__EjectedMolds * SOAP_FMAC4 soap_in__ns1__EjectedMolds(struct soap*, const char*, _ns1__EjectedMolds *, const char*);
SOAP_FMAC1 _ns1__EjectedMolds * SOAP_FMAC2 soap_instantiate__ns1__EjectedMolds(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__EjectedMolds * soap_new__ns1__EjectedMolds(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__EjectedMolds(soap, n, NULL, NULL, NULL);
}

inline _ns1__EjectedMolds * soap_new_req__ns1__EjectedMolds(
	struct soap *soap)
{
	_ns1__EjectedMolds *_p = ::soap_new__ns1__EjectedMolds(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__EjectedMolds * soap_new_set__ns1__EjectedMolds(
	struct soap *soap)
{
	_ns1__EjectedMolds *_p = ::soap_new__ns1__EjectedMolds(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__EjectedMolds(struct soap *soap, _ns1__EjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMolds", p->soap_type() == SOAP_TYPE__ns1__EjectedMolds ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__EjectedMolds(struct soap *soap, const char *URL, _ns1__EjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMolds", p->soap_type() == SOAP_TYPE__ns1__EjectedMolds ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__EjectedMolds(struct soap *soap, const char *URL, _ns1__EjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMolds", p->soap_type() == SOAP_TYPE__ns1__EjectedMolds ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__EjectedMolds(struct soap *soap, const char *URL, _ns1__EjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:EjectedMolds", p->soap_type() == SOAP_TYPE__ns1__EjectedMolds ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__EjectedMolds * SOAP_FMAC4 soap_get__ns1__EjectedMolds(struct soap*, _ns1__EjectedMolds *, const char*, const char*);

inline int soap_read__ns1__EjectedMolds(struct soap *soap, _ns1__EjectedMolds *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__EjectedMolds(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__EjectedMolds(struct soap *soap, const char *URL, _ns1__EjectedMolds *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__EjectedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__EjectedMolds(struct soap *soap, _ns1__EjectedMolds *p)
{
	if (::soap_read__ns1__EjectedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ReadenMoldsResponse_DEFINED
#define SOAP_TYPE__ns1__ReadenMoldsResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ReadenMoldsResponse(struct soap*, const char*, int, const _ns1__ReadenMoldsResponse *, const char*);
SOAP_FMAC3 _ns1__ReadenMoldsResponse * SOAP_FMAC4 soap_in__ns1__ReadenMoldsResponse(struct soap*, const char*, _ns1__ReadenMoldsResponse *, const char*);
SOAP_FMAC1 _ns1__ReadenMoldsResponse * SOAP_FMAC2 soap_instantiate__ns1__ReadenMoldsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ReadenMoldsResponse * soap_new__ns1__ReadenMoldsResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ReadenMoldsResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__ReadenMoldsResponse * soap_new_req__ns1__ReadenMoldsResponse(
	struct soap *soap)
{
	_ns1__ReadenMoldsResponse *_p = ::soap_new__ns1__ReadenMoldsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ReadenMoldsResponse * soap_new_set__ns1__ReadenMoldsResponse(
	struct soap *soap,
	_ns1__ReadenMoldsResponse_ReadenMoldsResult *ReadenMoldsResult)
{
	_ns1__ReadenMoldsResponse *_p = ::soap_new__ns1__ReadenMoldsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ReadenMoldsResponse::ReadenMoldsResult = ReadenMoldsResult;
	}
	return _p;
}

inline int soap_write__ns1__ReadenMoldsResponse(struct soap *soap, _ns1__ReadenMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__ReadenMoldsResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ReadenMoldsResponse(struct soap *soap, const char *URL, _ns1__ReadenMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__ReadenMoldsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ReadenMoldsResponse(struct soap *soap, const char *URL, _ns1__ReadenMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__ReadenMoldsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ReadenMoldsResponse(struct soap *soap, const char *URL, _ns1__ReadenMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__ReadenMoldsResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ReadenMoldsResponse * SOAP_FMAC4 soap_get__ns1__ReadenMoldsResponse(struct soap*, _ns1__ReadenMoldsResponse *, const char*, const char*);

inline int soap_read__ns1__ReadenMoldsResponse(struct soap *soap, _ns1__ReadenMoldsResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ReadenMoldsResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ReadenMoldsResponse(struct soap *soap, const char *URL, _ns1__ReadenMoldsResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ReadenMoldsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ReadenMoldsResponse(struct soap *soap, _ns1__ReadenMoldsResponse *p)
{
	if (::soap_read__ns1__ReadenMoldsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__ReadenMolds_DEFINED
#define SOAP_TYPE__ns1__ReadenMolds_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ReadenMolds(struct soap*, const char*, int, const _ns1__ReadenMolds *, const char*);
SOAP_FMAC3 _ns1__ReadenMolds * SOAP_FMAC4 soap_in__ns1__ReadenMolds(struct soap*, const char*, _ns1__ReadenMolds *, const char*);
SOAP_FMAC1 _ns1__ReadenMolds * SOAP_FMAC2 soap_instantiate__ns1__ReadenMolds(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ReadenMolds * soap_new__ns1__ReadenMolds(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ReadenMolds(soap, n, NULL, NULL, NULL);
}

inline _ns1__ReadenMolds * soap_new_req__ns1__ReadenMolds(
	struct soap *soap)
{
	_ns1__ReadenMolds *_p = ::soap_new__ns1__ReadenMolds(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ReadenMolds * soap_new_set__ns1__ReadenMolds(
	struct soap *soap)
{
	_ns1__ReadenMolds *_p = ::soap_new__ns1__ReadenMolds(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__ReadenMolds(struct soap *soap, _ns1__ReadenMolds const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMolds", p->soap_type() == SOAP_TYPE__ns1__ReadenMolds ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ReadenMolds(struct soap *soap, const char *URL, _ns1__ReadenMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMolds", p->soap_type() == SOAP_TYPE__ns1__ReadenMolds ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__ReadenMolds(struct soap *soap, const char *URL, _ns1__ReadenMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMolds", p->soap_type() == SOAP_TYPE__ns1__ReadenMolds ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ReadenMolds(struct soap *soap, const char *URL, _ns1__ReadenMolds const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ReadenMolds", p->soap_type() == SOAP_TYPE__ns1__ReadenMolds ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ReadenMolds * SOAP_FMAC4 soap_get__ns1__ReadenMolds(struct soap*, _ns1__ReadenMolds *, const char*, const char*);

inline int soap_read__ns1__ReadenMolds(struct soap *soap, _ns1__ReadenMolds *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ReadenMolds(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ReadenMolds(struct soap *soap, const char *URL, _ns1__ReadenMolds *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ReadenMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__ReadenMolds(struct soap *soap, _ns1__ReadenMolds *p)
{
	if (::soap_read__ns1__ReadenMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__CumulCountsResponse_DEFINED
#define SOAP_TYPE__ns1__CumulCountsResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CumulCountsResponse(struct soap*, const char*, int, const _ns1__CumulCountsResponse *, const char*);
SOAP_FMAC3 _ns1__CumulCountsResponse * SOAP_FMAC4 soap_in__ns1__CumulCountsResponse(struct soap*, const char*, _ns1__CumulCountsResponse *, const char*);
SOAP_FMAC1 _ns1__CumulCountsResponse * SOAP_FMAC2 soap_instantiate__ns1__CumulCountsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CumulCountsResponse * soap_new__ns1__CumulCountsResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__CumulCountsResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__CumulCountsResponse * soap_new_req__ns1__CumulCountsResponse(
	struct soap *soap)
{
	_ns1__CumulCountsResponse *_p = ::soap_new__ns1__CumulCountsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__CumulCountsResponse * soap_new_set__ns1__CumulCountsResponse(
	struct soap *soap,
	_ns1__CumulCountsResponse_CumulCountsResult *CumulCountsResult)
{
	_ns1__CumulCountsResponse *_p = ::soap_new__ns1__CumulCountsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CumulCountsResponse::CumulCountsResult = CumulCountsResult;
	}
	return _p;
}

inline int soap_write__ns1__CumulCountsResponse(struct soap *soap, _ns1__CumulCountsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCountsResponse", p->soap_type() == SOAP_TYPE__ns1__CumulCountsResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__CumulCountsResponse(struct soap *soap, const char *URL, _ns1__CumulCountsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCountsResponse", p->soap_type() == SOAP_TYPE__ns1__CumulCountsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__CumulCountsResponse(struct soap *soap, const char *URL, _ns1__CumulCountsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCountsResponse", p->soap_type() == SOAP_TYPE__ns1__CumulCountsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__CumulCountsResponse(struct soap *soap, const char *URL, _ns1__CumulCountsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCountsResponse", p->soap_type() == SOAP_TYPE__ns1__CumulCountsResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__CumulCountsResponse * SOAP_FMAC4 soap_get__ns1__CumulCountsResponse(struct soap*, _ns1__CumulCountsResponse *, const char*, const char*);

inline int soap_read__ns1__CumulCountsResponse(struct soap *soap, _ns1__CumulCountsResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__CumulCountsResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__CumulCountsResponse(struct soap *soap, const char *URL, _ns1__CumulCountsResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__CumulCountsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__CumulCountsResponse(struct soap *soap, _ns1__CumulCountsResponse *p)
{
	if (::soap_read__ns1__CumulCountsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__CumulCounts_DEFINED
#define SOAP_TYPE__ns1__CumulCounts_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CumulCounts(struct soap*, const char*, int, const _ns1__CumulCounts *, const char*);
SOAP_FMAC3 _ns1__CumulCounts * SOAP_FMAC4 soap_in__ns1__CumulCounts(struct soap*, const char*, _ns1__CumulCounts *, const char*);
SOAP_FMAC1 _ns1__CumulCounts * SOAP_FMAC2 soap_instantiate__ns1__CumulCounts(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CumulCounts * soap_new__ns1__CumulCounts(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__CumulCounts(soap, n, NULL, NULL, NULL);
}

inline _ns1__CumulCounts * soap_new_req__ns1__CumulCounts(
	struct soap *soap)
{
	_ns1__CumulCounts *_p = ::soap_new__ns1__CumulCounts(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__CumulCounts * soap_new_set__ns1__CumulCounts(
	struct soap *soap)
{
	_ns1__CumulCounts *_p = ::soap_new__ns1__CumulCounts(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__CumulCounts(struct soap *soap, _ns1__CumulCounts const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCounts", p->soap_type() == SOAP_TYPE__ns1__CumulCounts ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__CumulCounts(struct soap *soap, const char *URL, _ns1__CumulCounts const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCounts", p->soap_type() == SOAP_TYPE__ns1__CumulCounts ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__CumulCounts(struct soap *soap, const char *URL, _ns1__CumulCounts const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCounts", p->soap_type() == SOAP_TYPE__ns1__CumulCounts ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__CumulCounts(struct soap *soap, const char *URL, _ns1__CumulCounts const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CumulCounts", p->soap_type() == SOAP_TYPE__ns1__CumulCounts ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__CumulCounts * SOAP_FMAC4 soap_get__ns1__CumulCounts(struct soap*, _ns1__CumulCounts *, const char*, const char*);

inline int soap_read__ns1__CumulCounts(struct soap *soap, _ns1__CumulCounts *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__CumulCounts(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__CumulCounts(struct soap *soap, const char *URL, _ns1__CumulCounts *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__CumulCounts(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__CumulCounts(struct soap *soap, _ns1__CumulCounts *p)
{
	if (::soap_read__ns1__CumulCounts(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__MeasuresResponse_DEFINED
#define SOAP_TYPE__ns1__MeasuresResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__MeasuresResponse(struct soap*, const char*, int, const _ns1__MeasuresResponse *, const char*);
SOAP_FMAC3 _ns1__MeasuresResponse * SOAP_FMAC4 soap_in__ns1__MeasuresResponse(struct soap*, const char*, _ns1__MeasuresResponse *, const char*);
SOAP_FMAC1 _ns1__MeasuresResponse * SOAP_FMAC2 soap_instantiate__ns1__MeasuresResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__MeasuresResponse * soap_new__ns1__MeasuresResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__MeasuresResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__MeasuresResponse * soap_new_req__ns1__MeasuresResponse(
	struct soap *soap)
{
	_ns1__MeasuresResponse *_p = ::soap_new__ns1__MeasuresResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__MeasuresResponse * soap_new_set__ns1__MeasuresResponse(
	struct soap *soap,
	_ns1__MeasuresResponse_MeasuresResult *MeasuresResult)
{
	_ns1__MeasuresResponse *_p = ::soap_new__ns1__MeasuresResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__MeasuresResponse::MeasuresResult = MeasuresResult;
	}
	return _p;
}

inline int soap_write__ns1__MeasuresResponse(struct soap *soap, _ns1__MeasuresResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MeasuresResponse", p->soap_type() == SOAP_TYPE__ns1__MeasuresResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__MeasuresResponse(struct soap *soap, const char *URL, _ns1__MeasuresResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MeasuresResponse", p->soap_type() == SOAP_TYPE__ns1__MeasuresResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__MeasuresResponse(struct soap *soap, const char *URL, _ns1__MeasuresResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MeasuresResponse", p->soap_type() == SOAP_TYPE__ns1__MeasuresResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__MeasuresResponse(struct soap *soap, const char *URL, _ns1__MeasuresResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MeasuresResponse", p->soap_type() == SOAP_TYPE__ns1__MeasuresResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__MeasuresResponse * SOAP_FMAC4 soap_get__ns1__MeasuresResponse(struct soap*, _ns1__MeasuresResponse *, const char*, const char*);

inline int soap_read__ns1__MeasuresResponse(struct soap *soap, _ns1__MeasuresResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__MeasuresResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__MeasuresResponse(struct soap *soap, const char *URL, _ns1__MeasuresResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__MeasuresResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__MeasuresResponse(struct soap *soap, _ns1__MeasuresResponse *p)
{
	if (::soap_read__ns1__MeasuresResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__Measures_DEFINED
#define SOAP_TYPE__ns1__Measures_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Measures(struct soap*, const char*, int, const _ns1__Measures *, const char*);
SOAP_FMAC3 _ns1__Measures * SOAP_FMAC4 soap_in__ns1__Measures(struct soap*, const char*, _ns1__Measures *, const char*);
SOAP_FMAC1 _ns1__Measures * SOAP_FMAC2 soap_instantiate__ns1__Measures(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Measures * soap_new__ns1__Measures(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__Measures(soap, n, NULL, NULL, NULL);
}

inline _ns1__Measures * soap_new_req__ns1__Measures(
	struct soap *soap)
{
	_ns1__Measures *_p = ::soap_new__ns1__Measures(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__Measures * soap_new_set__ns1__Measures(
	struct soap *soap)
{
	_ns1__Measures *_p = ::soap_new__ns1__Measures(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__Measures(struct soap *soap, _ns1__Measures const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Measures", p->soap_type() == SOAP_TYPE__ns1__Measures ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__Measures(struct soap *soap, const char *URL, _ns1__Measures const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Measures", p->soap_type() == SOAP_TYPE__ns1__Measures ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__Measures(struct soap *soap, const char *URL, _ns1__Measures const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Measures", p->soap_type() == SOAP_TYPE__ns1__Measures ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__Measures(struct soap *soap, const char *URL, _ns1__Measures const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Measures", p->soap_type() == SOAP_TYPE__ns1__Measures ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__Measures * SOAP_FMAC4 soap_get__ns1__Measures(struct soap*, _ns1__Measures *, const char*, const char*);

inline int soap_read__ns1__Measures(struct soap *soap, _ns1__Measures *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__Measures(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__Measures(struct soap *soap, const char *URL, _ns1__Measures *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__Measures(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__Measures(struct soap *soap, _ns1__Measures *p)
{
	if (::soap_read__ns1__Measures(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__MountedMoldsResponse_DEFINED
#define SOAP_TYPE__ns1__MountedMoldsResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__MountedMoldsResponse(struct soap*, const char*, int, const _ns1__MountedMoldsResponse *, const char*);
SOAP_FMAC3 _ns1__MountedMoldsResponse * SOAP_FMAC4 soap_in__ns1__MountedMoldsResponse(struct soap*, const char*, _ns1__MountedMoldsResponse *, const char*);
SOAP_FMAC1 _ns1__MountedMoldsResponse * SOAP_FMAC2 soap_instantiate__ns1__MountedMoldsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__MountedMoldsResponse * soap_new__ns1__MountedMoldsResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__MountedMoldsResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__MountedMoldsResponse * soap_new_req__ns1__MountedMoldsResponse(
	struct soap *soap)
{
	_ns1__MountedMoldsResponse *_p = ::soap_new__ns1__MountedMoldsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__MountedMoldsResponse * soap_new_set__ns1__MountedMoldsResponse(
	struct soap *soap,
	_ns1__MountedMoldsResponse_MountedMoldsResult *MountedMoldsResult)
{
	_ns1__MountedMoldsResponse *_p = ::soap_new__ns1__MountedMoldsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__MountedMoldsResponse::MountedMoldsResult = MountedMoldsResult;
	}
	return _p;
}

inline int soap_write__ns1__MountedMoldsResponse(struct soap *soap, _ns1__MountedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__MountedMoldsResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__MountedMoldsResponse(struct soap *soap, const char *URL, _ns1__MountedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__MountedMoldsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__MountedMoldsResponse(struct soap *soap, const char *URL, _ns1__MountedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__MountedMoldsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__MountedMoldsResponse(struct soap *soap, const char *URL, _ns1__MountedMoldsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsResponse", p->soap_type() == SOAP_TYPE__ns1__MountedMoldsResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__MountedMoldsResponse * SOAP_FMAC4 soap_get__ns1__MountedMoldsResponse(struct soap*, _ns1__MountedMoldsResponse *, const char*, const char*);

inline int soap_read__ns1__MountedMoldsResponse(struct soap *soap, _ns1__MountedMoldsResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__MountedMoldsResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__MountedMoldsResponse(struct soap *soap, const char *URL, _ns1__MountedMoldsResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__MountedMoldsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__MountedMoldsResponse(struct soap *soap, _ns1__MountedMoldsResponse *p)
{
	if (::soap_read__ns1__MountedMoldsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__MountedMolds_DEFINED
#define SOAP_TYPE__ns1__MountedMolds_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__MountedMolds(struct soap*, const char*, int, const _ns1__MountedMolds *, const char*);
SOAP_FMAC3 _ns1__MountedMolds * SOAP_FMAC4 soap_in__ns1__MountedMolds(struct soap*, const char*, _ns1__MountedMolds *, const char*);
SOAP_FMAC1 _ns1__MountedMolds * SOAP_FMAC2 soap_instantiate__ns1__MountedMolds(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__MountedMolds * soap_new__ns1__MountedMolds(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__MountedMolds(soap, n, NULL, NULL, NULL);
}

inline _ns1__MountedMolds * soap_new_req__ns1__MountedMolds(
	struct soap *soap)
{
	_ns1__MountedMolds *_p = ::soap_new__ns1__MountedMolds(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__MountedMolds * soap_new_set__ns1__MountedMolds(
	struct soap *soap)
{
	_ns1__MountedMolds *_p = ::soap_new__ns1__MountedMolds(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__MountedMolds(struct soap *soap, _ns1__MountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMolds", p->soap_type() == SOAP_TYPE__ns1__MountedMolds ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__MountedMolds(struct soap *soap, const char *URL, _ns1__MountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMolds", p->soap_type() == SOAP_TYPE__ns1__MountedMolds ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__MountedMolds(struct soap *soap, const char *URL, _ns1__MountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMolds", p->soap_type() == SOAP_TYPE__ns1__MountedMolds ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__MountedMolds(struct soap *soap, const char *URL, _ns1__MountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMolds", p->soap_type() == SOAP_TYPE__ns1__MountedMolds ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__MountedMolds * SOAP_FMAC4 soap_get__ns1__MountedMolds(struct soap*, _ns1__MountedMolds *, const char*, const char*);

inline int soap_read__ns1__MountedMolds(struct soap *soap, _ns1__MountedMolds *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__MountedMolds(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__MountedMolds(struct soap *soap, const char *URL, _ns1__MountedMolds *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__MountedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__MountedMolds(struct soap *soap, _ns1__MountedMolds *p)
{
	if (::soap_read__ns1__MountedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetAlarmsResponse_DEFINED
#define SOAP_TYPE__ns1__GetAlarmsResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAlarmsResponse(struct soap*, const char*, int, const _ns1__GetAlarmsResponse *, const char*);
SOAP_FMAC3 _ns1__GetAlarmsResponse * SOAP_FMAC4 soap_in__ns1__GetAlarmsResponse(struct soap*, const char*, _ns1__GetAlarmsResponse *, const char*);
SOAP_FMAC1 _ns1__GetAlarmsResponse * SOAP_FMAC2 soap_instantiate__ns1__GetAlarmsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAlarmsResponse * soap_new__ns1__GetAlarmsResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetAlarmsResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetAlarmsResponse * soap_new_req__ns1__GetAlarmsResponse(
	struct soap *soap)
{
	_ns1__GetAlarmsResponse *_p = ::soap_new__ns1__GetAlarmsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetAlarmsResponse * soap_new_set__ns1__GetAlarmsResponse(
	struct soap *soap,
	_ns1__GetAlarmsResponse_GetAlarmsResult *GetAlarmsResult)
{
	_ns1__GetAlarmsResponse *_p = ::soap_new__ns1__GetAlarmsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetAlarmsResponse::GetAlarmsResult = GetAlarmsResult;
	}
	return _p;
}

inline int soap_write__ns1__GetAlarmsResponse(struct soap *soap, _ns1__GetAlarmsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsResponse", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetAlarmsResponse(struct soap *soap, const char *URL, _ns1__GetAlarmsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsResponse", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetAlarmsResponse(struct soap *soap, const char *URL, _ns1__GetAlarmsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsResponse", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetAlarmsResponse(struct soap *soap, const char *URL, _ns1__GetAlarmsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsResponse", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetAlarmsResponse * SOAP_FMAC4 soap_get__ns1__GetAlarmsResponse(struct soap*, _ns1__GetAlarmsResponse *, const char*, const char*);

inline int soap_read__ns1__GetAlarmsResponse(struct soap *soap, _ns1__GetAlarmsResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetAlarmsResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetAlarmsResponse(struct soap *soap, const char *URL, _ns1__GetAlarmsResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetAlarmsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetAlarmsResponse(struct soap *soap, _ns1__GetAlarmsResponse *p)
{
	if (::soap_read__ns1__GetAlarmsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetAlarms_DEFINED
#define SOAP_TYPE__ns1__GetAlarms_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAlarms(struct soap*, const char*, int, const _ns1__GetAlarms *, const char*);
SOAP_FMAC3 _ns1__GetAlarms * SOAP_FMAC4 soap_in__ns1__GetAlarms(struct soap*, const char*, _ns1__GetAlarms *, const char*);
SOAP_FMAC1 _ns1__GetAlarms * SOAP_FMAC2 soap_instantiate__ns1__GetAlarms(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAlarms * soap_new__ns1__GetAlarms(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetAlarms(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetAlarms * soap_new_req__ns1__GetAlarms(
	struct soap *soap)
{
	_ns1__GetAlarms *_p = ::soap_new__ns1__GetAlarms(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetAlarms * soap_new_set__ns1__GetAlarms(
	struct soap *soap)
{
	_ns1__GetAlarms *_p = ::soap_new__ns1__GetAlarms(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetAlarms(struct soap *soap, _ns1__GetAlarms const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarms", p->soap_type() == SOAP_TYPE__ns1__GetAlarms ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetAlarms(struct soap *soap, const char *URL, _ns1__GetAlarms const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarms", p->soap_type() == SOAP_TYPE__ns1__GetAlarms ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetAlarms(struct soap *soap, const char *URL, _ns1__GetAlarms const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarms", p->soap_type() == SOAP_TYPE__ns1__GetAlarms ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetAlarms(struct soap *soap, const char *URL, _ns1__GetAlarms const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarms", p->soap_type() == SOAP_TYPE__ns1__GetAlarms ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetAlarms * SOAP_FMAC4 soap_get__ns1__GetAlarms(struct soap*, _ns1__GetAlarms *, const char*, const char*);

inline int soap_read__ns1__GetAlarms(struct soap *soap, _ns1__GetAlarms *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetAlarms(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetAlarms(struct soap *soap, const char *URL, _ns1__GetAlarms *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetAlarms(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetAlarms(struct soap *soap, _ns1__GetAlarms *p)
{
	if (::soap_read__ns1__GetAlarms(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse_DEFINED
#define SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAlarmsSinceLastQueryResponse(struct soap*, const char*, int, const _ns1__GetAlarmsSinceLastQueryResponse *, const char*);
SOAP_FMAC3 _ns1__GetAlarmsSinceLastQueryResponse * SOAP_FMAC4 soap_in__ns1__GetAlarmsSinceLastQueryResponse(struct soap*, const char*, _ns1__GetAlarmsSinceLastQueryResponse *, const char*);
SOAP_FMAC1 _ns1__GetAlarmsSinceLastQueryResponse * SOAP_FMAC2 soap_instantiate__ns1__GetAlarmsSinceLastQueryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAlarmsSinceLastQueryResponse * soap_new__ns1__GetAlarmsSinceLastQueryResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetAlarmsSinceLastQueryResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetAlarmsSinceLastQueryResponse * soap_new_req__ns1__GetAlarmsSinceLastQueryResponse(
	struct soap *soap)
{
	_ns1__GetAlarmsSinceLastQueryResponse *_p = ::soap_new__ns1__GetAlarmsSinceLastQueryResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetAlarmsSinceLastQueryResponse * soap_new_set__ns1__GetAlarmsSinceLastQueryResponse(
	struct soap *soap,
	_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *GetAlarmsSinceLastQueryResult)
{
	_ns1__GetAlarmsSinceLastQueryResponse *_p = ::soap_new__ns1__GetAlarmsSinceLastQueryResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetAlarmsSinceLastQueryResponse::GetAlarmsSinceLastQueryResult = GetAlarmsSinceLastQueryResult;
	}
	return _p;
}

inline int soap_write__ns1__GetAlarmsSinceLastQueryResponse(struct soap *soap, _ns1__GetAlarmsSinceLastQueryResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQueryResponse", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetAlarmsSinceLastQueryResponse(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQueryResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQueryResponse", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetAlarmsSinceLastQueryResponse(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQueryResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQueryResponse", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetAlarmsSinceLastQueryResponse(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQueryResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQueryResponse", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQueryResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetAlarmsSinceLastQueryResponse * SOAP_FMAC4 soap_get__ns1__GetAlarmsSinceLastQueryResponse(struct soap*, _ns1__GetAlarmsSinceLastQueryResponse *, const char*, const char*);

inline int soap_read__ns1__GetAlarmsSinceLastQueryResponse(struct soap *soap, _ns1__GetAlarmsSinceLastQueryResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetAlarmsSinceLastQueryResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetAlarmsSinceLastQueryResponse(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQueryResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetAlarmsSinceLastQueryResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetAlarmsSinceLastQueryResponse(struct soap *soap, _ns1__GetAlarmsSinceLastQueryResponse *p)
{
	if (::soap_read__ns1__GetAlarmsSinceLastQueryResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__GetAlarmsSinceLastQuery_DEFINED
#define SOAP_TYPE__ns1__GetAlarmsSinceLastQuery_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAlarmsSinceLastQuery(struct soap*, const char*, int, const _ns1__GetAlarmsSinceLastQuery *, const char*);
SOAP_FMAC3 _ns1__GetAlarmsSinceLastQuery * SOAP_FMAC4 soap_in__ns1__GetAlarmsSinceLastQuery(struct soap*, const char*, _ns1__GetAlarmsSinceLastQuery *, const char*);
SOAP_FMAC1 _ns1__GetAlarmsSinceLastQuery * SOAP_FMAC2 soap_instantiate__ns1__GetAlarmsSinceLastQuery(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAlarmsSinceLastQuery * soap_new__ns1__GetAlarmsSinceLastQuery(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetAlarmsSinceLastQuery(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetAlarmsSinceLastQuery * soap_new_req__ns1__GetAlarmsSinceLastQuery(
	struct soap *soap)
{
	_ns1__GetAlarmsSinceLastQuery *_p = ::soap_new__ns1__GetAlarmsSinceLastQuery(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetAlarmsSinceLastQuery * soap_new_set__ns1__GetAlarmsSinceLastQuery(
	struct soap *soap)
{
	_ns1__GetAlarmsSinceLastQuery *_p = ::soap_new__ns1__GetAlarmsSinceLastQuery(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetAlarmsSinceLastQuery(struct soap *soap, _ns1__GetAlarmsSinceLastQuery const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQuery", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQuery ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetAlarmsSinceLastQuery(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQuery const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQuery", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQuery ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__GetAlarmsSinceLastQuery(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQuery const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQuery", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQuery ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetAlarmsSinceLastQuery(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQuery const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAlarmsSinceLastQuery", p->soap_type() == SOAP_TYPE__ns1__GetAlarmsSinceLastQuery ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetAlarmsSinceLastQuery * SOAP_FMAC4 soap_get__ns1__GetAlarmsSinceLastQuery(struct soap*, _ns1__GetAlarmsSinceLastQuery *, const char*, const char*);

inline int soap_read__ns1__GetAlarmsSinceLastQuery(struct soap *soap, _ns1__GetAlarmsSinceLastQuery *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetAlarmsSinceLastQuery(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetAlarmsSinceLastQuery(struct soap *soap, const char *URL, _ns1__GetAlarmsSinceLastQuery *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetAlarmsSinceLastQuery(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__GetAlarmsSinceLastQuery(struct soap *soap, _ns1__GetAlarmsSinceLastQuery *p)
{
	if (::soap_read__ns1__GetAlarmsSinceLastQuery(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__CountsResponse_DEFINED
#define SOAP_TYPE__ns1__CountsResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CountsResponse(struct soap*, const char*, int, const _ns1__CountsResponse *, const char*);
SOAP_FMAC3 _ns1__CountsResponse * SOAP_FMAC4 soap_in__ns1__CountsResponse(struct soap*, const char*, _ns1__CountsResponse *, const char*);
SOAP_FMAC1 _ns1__CountsResponse * SOAP_FMAC2 soap_instantiate__ns1__CountsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CountsResponse * soap_new__ns1__CountsResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__CountsResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__CountsResponse * soap_new_req__ns1__CountsResponse(
	struct soap *soap)
{
	_ns1__CountsResponse *_p = ::soap_new__ns1__CountsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__CountsResponse * soap_new_set__ns1__CountsResponse(
	struct soap *soap,
	_ns1__CountsResponse_CountsResult *CountsResult)
{
	_ns1__CountsResponse *_p = ::soap_new__ns1__CountsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CountsResponse::CountsResult = CountsResult;
	}
	return _p;
}

inline int soap_write__ns1__CountsResponse(struct soap *soap, _ns1__CountsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CountsResponse", p->soap_type() == SOAP_TYPE__ns1__CountsResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__CountsResponse(struct soap *soap, const char *URL, _ns1__CountsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CountsResponse", p->soap_type() == SOAP_TYPE__ns1__CountsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__CountsResponse(struct soap *soap, const char *URL, _ns1__CountsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CountsResponse", p->soap_type() == SOAP_TYPE__ns1__CountsResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__CountsResponse(struct soap *soap, const char *URL, _ns1__CountsResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CountsResponse", p->soap_type() == SOAP_TYPE__ns1__CountsResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__CountsResponse * SOAP_FMAC4 soap_get__ns1__CountsResponse(struct soap*, _ns1__CountsResponse *, const char*, const char*);

inline int soap_read__ns1__CountsResponse(struct soap *soap, _ns1__CountsResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__CountsResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__CountsResponse(struct soap *soap, const char *URL, _ns1__CountsResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__CountsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__CountsResponse(struct soap *soap, _ns1__CountsResponse *p)
{
	if (::soap_read__ns1__CountsResponse(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__ns1__Counts_DEFINED
#define SOAP_TYPE__ns1__Counts_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Counts(struct soap*, const char*, int, const _ns1__Counts *, const char*);
SOAP_FMAC3 _ns1__Counts * SOAP_FMAC4 soap_in__ns1__Counts(struct soap*, const char*, _ns1__Counts *, const char*);
SOAP_FMAC1 _ns1__Counts * SOAP_FMAC2 soap_instantiate__ns1__Counts(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Counts * soap_new__ns1__Counts(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__Counts(soap, n, NULL, NULL, NULL);
}

inline _ns1__Counts * soap_new_req__ns1__Counts(
	struct soap *soap)
{
	_ns1__Counts *_p = ::soap_new__ns1__Counts(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__Counts * soap_new_set__ns1__Counts(
	struct soap *soap)
{
	_ns1__Counts *_p = ::soap_new__ns1__Counts(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__Counts(struct soap *soap, _ns1__Counts const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Counts", p->soap_type() == SOAP_TYPE__ns1__Counts ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__Counts(struct soap *soap, const char *URL, _ns1__Counts const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Counts", p->soap_type() == SOAP_TYPE__ns1__Counts ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ns1__Counts(struct soap *soap, const char *URL, _ns1__Counts const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Counts", p->soap_type() == SOAP_TYPE__ns1__Counts ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__Counts(struct soap *soap, const char *URL, _ns1__Counts const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Counts", p->soap_type() == SOAP_TYPE__ns1__Counts ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__Counts * SOAP_FMAC4 soap_get__ns1__Counts(struct soap*, _ns1__Counts *, const char*, const char*);

inline int soap_read__ns1__Counts(struct soap *soap, _ns1__Counts *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__Counts(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__Counts(struct soap *soap, const char *URL, _ns1__Counts *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__Counts(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__ns1__Counts(struct soap *soap, _ns1__Counts *p)
{
	if (::soap_read__ns1__Counts(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__PrelevementUnitaire_DEFINED
#define SOAP_TYPE_ns1__PrelevementUnitaire_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__PrelevementUnitaire(struct soap*, const char*, int, const ns1__PrelevementUnitaire *, const char*);
SOAP_FMAC3 ns1__PrelevementUnitaire * SOAP_FMAC4 soap_in_ns1__PrelevementUnitaire(struct soap*, const char*, ns1__PrelevementUnitaire *, const char*);
SOAP_FMAC1 ns1__PrelevementUnitaire * SOAP_FMAC2 soap_instantiate_ns1__PrelevementUnitaire(struct soap*, int, const char*, const char*, size_t*);

inline ns1__PrelevementUnitaire * soap_new_ns1__PrelevementUnitaire(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__PrelevementUnitaire(soap, n, NULL, NULL, NULL);
}

inline ns1__PrelevementUnitaire * soap_new_req_ns1__PrelevementUnitaire(
	struct soap *soap,
	int mold,
	enum ns1__CodeDetection sensor,
	int number)
{
	ns1__PrelevementUnitaire *_p = ::soap_new_ns1__PrelevementUnitaire(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__PrelevementUnitaire::mold = mold;
		_p->ns1__PrelevementUnitaire::sensor = sensor;
		_p->ns1__PrelevementUnitaire::number = number;
	}
	return _p;
}

inline ns1__PrelevementUnitaire * soap_new_set_ns1__PrelevementUnitaire(
	struct soap *soap,
	int mold,
	enum ns1__CodeDetection sensor,
	int number)
{
	ns1__PrelevementUnitaire *_p = ::soap_new_ns1__PrelevementUnitaire(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__PrelevementUnitaire::mold = mold;
		_p->ns1__PrelevementUnitaire::sensor = sensor;
		_p->ns1__PrelevementUnitaire::number = number;
	}
	return _p;
}

inline int soap_write_ns1__PrelevementUnitaire(struct soap *soap, ns1__PrelevementUnitaire const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:PrelevementUnitaire", p->soap_type() == SOAP_TYPE_ns1__PrelevementUnitaire ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__PrelevementUnitaire(struct soap *soap, const char *URL, ns1__PrelevementUnitaire const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:PrelevementUnitaire", p->soap_type() == SOAP_TYPE_ns1__PrelevementUnitaire ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__PrelevementUnitaire(struct soap *soap, const char *URL, ns1__PrelevementUnitaire const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:PrelevementUnitaire", p->soap_type() == SOAP_TYPE_ns1__PrelevementUnitaire ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__PrelevementUnitaire(struct soap *soap, const char *URL, ns1__PrelevementUnitaire const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:PrelevementUnitaire", p->soap_type() == SOAP_TYPE_ns1__PrelevementUnitaire ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__PrelevementUnitaire * SOAP_FMAC4 soap_get_ns1__PrelevementUnitaire(struct soap*, ns1__PrelevementUnitaire *, const char*, const char*);

inline int soap_read_ns1__PrelevementUnitaire(struct soap *soap, ns1__PrelevementUnitaire *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__PrelevementUnitaire(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__PrelevementUnitaire(struct soap *soap, const char *URL, ns1__PrelevementUnitaire *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__PrelevementUnitaire(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__PrelevementUnitaire(struct soap *soap, ns1__PrelevementUnitaire *p)
{
	if (::soap_read_ns1__PrelevementUnitaire(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPrelevementUnitaire_DEFINED
#define SOAP_TYPE_ns1__ArrayOfPrelevementUnitaire_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfPrelevementUnitaire(struct soap*, const char*, int, const ns1__ArrayOfPrelevementUnitaire *, const char*);
SOAP_FMAC3 ns1__ArrayOfPrelevementUnitaire * SOAP_FMAC4 soap_in_ns1__ArrayOfPrelevementUnitaire(struct soap*, const char*, ns1__ArrayOfPrelevementUnitaire *, const char*);
SOAP_FMAC1 ns1__ArrayOfPrelevementUnitaire * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfPrelevementUnitaire(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ArrayOfPrelevementUnitaire * soap_new_ns1__ArrayOfPrelevementUnitaire(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__ArrayOfPrelevementUnitaire(soap, n, NULL, NULL, NULL);
}

inline ns1__ArrayOfPrelevementUnitaire * soap_new_req_ns1__ArrayOfPrelevementUnitaire(
	struct soap *soap,
	int __sizesample,
	ns1__PrelevementUnitaire **sample)
{
	ns1__ArrayOfPrelevementUnitaire *_p = ::soap_new_ns1__ArrayOfPrelevementUnitaire(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ArrayOfPrelevementUnitaire::__sizesample = __sizesample;
		_p->ns1__ArrayOfPrelevementUnitaire::sample = sample;
	}
	return _p;
}

inline ns1__ArrayOfPrelevementUnitaire * soap_new_set_ns1__ArrayOfPrelevementUnitaire(
	struct soap *soap,
	int __sizesample,
	ns1__PrelevementUnitaire **sample)
{
	ns1__ArrayOfPrelevementUnitaire *_p = ::soap_new_ns1__ArrayOfPrelevementUnitaire(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ArrayOfPrelevementUnitaire::__sizesample = __sizesample;
		_p->ns1__ArrayOfPrelevementUnitaire::sample = sample;
	}
	return _p;
}

inline int soap_write_ns1__ArrayOfPrelevementUnitaire(struct soap *soap, ns1__ArrayOfPrelevementUnitaire const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfPrelevementUnitaire", p->soap_type() == SOAP_TYPE_ns1__ArrayOfPrelevementUnitaire ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__ArrayOfPrelevementUnitaire(struct soap *soap, const char *URL, ns1__ArrayOfPrelevementUnitaire const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfPrelevementUnitaire", p->soap_type() == SOAP_TYPE_ns1__ArrayOfPrelevementUnitaire ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__ArrayOfPrelevementUnitaire(struct soap *soap, const char *URL, ns1__ArrayOfPrelevementUnitaire const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfPrelevementUnitaire", p->soap_type() == SOAP_TYPE_ns1__ArrayOfPrelevementUnitaire ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__ArrayOfPrelevementUnitaire(struct soap *soap, const char *URL, ns1__ArrayOfPrelevementUnitaire const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfPrelevementUnitaire", p->soap_type() == SOAP_TYPE_ns1__ArrayOfPrelevementUnitaire ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__ArrayOfPrelevementUnitaire * SOAP_FMAC4 soap_get_ns1__ArrayOfPrelevementUnitaire(struct soap*, ns1__ArrayOfPrelevementUnitaire *, const char*, const char*);

inline int soap_read_ns1__ArrayOfPrelevementUnitaire(struct soap *soap, ns1__ArrayOfPrelevementUnitaire *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__ArrayOfPrelevementUnitaire(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__ArrayOfPrelevementUnitaire(struct soap *soap, const char *URL, ns1__ArrayOfPrelevementUnitaire *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__ArrayOfPrelevementUnitaire(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__ArrayOfPrelevementUnitaire(struct soap *soap, ns1__ArrayOfPrelevementUnitaire *p)
{
	if (::soap_read_ns1__ArrayOfPrelevementUnitaire(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__MoulesPrelevesXml_DEFINED
#define SOAP_TYPE_ns1__MoulesPrelevesXml_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__MoulesPrelevesXml(struct soap*, const char*, int, const ns1__MoulesPrelevesXml *, const char*);
SOAP_FMAC3 ns1__MoulesPrelevesXml * SOAP_FMAC4 soap_in_ns1__MoulesPrelevesXml(struct soap*, const char*, ns1__MoulesPrelevesXml *, const char*);
SOAP_FMAC1 ns1__MoulesPrelevesXml * SOAP_FMAC2 soap_instantiate_ns1__MoulesPrelevesXml(struct soap*, int, const char*, const char*, size_t*);

inline ns1__MoulesPrelevesXml * soap_new_ns1__MoulesPrelevesXml(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__MoulesPrelevesXml(soap, n, NULL, NULL, NULL);
}

inline ns1__MoulesPrelevesXml * soap_new_req_ns1__MoulesPrelevesXml(
	struct soap *soap,
	enum ns1__EResetMode mode)
{
	ns1__MoulesPrelevesXml *_p = ::soap_new_ns1__MoulesPrelevesXml(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__MoulesPrelevesXml::mode = mode;
	}
	return _p;
}

inline ns1__MoulesPrelevesXml * soap_new_set_ns1__MoulesPrelevesXml(
	struct soap *soap,
	ns1__ArrayOfPrelevementUnitaire *Root,
	char *criteria,
	enum ns1__EResetMode mode)
{
	ns1__MoulesPrelevesXml *_p = ::soap_new_ns1__MoulesPrelevesXml(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__MoulesPrelevesXml::Root = Root;
		_p->ns1__MoulesPrelevesXml::criteria = criteria;
		_p->ns1__MoulesPrelevesXml::mode = mode;
	}
	return _p;
}

inline int soap_write_ns1__MoulesPrelevesXml(struct soap *soap, ns1__MoulesPrelevesXml const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesPrelevesXml", p->soap_type() == SOAP_TYPE_ns1__MoulesPrelevesXml ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__MoulesPrelevesXml(struct soap *soap, const char *URL, ns1__MoulesPrelevesXml const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesPrelevesXml", p->soap_type() == SOAP_TYPE_ns1__MoulesPrelevesXml ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__MoulesPrelevesXml(struct soap *soap, const char *URL, ns1__MoulesPrelevesXml const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesPrelevesXml", p->soap_type() == SOAP_TYPE_ns1__MoulesPrelevesXml ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__MoulesPrelevesXml(struct soap *soap, const char *URL, ns1__MoulesPrelevesXml const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesPrelevesXml", p->soap_type() == SOAP_TYPE_ns1__MoulesPrelevesXml ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__MoulesPrelevesXml * SOAP_FMAC4 soap_get_ns1__MoulesPrelevesXml(struct soap*, ns1__MoulesPrelevesXml *, const char*, const char*);

inline int soap_read_ns1__MoulesPrelevesXml(struct soap *soap, ns1__MoulesPrelevesXml *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__MoulesPrelevesXml(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__MoulesPrelevesXml(struct soap *soap, const char *URL, ns1__MoulesPrelevesXml *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__MoulesPrelevesXml(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__MoulesPrelevesXml(struct soap *soap, ns1__MoulesPrelevesXml *p)
{
	if (::soap_read_ns1__MoulesPrelevesXml(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9_DEFINED
#define SOAP_TYPE_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, const char*, int, const ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *, const char*);
SOAP_FMAC3 ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 * SOAP_FMAC4 soap_in_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, const char*, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *, const char*);
SOAP_FMAC1 ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 * SOAP_FMAC2 soap_instantiate_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, int, const char*, const char*, size_t*);

inline ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 * soap_new_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(soap, n, NULL, NULL, NULL);
}

inline ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 * soap_new_req_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(
	struct soap *soap)
{
	ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *_p = ::soap_new_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 * soap_new_set_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(
	struct soap *soap,
	ns1__Moule *mold,
	char *criteria)
{
	ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *_p = ::soap_new_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__PrelevementWS_USCORE1_USCORE0_USCORE9::mold = mold;
		_p->ns1__PrelevementWS_USCORE1_USCORE0_USCORE9::criteria = criteria;
	}
	return _p;
}

inline int soap_write_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap *soap, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:PrelevementWS_1_0_9", p->soap_type() == SOAP_TYPE_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap *soap, const char *URL, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:PrelevementWS_1_0_9", p->soap_type() == SOAP_TYPE_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap *soap, const char *URL, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:PrelevementWS_1_0_9", p->soap_type() == SOAP_TYPE_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap *soap, const char *URL, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:PrelevementWS_1_0_9", p->soap_type() == SOAP_TYPE_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 * SOAP_FMAC4 soap_get_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *, const char*, const char*);

inline int soap_read_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap *soap, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap *soap, const char *URL, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap *soap, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *p)
{
	if (::soap_read_ns1__PrelevementWS_USCORE1_USCORE0_USCORE9(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9_DEFINED
#define SOAP_TYPE_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap*, const char*, int, const ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *, const char*);
SOAP_FMAC3 ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 * SOAP_FMAC4 soap_in_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap*, const char*, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *, const char*);
SOAP_FMAC1 ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 * SOAP_FMAC2 soap_instantiate_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap*, int, const char*, const char*, size_t*);

inline ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 * soap_new_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(soap, n, NULL, NULL, NULL);
}

inline ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 * soap_new_req_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(
	struct soap *soap,
	int __sizeRoot,
	ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 **Root)
{
	ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *_p = ::soap_new_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9::__sizeRoot = __sizeRoot;
		_p->ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9::Root = Root;
	}
	return _p;
}

inline ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 * soap_new_set_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(
	struct soap *soap,
	int __sizeRoot,
	ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 **Root)
{
	ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *_p = ::soap_new_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9::__sizeRoot = __sizeRoot;
		_p->ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9::Root = Root;
	}
	return _p;
}

inline int soap_write_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap *soap, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesPrelevesXmlPourWS1_0_9", p->soap_type() == SOAP_TYPE_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap *soap, const char *URL, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesPrelevesXmlPourWS1_0_9", p->soap_type() == SOAP_TYPE_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap *soap, const char *URL, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesPrelevesXmlPourWS1_0_9", p->soap_type() == SOAP_TYPE_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap *soap, const char *URL, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesPrelevesXmlPourWS1_0_9", p->soap_type() == SOAP_TYPE_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 * SOAP_FMAC4 soap_get_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap*, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *, const char*, const char*);

inline int soap_read_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap *soap, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap *soap, const char *URL, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap *soap, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *p)
{
	if (::soap_read_ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__RejetMoule_DEFINED
#define SOAP_TYPE_ns1__RejetMoule_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__RejetMoule(struct soap*, const char*, int, const ns1__RejetMoule *, const char*);
SOAP_FMAC3 ns1__RejetMoule * SOAP_FMAC4 soap_in_ns1__RejetMoule(struct soap*, const char*, ns1__RejetMoule *, const char*);
SOAP_FMAC1 ns1__RejetMoule * SOAP_FMAC2 soap_instantiate_ns1__RejetMoule(struct soap*, int, const char*, const char*, size_t*);

inline ns1__RejetMoule * soap_new_ns1__RejetMoule(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__RejetMoule(soap, n, NULL, NULL, NULL);
}

inline ns1__RejetMoule * soap_new_req_ns1__RejetMoule(
	struct soap *soap,
	int nb)
{
	ns1__RejetMoule *_p = ::soap_new_ns1__RejetMoule(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__RejetMoule::nb = nb;
	}
	return _p;
}

inline ns1__RejetMoule * soap_new_set_ns1__RejetMoule(
	struct soap *soap,
	int nb)
{
	ns1__RejetMoule *_p = ::soap_new_ns1__RejetMoule(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__RejetMoule::nb = nb;
	}
	return _p;
}

inline int soap_write_ns1__RejetMoule(struct soap *soap, ns1__RejetMoule const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:RejetMoule", p->soap_type() == SOAP_TYPE_ns1__RejetMoule ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__RejetMoule(struct soap *soap, const char *URL, ns1__RejetMoule const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:RejetMoule", p->soap_type() == SOAP_TYPE_ns1__RejetMoule ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__RejetMoule(struct soap *soap, const char *URL, ns1__RejetMoule const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:RejetMoule", p->soap_type() == SOAP_TYPE_ns1__RejetMoule ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__RejetMoule(struct soap *soap, const char *URL, ns1__RejetMoule const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:RejetMoule", p->soap_type() == SOAP_TYPE_ns1__RejetMoule ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__RejetMoule * SOAP_FMAC4 soap_get_ns1__RejetMoule(struct soap*, ns1__RejetMoule *, const char*, const char*);

inline int soap_read_ns1__RejetMoule(struct soap *soap, ns1__RejetMoule *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__RejetMoule(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__RejetMoule(struct soap *soap, const char *URL, ns1__RejetMoule *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__RejetMoule(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__RejetMoule(struct soap *soap, ns1__RejetMoule *p)
{
	if (::soap_read_ns1__RejetMoule(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__RejetMouleVue_DEFINED
#define SOAP_TYPE_ns1__RejetMouleVue_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__RejetMouleVue(struct soap*, const char*, int, const ns1__RejetMouleVue *, const char*);
SOAP_FMAC3 ns1__RejetMouleVue * SOAP_FMAC4 soap_in_ns1__RejetMouleVue(struct soap*, const char*, ns1__RejetMouleVue *, const char*);
SOAP_FMAC1 ns1__RejetMouleVue * SOAP_FMAC2 soap_instantiate_ns1__RejetMouleVue(struct soap*, int, const char*, const char*, size_t*);

inline ns1__RejetMouleVue * soap_new_ns1__RejetMouleVue(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__RejetMouleVue(soap, n, NULL, NULL, NULL);
}

inline ns1__RejetMouleVue * soap_new_req_ns1__RejetMouleVue(
	struct soap *soap,
	int reason,
	int nb__1)
{
	ns1__RejetMouleVue *_p = ::soap_new_ns1__RejetMouleVue(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__RejetMouleVue::reason = reason;
		_p->ns1__RejetMoule::nb = nb__1;
	}
	return _p;
}

inline ns1__RejetMouleVue * soap_new_set_ns1__RejetMouleVue(
	struct soap *soap,
	int reason,
	int nb__1)
{
	ns1__RejetMouleVue *_p = ::soap_new_ns1__RejetMouleVue(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__RejetMouleVue::reason = reason;
		_p->ns1__RejetMoule::nb = nb__1;
	}
	return _p;
}

inline int soap_write_ns1__RejetMouleVue(struct soap *soap, ns1__RejetMouleVue const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:RejetMouleVue", p->soap_type() == SOAP_TYPE_ns1__RejetMouleVue ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__RejetMouleVue(struct soap *soap, const char *URL, ns1__RejetMouleVue const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:RejetMouleVue", p->soap_type() == SOAP_TYPE_ns1__RejetMouleVue ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__RejetMouleVue(struct soap *soap, const char *URL, ns1__RejetMouleVue const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:RejetMouleVue", p->soap_type() == SOAP_TYPE_ns1__RejetMouleVue ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__RejetMouleVue(struct soap *soap, const char *URL, ns1__RejetMouleVue const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:RejetMouleVue", p->soap_type() == SOAP_TYPE_ns1__RejetMouleVue ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__RejetMouleVue * SOAP_FMAC4 soap_get_ns1__RejetMouleVue(struct soap*, ns1__RejetMouleVue *, const char*, const char*);

inline int soap_read_ns1__RejetMouleVue(struct soap *soap, ns1__RejetMouleVue *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__RejetMouleVue(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__RejetMouleVue(struct soap *soap, const char *URL, ns1__RejetMouleVue *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__RejetMouleVue(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__RejetMouleVue(struct soap *soap, ns1__RejetMouleVue *p)
{
	if (::soap_read_ns1__RejetMouleVue(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRejetMouleVue_DEFINED
#define SOAP_TYPE_ns1__ArrayOfRejetMouleVue_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfRejetMouleVue(struct soap*, const char*, int, const ns1__ArrayOfRejetMouleVue *, const char*);
SOAP_FMAC3 ns1__ArrayOfRejetMouleVue * SOAP_FMAC4 soap_in_ns1__ArrayOfRejetMouleVue(struct soap*, const char*, ns1__ArrayOfRejetMouleVue *, const char*);
SOAP_FMAC1 ns1__ArrayOfRejetMouleVue * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfRejetMouleVue(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ArrayOfRejetMouleVue * soap_new_ns1__ArrayOfRejetMouleVue(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__ArrayOfRejetMouleVue(soap, n, NULL, NULL, NULL);
}

inline ns1__ArrayOfRejetMouleVue * soap_new_req_ns1__ArrayOfRejetMouleVue(
	struct soap *soap,
	int __sizemold,
	ns1__RejetMouleVue **mold)
{
	ns1__ArrayOfRejetMouleVue *_p = ::soap_new_ns1__ArrayOfRejetMouleVue(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ArrayOfRejetMouleVue::__sizemold = __sizemold;
		_p->ns1__ArrayOfRejetMouleVue::mold = mold;
	}
	return _p;
}

inline ns1__ArrayOfRejetMouleVue * soap_new_set_ns1__ArrayOfRejetMouleVue(
	struct soap *soap,
	int __sizemold,
	ns1__RejetMouleVue **mold)
{
	ns1__ArrayOfRejetMouleVue *_p = ::soap_new_ns1__ArrayOfRejetMouleVue(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ArrayOfRejetMouleVue::__sizemold = __sizemold;
		_p->ns1__ArrayOfRejetMouleVue::mold = mold;
	}
	return _p;
}

inline int soap_write_ns1__ArrayOfRejetMouleVue(struct soap *soap, ns1__ArrayOfRejetMouleVue const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfRejetMouleVue", p->soap_type() == SOAP_TYPE_ns1__ArrayOfRejetMouleVue ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__ArrayOfRejetMouleVue(struct soap *soap, const char *URL, ns1__ArrayOfRejetMouleVue const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfRejetMouleVue", p->soap_type() == SOAP_TYPE_ns1__ArrayOfRejetMouleVue ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__ArrayOfRejetMouleVue(struct soap *soap, const char *URL, ns1__ArrayOfRejetMouleVue const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfRejetMouleVue", p->soap_type() == SOAP_TYPE_ns1__ArrayOfRejetMouleVue ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__ArrayOfRejetMouleVue(struct soap *soap, const char *URL, ns1__ArrayOfRejetMouleVue const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfRejetMouleVue", p->soap_type() == SOAP_TYPE_ns1__ArrayOfRejetMouleVue ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__ArrayOfRejetMouleVue * SOAP_FMAC4 soap_get_ns1__ArrayOfRejetMouleVue(struct soap*, ns1__ArrayOfRejetMouleVue *, const char*, const char*);

inline int soap_read_ns1__ArrayOfRejetMouleVue(struct soap *soap, ns1__ArrayOfRejetMouleVue *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__ArrayOfRejetMouleVue(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__ArrayOfRejetMouleVue(struct soap *soap, const char *URL, ns1__ArrayOfRejetMouleVue *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__ArrayOfRejetMouleVue(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__ArrayOfRejetMouleVue(struct soap *soap, ns1__ArrayOfRejetMouleVue *p)
{
	if (::soap_read_ns1__ArrayOfRejetMouleVue(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__MoulesEjectesXml_DEFINED
#define SOAP_TYPE_ns1__MoulesEjectesXml_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__MoulesEjectesXml(struct soap*, const char*, int, const ns1__MoulesEjectesXml *, const char*);
SOAP_FMAC3 ns1__MoulesEjectesXml * SOAP_FMAC4 soap_in_ns1__MoulesEjectesXml(struct soap*, const char*, ns1__MoulesEjectesXml *, const char*);
SOAP_FMAC1 ns1__MoulesEjectesXml * SOAP_FMAC2 soap_instantiate_ns1__MoulesEjectesXml(struct soap*, int, const char*, const char*, size_t*);

inline ns1__MoulesEjectesXml * soap_new_ns1__MoulesEjectesXml(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__MoulesEjectesXml(soap, n, NULL, NULL, NULL);
}

inline ns1__MoulesEjectesXml * soap_new_req_ns1__MoulesEjectesXml(
	struct soap *soap)
{
	ns1__MoulesEjectesXml *_p = ::soap_new_ns1__MoulesEjectesXml(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline ns1__MoulesEjectesXml * soap_new_set_ns1__MoulesEjectesXml(
	struct soap *soap,
	ns1__ArrayOfRejetMouleVue *Root)
{
	ns1__MoulesEjectesXml *_p = ::soap_new_ns1__MoulesEjectesXml(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__MoulesEjectesXml::Root = Root;
	}
	return _p;
}

inline int soap_write_ns1__MoulesEjectesXml(struct soap *soap, ns1__MoulesEjectesXml const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesEjectesXml", p->soap_type() == SOAP_TYPE_ns1__MoulesEjectesXml ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__MoulesEjectesXml(struct soap *soap, const char *URL, ns1__MoulesEjectesXml const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesEjectesXml", p->soap_type() == SOAP_TYPE_ns1__MoulesEjectesXml ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__MoulesEjectesXml(struct soap *soap, const char *URL, ns1__MoulesEjectesXml const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesEjectesXml", p->soap_type() == SOAP_TYPE_ns1__MoulesEjectesXml ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__MoulesEjectesXml(struct soap *soap, const char *URL, ns1__MoulesEjectesXml const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MoulesEjectesXml", p->soap_type() == SOAP_TYPE_ns1__MoulesEjectesXml ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__MoulesEjectesXml * SOAP_FMAC4 soap_get_ns1__MoulesEjectesXml(struct soap*, ns1__MoulesEjectesXml *, const char*, const char*);

inline int soap_read_ns1__MoulesEjectesXml(struct soap *soap, ns1__MoulesEjectesXml *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__MoulesEjectesXml(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__MoulesEjectesXml(struct soap *soap, const char *URL, ns1__MoulesEjectesXml *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__MoulesEjectesXml(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__MoulesEjectesXml(struct soap *soap, ns1__MoulesEjectesXml *p)
{
	if (::soap_read_ns1__MoulesEjectesXml(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__Moule_DEFINED
#define SOAP_TYPE_ns1__Moule_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Moule(struct soap*, const char*, int, const ns1__Moule *, const char*);
SOAP_FMAC3 ns1__Moule * SOAP_FMAC4 soap_in_ns1__Moule(struct soap*, const char*, ns1__Moule *, const char*);
SOAP_FMAC1 ns1__Moule * SOAP_FMAC2 soap_instantiate_ns1__Moule(struct soap*, int, const char*, const char*, size_t*);

inline ns1__Moule * soap_new_ns1__Moule(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__Moule(soap, n, NULL, NULL, NULL);
}

inline ns1__Moule * soap_new_req_ns1__Moule(
	struct soap *soap,
	int nb)
{
	ns1__Moule *_p = ::soap_new_ns1__Moule(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__Moule::nb = nb;
	}
	return _p;
}

inline ns1__Moule * soap_new_set_ns1__Moule(
	struct soap *soap,
	int nb)
{
	ns1__Moule *_p = ::soap_new_ns1__Moule(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__Moule::nb = nb;
	}
	return _p;
}

inline int soap_write_ns1__Moule(struct soap *soap, ns1__Moule const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Moule", p->soap_type() == SOAP_TYPE_ns1__Moule ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__Moule(struct soap *soap, const char *URL, ns1__Moule const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Moule", p->soap_type() == SOAP_TYPE_ns1__Moule ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__Moule(struct soap *soap, const char *URL, ns1__Moule const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Moule", p->soap_type() == SOAP_TYPE_ns1__Moule ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__Moule(struct soap *soap, const char *URL, ns1__Moule const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Moule", p->soap_type() == SOAP_TYPE_ns1__Moule ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__Moule * SOAP_FMAC4 soap_get_ns1__Moule(struct soap*, ns1__Moule *, const char*, const char*);

inline int soap_read_ns1__Moule(struct soap *soap, ns1__Moule *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__Moule(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__Moule(struct soap *soap, const char *URL, ns1__Moule *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__Moule(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__Moule(struct soap *soap, ns1__Moule *p)
{
	if (::soap_read_ns1__Moule(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfMoule_DEFINED
#define SOAP_TYPE_ns1__ArrayOfMoule_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfMoule(struct soap*, const char*, int, const ns1__ArrayOfMoule *, const char*);
SOAP_FMAC3 ns1__ArrayOfMoule * SOAP_FMAC4 soap_in_ns1__ArrayOfMoule(struct soap*, const char*, ns1__ArrayOfMoule *, const char*);
SOAP_FMAC1 ns1__ArrayOfMoule * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfMoule(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ArrayOfMoule * soap_new_ns1__ArrayOfMoule(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__ArrayOfMoule(soap, n, NULL, NULL, NULL);
}

inline ns1__ArrayOfMoule * soap_new_req_ns1__ArrayOfMoule(
	struct soap *soap,
	int __sizemold,
	ns1__Moule **mold)
{
	ns1__ArrayOfMoule *_p = ::soap_new_ns1__ArrayOfMoule(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ArrayOfMoule::__sizemold = __sizemold;
		_p->ns1__ArrayOfMoule::mold = mold;
	}
	return _p;
}

inline ns1__ArrayOfMoule * soap_new_set_ns1__ArrayOfMoule(
	struct soap *soap,
	int __sizemold,
	ns1__Moule **mold)
{
	ns1__ArrayOfMoule *_p = ::soap_new_ns1__ArrayOfMoule(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ArrayOfMoule::__sizemold = __sizemold;
		_p->ns1__ArrayOfMoule::mold = mold;
	}
	return _p;
}

inline int soap_write_ns1__ArrayOfMoule(struct soap *soap, ns1__ArrayOfMoule const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfMoule", p->soap_type() == SOAP_TYPE_ns1__ArrayOfMoule ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__ArrayOfMoule(struct soap *soap, const char *URL, ns1__ArrayOfMoule const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfMoule", p->soap_type() == SOAP_TYPE_ns1__ArrayOfMoule ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__ArrayOfMoule(struct soap *soap, const char *URL, ns1__ArrayOfMoule const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfMoule", p->soap_type() == SOAP_TYPE_ns1__ArrayOfMoule ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__ArrayOfMoule(struct soap *soap, const char *URL, ns1__ArrayOfMoule const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfMoule", p->soap_type() == SOAP_TYPE_ns1__ArrayOfMoule ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__ArrayOfMoule * SOAP_FMAC4 soap_get_ns1__ArrayOfMoule(struct soap*, ns1__ArrayOfMoule *, const char*, const char*);

inline int soap_read_ns1__ArrayOfMoule(struct soap *soap, ns1__ArrayOfMoule *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__ArrayOfMoule(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__ArrayOfMoule(struct soap *soap, const char *URL, ns1__ArrayOfMoule *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__ArrayOfMoule(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__ArrayOfMoule(struct soap *soap, ns1__ArrayOfMoule *p)
{
	if (::soap_read_ns1__ArrayOfMoule(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_ns1__MountedMoldsXml_DEFINED
#define SOAP_TYPE_ns1__MountedMoldsXml_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__MountedMoldsXml(struct soap*, const char*, int, const ns1__MountedMoldsXml *, const char*);
SOAP_FMAC3 ns1__MountedMoldsXml * SOAP_FMAC4 soap_in_ns1__MountedMoldsXml(struct soap*, const char*, ns1__MountedMoldsXml *, const char*);
SOAP_FMAC1 ns1__MountedMoldsXml * SOAP_FMAC2 soap_instantiate_ns1__MountedMoldsXml(struct soap*, int, const char*, const char*, size_t*);

inline ns1__MountedMoldsXml * soap_new_ns1__MountedMoldsXml(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__MountedMoldsXml(soap, n, NULL, NULL, NULL);
}

inline ns1__MountedMoldsXml * soap_new_req_ns1__MountedMoldsXml(
	struct soap *soap)
{
	ns1__MountedMoldsXml *_p = ::soap_new_ns1__MountedMoldsXml(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline ns1__MountedMoldsXml * soap_new_set_ns1__MountedMoldsXml(
	struct soap *soap,
	ns1__ArrayOfMoule *Root)
{
	ns1__MountedMoldsXml *_p = ::soap_new_ns1__MountedMoldsXml(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__MountedMoldsXml::Root = Root;
	}
	return _p;
}

inline int soap_write_ns1__MountedMoldsXml(struct soap *soap, ns1__MountedMoldsXml const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsXml", p->soap_type() == SOAP_TYPE_ns1__MountedMoldsXml ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__MountedMoldsXml(struct soap *soap, const char *URL, ns1__MountedMoldsXml const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsXml", p->soap_type() == SOAP_TYPE_ns1__MountedMoldsXml ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ns1__MountedMoldsXml(struct soap *soap, const char *URL, ns1__MountedMoldsXml const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsXml", p->soap_type() == SOAP_TYPE_ns1__MountedMoldsXml ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__MountedMoldsXml(struct soap *soap, const char *URL, ns1__MountedMoldsXml const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MountedMoldsXml", p->soap_type() == SOAP_TYPE_ns1__MountedMoldsXml ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__MountedMoldsXml * SOAP_FMAC4 soap_get_ns1__MountedMoldsXml(struct soap*, ns1__MountedMoldsXml *, const char*, const char*);

inline int soap_read_ns1__MountedMoldsXml(struct soap *soap, ns1__MountedMoldsXml *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__MountedMoldsXml(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__MountedMoldsXml(struct soap *soap, const char *URL, ns1__MountedMoldsXml *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__MountedMoldsXml(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ns1__MountedMoldsXml(struct soap *soap, ns1__MountedMoldsXml *p)
{
	if (::soap_read_ns1__MountedMoldsXml(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(
	struct soap *soap)
{
	struct SOAP_ENV__Fault *_p = ::soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Fault(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(
	struct soap *soap,
	char *faultcode,
	char *faultstring,
	char *faultactor,
	struct SOAP_ENV__Detail *detail,
	struct SOAP_ENV__Code *SOAP_ENV__Code,
	struct SOAP_ENV__Reason *SOAP_ENV__Reason,
	char *SOAP_ENV__Node,
	char *SOAP_ENV__Role,
	struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{
	struct SOAP_ENV__Fault *_p = ::soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Fault(soap, _p);
		_p->faultcode = faultcode;
		_p->faultstring = faultstring;
		_p->faultactor = faultactor;
		_p->detail = detail;
		_p->SOAP_ENV__Code = SOAP_ENV__Code;
		_p->SOAP_ENV__Reason = SOAP_ENV__Reason;
		_p->SOAP_ENV__Node = SOAP_ENV__Node;
		_p->SOAP_ENV__Role = SOAP_ENV__Role;
		_p->SOAP_ENV__Detail = SOAP_ENV__Detail;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_write_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize_SOAP_ENV__Fault(soap, p), 0) || ::soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Fault(struct soap *soap, const char *URL, struct SOAP_ENV__Fault const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Fault(soap, p), 0) || ::soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_SOAP_ENV__Fault(struct soap *soap, const char *URL, struct SOAP_ENV__Fault const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Fault(soap, p), 0) || ::soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Fault(struct soap *soap, const char *URL, struct SOAP_ENV__Fault const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Fault(soap, p), 0) || ::soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_read_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p)
{
	if (p)
	{	::soap_default_SOAP_ENV__Fault(soap, p);
		if (soap_begin_recv(soap) || ::soap_get_SOAP_ENV__Fault(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Fault(struct soap *soap, const char *URL, struct SOAP_ENV__Fault *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_SOAP_ENV__Fault(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p)
{
	if (::soap_read_SOAP_ENV__Fault(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(
	struct soap *soap)
{
	struct SOAP_ENV__Reason *_p = ::soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Reason(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(
	struct soap *soap,
	char *SOAP_ENV__Text)
{
	struct SOAP_ENV__Reason *_p = ::soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Reason(soap, _p);
		_p->SOAP_ENV__Text = SOAP_ENV__Text;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_write_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize_SOAP_ENV__Reason(soap, p), 0) || ::soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Reason(struct soap *soap, const char *URL, struct SOAP_ENV__Reason const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Reason(soap, p), 0) || ::soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_SOAP_ENV__Reason(struct soap *soap, const char *URL, struct SOAP_ENV__Reason const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Reason(soap, p), 0) || ::soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Reason(struct soap *soap, const char *URL, struct SOAP_ENV__Reason const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Reason(soap, p), 0) || ::soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_read_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p)
{
	if (p)
	{	::soap_default_SOAP_ENV__Reason(soap, p);
		if (soap_begin_recv(soap) || ::soap_get_SOAP_ENV__Reason(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Reason(struct soap *soap, const char *URL, struct SOAP_ENV__Reason *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_SOAP_ENV__Reason(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p)
{
	if (::soap_read_SOAP_ENV__Reason(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(
	struct soap *soap,
	int __type,
	void *fault)
{
	struct SOAP_ENV__Detail *_p = ::soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(
	struct soap *soap,
	char *__any,
	int __type,
	void *fault)
{
	struct SOAP_ENV__Detail *_p = ::soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__any = __any;
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_write_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize_SOAP_ENV__Detail(soap, p), 0) || ::soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Detail(struct soap *soap, const char *URL, struct SOAP_ENV__Detail const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Detail(soap, p), 0) || ::soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_SOAP_ENV__Detail(struct soap *soap, const char *URL, struct SOAP_ENV__Detail const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Detail(soap, p), 0) || ::soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Detail(struct soap *soap, const char *URL, struct SOAP_ENV__Detail const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Detail(soap, p), 0) || ::soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_read_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p)
{
	if (p)
	{	::soap_default_SOAP_ENV__Detail(soap, p);
		if (soap_begin_recv(soap) || ::soap_get_SOAP_ENV__Detail(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Detail(struct soap *soap, const char *URL, struct SOAP_ENV__Detail *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_SOAP_ENV__Detail(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p)
{
	if (::soap_read_SOAP_ENV__Detail(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(
	struct soap *soap)
{
	struct SOAP_ENV__Code *_p = ::soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Code(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(
	struct soap *soap,
	char *SOAP_ENV__Value,
	struct SOAP_ENV__Code *SOAP_ENV__Subcode)
{
	struct SOAP_ENV__Code *_p = ::soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Code(soap, _p);
		_p->SOAP_ENV__Value = SOAP_ENV__Value;
		_p->SOAP_ENV__Subcode = SOAP_ENV__Subcode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_write_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize_SOAP_ENV__Code(soap, p), 0) || ::soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Code(struct soap *soap, const char *URL, struct SOAP_ENV__Code const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Code(soap, p), 0) || ::soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_SOAP_ENV__Code(struct soap *soap, const char *URL, struct SOAP_ENV__Code const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Code(soap, p), 0) || ::soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Code(struct soap *soap, const char *URL, struct SOAP_ENV__Code const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Code(soap, p), 0) || ::soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_read_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p)
{
	if (p)
	{	::soap_default_SOAP_ENV__Code(soap, p);
		if (soap_begin_recv(soap) || ::soap_get_SOAP_ENV__Code(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Code(struct soap *soap, const char *URL, struct SOAP_ENV__Code *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_SOAP_ENV__Code(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p)
{
	if (::soap_read_SOAP_ENV__Code(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(
	struct soap *soap)
{
	struct SOAP_ENV__Header *_p = ::soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(
	struct soap *soap)
{
	struct SOAP_ENV__Header *_p = ::soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_write_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize_SOAP_ENV__Header(soap, p), 0) || ::soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Header(struct soap *soap, const char *URL, struct SOAP_ENV__Header const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Header(soap, p), 0) || ::soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_SOAP_ENV__Header(struct soap *soap, const char *URL, struct SOAP_ENV__Header const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Header(soap, p), 0) || ::soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Header(struct soap *soap, const char *URL, struct SOAP_ENV__Header const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Header(soap, p), 0) || ::soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_read_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p)
{
	if (p)
	{	::soap_default_SOAP_ENV__Header(soap, p);
		if (soap_begin_recv(soap) || ::soap_get_SOAP_ENV__Header(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Header(struct soap *soap, const char *URL, struct SOAP_ENV__Header *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_SOAP_ENV__Header(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p)
{
	if (::soap_read_SOAP_ENV__Header(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#endif

#ifndef SOAP_TYPE___ns1__ChangeSamples__DEFINED
#define SOAP_TYPE___ns1__ChangeSamples__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ChangeSamples_(struct soap*, struct __ns1__ChangeSamples_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ChangeSamples_(struct soap*, const struct __ns1__ChangeSamples_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ChangeSamples_(struct soap*, const char*, int, const struct __ns1__ChangeSamples_ *, const char*);
SOAP_FMAC3 struct __ns1__ChangeSamples_ * SOAP_FMAC4 soap_in___ns1__ChangeSamples_(struct soap*, const char*, struct __ns1__ChangeSamples_ *, const char*);
SOAP_FMAC1 struct __ns1__ChangeSamples_ * SOAP_FMAC2 soap_instantiate___ns1__ChangeSamples_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ChangeSamples_ * soap_new___ns1__ChangeSamples_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ChangeSamples_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ChangeSamples_ * soap_new_req___ns1__ChangeSamples_(
	struct soap *soap)
{
	struct __ns1__ChangeSamples_ *_p = ::soap_new___ns1__ChangeSamples_(soap);
	if (_p)
	{	::soap_default___ns1__ChangeSamples_(soap, _p);
	}
	return _p;
}

inline struct __ns1__ChangeSamples_ * soap_new_set___ns1__ChangeSamples_(
	struct soap *soap,
	_ns1__ChangeSamples *ns1__ChangeSamples)
{
	struct __ns1__ChangeSamples_ *_p = ::soap_new___ns1__ChangeSamples_(soap);
	if (_p)
	{	::soap_default___ns1__ChangeSamples_(soap, _p);
		_p->ns1__ChangeSamples = ns1__ChangeSamples;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ChangeSamples_(struct soap*, const struct __ns1__ChangeSamples_ *, const char*, const char*);

inline int soap_write___ns1__ChangeSamples_(struct soap *soap, struct __ns1__ChangeSamples_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ChangeSamples_(soap, p), 0) || ::soap_put___ns1__ChangeSamples_(soap, p, "-ns1:ChangeSamples", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ChangeSamples_(struct soap *soap, const char *URL, struct __ns1__ChangeSamples_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeSamples_(soap, p), 0) || ::soap_put___ns1__ChangeSamples_(soap, p, "-ns1:ChangeSamples", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__ChangeSamples_(struct soap *soap, const char *URL, struct __ns1__ChangeSamples_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeSamples_(soap, p), 0) || ::soap_put___ns1__ChangeSamples_(soap, p, "-ns1:ChangeSamples", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ChangeSamples_(struct soap *soap, const char *URL, struct __ns1__ChangeSamples_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeSamples_(soap, p), 0) || ::soap_put___ns1__ChangeSamples_(soap, p, "-ns1:ChangeSamples", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ChangeSamples_ * SOAP_FMAC4 soap_get___ns1__ChangeSamples_(struct soap*, struct __ns1__ChangeSamples_ *, const char*, const char*);

inline int soap_read___ns1__ChangeSamples_(struct soap *soap, struct __ns1__ChangeSamples_ *p)
{
	if (p)
	{	::soap_default___ns1__ChangeSamples_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ChangeSamples_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ChangeSamples_(struct soap *soap, const char *URL, struct __ns1__ChangeSamples_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ChangeSamples_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__ChangeSamples_(struct soap *soap, struct __ns1__ChangeSamples_ *p)
{
	if (::soap_read___ns1__ChangeSamples_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__GetVersions__DEFINED
#define SOAP_TYPE___ns1__GetVersions__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetVersions_(struct soap*, struct __ns1__GetVersions_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetVersions_(struct soap*, const struct __ns1__GetVersions_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetVersions_(struct soap*, const char*, int, const struct __ns1__GetVersions_ *, const char*);
SOAP_FMAC3 struct __ns1__GetVersions_ * SOAP_FMAC4 soap_in___ns1__GetVersions_(struct soap*, const char*, struct __ns1__GetVersions_ *, const char*);
SOAP_FMAC1 struct __ns1__GetVersions_ * SOAP_FMAC2 soap_instantiate___ns1__GetVersions_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetVersions_ * soap_new___ns1__GetVersions_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetVersions_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetVersions_ * soap_new_req___ns1__GetVersions_(
	struct soap *soap)
{
	struct __ns1__GetVersions_ *_p = ::soap_new___ns1__GetVersions_(soap);
	if (_p)
	{	::soap_default___ns1__GetVersions_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetVersions_ * soap_new_set___ns1__GetVersions_(
	struct soap *soap,
	_ns1__GetVersions *ns1__GetVersions)
{
	struct __ns1__GetVersions_ *_p = ::soap_new___ns1__GetVersions_(soap);
	if (_p)
	{	::soap_default___ns1__GetVersions_(soap, _p);
		_p->ns1__GetVersions = ns1__GetVersions;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetVersions_(struct soap*, const struct __ns1__GetVersions_ *, const char*, const char*);

inline int soap_write___ns1__GetVersions_(struct soap *soap, struct __ns1__GetVersions_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetVersions_(soap, p), 0) || ::soap_put___ns1__GetVersions_(soap, p, "-ns1:GetVersions", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetVersions_(struct soap *soap, const char *URL, struct __ns1__GetVersions_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetVersions_(soap, p), 0) || ::soap_put___ns1__GetVersions_(soap, p, "-ns1:GetVersions", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__GetVersions_(struct soap *soap, const char *URL, struct __ns1__GetVersions_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetVersions_(soap, p), 0) || ::soap_put___ns1__GetVersions_(soap, p, "-ns1:GetVersions", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetVersions_(struct soap *soap, const char *URL, struct __ns1__GetVersions_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetVersions_(soap, p), 0) || ::soap_put___ns1__GetVersions_(soap, p, "-ns1:GetVersions", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetVersions_ * SOAP_FMAC4 soap_get___ns1__GetVersions_(struct soap*, struct __ns1__GetVersions_ *, const char*, const char*);

inline int soap_read___ns1__GetVersions_(struct soap *soap, struct __ns1__GetVersions_ *p)
{
	if (p)
	{	::soap_default___ns1__GetVersions_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetVersions_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetVersions_(struct soap *soap, const char *URL, struct __ns1__GetVersions_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetVersions_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__GetVersions_(struct soap *soap, struct __ns1__GetVersions_ *p)
{
	if (::soap_read___ns1__GetVersions_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__ChangeMoldsInSampleTable__DEFINED
#define SOAP_TYPE___ns1__ChangeMoldsInSampleTable__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ChangeMoldsInSampleTable_(struct soap*, struct __ns1__ChangeMoldsInSampleTable_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ChangeMoldsInSampleTable_(struct soap*, const struct __ns1__ChangeMoldsInSampleTable_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ChangeMoldsInSampleTable_(struct soap*, const char*, int, const struct __ns1__ChangeMoldsInSampleTable_ *, const char*);
SOAP_FMAC3 struct __ns1__ChangeMoldsInSampleTable_ * SOAP_FMAC4 soap_in___ns1__ChangeMoldsInSampleTable_(struct soap*, const char*, struct __ns1__ChangeMoldsInSampleTable_ *, const char*);
SOAP_FMAC1 struct __ns1__ChangeMoldsInSampleTable_ * SOAP_FMAC2 soap_instantiate___ns1__ChangeMoldsInSampleTable_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ChangeMoldsInSampleTable_ * soap_new___ns1__ChangeMoldsInSampleTable_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ChangeMoldsInSampleTable_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ChangeMoldsInSampleTable_ * soap_new_req___ns1__ChangeMoldsInSampleTable_(
	struct soap *soap)
{
	struct __ns1__ChangeMoldsInSampleTable_ *_p = ::soap_new___ns1__ChangeMoldsInSampleTable_(soap);
	if (_p)
	{	::soap_default___ns1__ChangeMoldsInSampleTable_(soap, _p);
	}
	return _p;
}

inline struct __ns1__ChangeMoldsInSampleTable_ * soap_new_set___ns1__ChangeMoldsInSampleTable_(
	struct soap *soap,
	_ns1__ChangeMoldsInSampleTable *ns1__ChangeMoldsInSampleTable)
{
	struct __ns1__ChangeMoldsInSampleTable_ *_p = ::soap_new___ns1__ChangeMoldsInSampleTable_(soap);
	if (_p)
	{	::soap_default___ns1__ChangeMoldsInSampleTable_(soap, _p);
		_p->ns1__ChangeMoldsInSampleTable = ns1__ChangeMoldsInSampleTable;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ChangeMoldsInSampleTable_(struct soap*, const struct __ns1__ChangeMoldsInSampleTable_ *, const char*, const char*);

inline int soap_write___ns1__ChangeMoldsInSampleTable_(struct soap *soap, struct __ns1__ChangeMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ChangeMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__ChangeMoldsInSampleTable_(soap, p, "-ns1:ChangeMoldsInSampleTable", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ChangeMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__ChangeMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__ChangeMoldsInSampleTable_(soap, p, "-ns1:ChangeMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__ChangeMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__ChangeMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__ChangeMoldsInSampleTable_(soap, p, "-ns1:ChangeMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ChangeMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__ChangeMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__ChangeMoldsInSampleTable_(soap, p, "-ns1:ChangeMoldsInSampleTable", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ChangeMoldsInSampleTable_ * SOAP_FMAC4 soap_get___ns1__ChangeMoldsInSampleTable_(struct soap*, struct __ns1__ChangeMoldsInSampleTable_ *, const char*, const char*);

inline int soap_read___ns1__ChangeMoldsInSampleTable_(struct soap *soap, struct __ns1__ChangeMoldsInSampleTable_ *p)
{
	if (p)
	{	::soap_default___ns1__ChangeMoldsInSampleTable_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ChangeMoldsInSampleTable_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ChangeMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__ChangeMoldsInSampleTable_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ChangeMoldsInSampleTable_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__ChangeMoldsInSampleTable_(struct soap *soap, struct __ns1__ChangeMoldsInSampleTable_ *p)
{
	if (::soap_read___ns1__ChangeMoldsInSampleTable_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__EraseMoldsInSampleTable__DEFINED
#define SOAP_TYPE___ns1__EraseMoldsInSampleTable__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__EraseMoldsInSampleTable_(struct soap*, struct __ns1__EraseMoldsInSampleTable_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__EraseMoldsInSampleTable_(struct soap*, const struct __ns1__EraseMoldsInSampleTable_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__EraseMoldsInSampleTable_(struct soap*, const char*, int, const struct __ns1__EraseMoldsInSampleTable_ *, const char*);
SOAP_FMAC3 struct __ns1__EraseMoldsInSampleTable_ * SOAP_FMAC4 soap_in___ns1__EraseMoldsInSampleTable_(struct soap*, const char*, struct __ns1__EraseMoldsInSampleTable_ *, const char*);
SOAP_FMAC1 struct __ns1__EraseMoldsInSampleTable_ * SOAP_FMAC2 soap_instantiate___ns1__EraseMoldsInSampleTable_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__EraseMoldsInSampleTable_ * soap_new___ns1__EraseMoldsInSampleTable_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__EraseMoldsInSampleTable_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__EraseMoldsInSampleTable_ * soap_new_req___ns1__EraseMoldsInSampleTable_(
	struct soap *soap)
{
	struct __ns1__EraseMoldsInSampleTable_ *_p = ::soap_new___ns1__EraseMoldsInSampleTable_(soap);
	if (_p)
	{	::soap_default___ns1__EraseMoldsInSampleTable_(soap, _p);
	}
	return _p;
}

inline struct __ns1__EraseMoldsInSampleTable_ * soap_new_set___ns1__EraseMoldsInSampleTable_(
	struct soap *soap,
	_ns1__EraseMoldsInSampleTable *ns1__EraseMoldsInSampleTable)
{
	struct __ns1__EraseMoldsInSampleTable_ *_p = ::soap_new___ns1__EraseMoldsInSampleTable_(soap);
	if (_p)
	{	::soap_default___ns1__EraseMoldsInSampleTable_(soap, _p);
		_p->ns1__EraseMoldsInSampleTable = ns1__EraseMoldsInSampleTable;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__EraseMoldsInSampleTable_(struct soap*, const struct __ns1__EraseMoldsInSampleTable_ *, const char*, const char*);

inline int soap_write___ns1__EraseMoldsInSampleTable_(struct soap *soap, struct __ns1__EraseMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__EraseMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__EraseMoldsInSampleTable_(soap, p, "-ns1:EraseMoldsInSampleTable", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__EraseMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__EraseMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EraseMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__EraseMoldsInSampleTable_(soap, p, "-ns1:EraseMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__EraseMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__EraseMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EraseMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__EraseMoldsInSampleTable_(soap, p, "-ns1:EraseMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__EraseMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__EraseMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EraseMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__EraseMoldsInSampleTable_(soap, p, "-ns1:EraseMoldsInSampleTable", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__EraseMoldsInSampleTable_ * SOAP_FMAC4 soap_get___ns1__EraseMoldsInSampleTable_(struct soap*, struct __ns1__EraseMoldsInSampleTable_ *, const char*, const char*);

inline int soap_read___ns1__EraseMoldsInSampleTable_(struct soap *soap, struct __ns1__EraseMoldsInSampleTable_ *p)
{
	if (p)
	{	::soap_default___ns1__EraseMoldsInSampleTable_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__EraseMoldsInSampleTable_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__EraseMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__EraseMoldsInSampleTable_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__EraseMoldsInSampleTable_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__EraseMoldsInSampleTable_(struct soap *soap, struct __ns1__EraseMoldsInSampleTable_ *p)
{
	if (::soap_read___ns1__EraseMoldsInSampleTable_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__AddEjectedMolds__DEFINED
#define SOAP_TYPE___ns1__AddEjectedMolds__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddEjectedMolds_(struct soap*, struct __ns1__AddEjectedMolds_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddEjectedMolds_(struct soap*, const struct __ns1__AddEjectedMolds_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddEjectedMolds_(struct soap*, const char*, int, const struct __ns1__AddEjectedMolds_ *, const char*);
SOAP_FMAC3 struct __ns1__AddEjectedMolds_ * SOAP_FMAC4 soap_in___ns1__AddEjectedMolds_(struct soap*, const char*, struct __ns1__AddEjectedMolds_ *, const char*);
SOAP_FMAC1 struct __ns1__AddEjectedMolds_ * SOAP_FMAC2 soap_instantiate___ns1__AddEjectedMolds_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddEjectedMolds_ * soap_new___ns1__AddEjectedMolds_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__AddEjectedMolds_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__AddEjectedMolds_ * soap_new_req___ns1__AddEjectedMolds_(
	struct soap *soap)
{
	struct __ns1__AddEjectedMolds_ *_p = ::soap_new___ns1__AddEjectedMolds_(soap);
	if (_p)
	{	::soap_default___ns1__AddEjectedMolds_(soap, _p);
	}
	return _p;
}

inline struct __ns1__AddEjectedMolds_ * soap_new_set___ns1__AddEjectedMolds_(
	struct soap *soap,
	_ns1__AddEjectedMolds *ns1__AddEjectedMolds)
{
	struct __ns1__AddEjectedMolds_ *_p = ::soap_new___ns1__AddEjectedMolds_(soap);
	if (_p)
	{	::soap_default___ns1__AddEjectedMolds_(soap, _p);
		_p->ns1__AddEjectedMolds = ns1__AddEjectedMolds;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddEjectedMolds_(struct soap*, const struct __ns1__AddEjectedMolds_ *, const char*, const char*);

inline int soap_write___ns1__AddEjectedMolds_(struct soap *soap, struct __ns1__AddEjectedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__AddEjectedMolds_(soap, p), 0) || ::soap_put___ns1__AddEjectedMolds_(soap, p, "-ns1:AddEjectedMolds", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__AddEjectedMolds_(struct soap *soap, const char *URL, struct __ns1__AddEjectedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__AddEjectedMolds_(soap, p), 0) || ::soap_put___ns1__AddEjectedMolds_(soap, p, "-ns1:AddEjectedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__AddEjectedMolds_(struct soap *soap, const char *URL, struct __ns1__AddEjectedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__AddEjectedMolds_(soap, p), 0) || ::soap_put___ns1__AddEjectedMolds_(soap, p, "-ns1:AddEjectedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__AddEjectedMolds_(struct soap *soap, const char *URL, struct __ns1__AddEjectedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__AddEjectedMolds_(soap, p), 0) || ::soap_put___ns1__AddEjectedMolds_(soap, p, "-ns1:AddEjectedMolds", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__AddEjectedMolds_ * SOAP_FMAC4 soap_get___ns1__AddEjectedMolds_(struct soap*, struct __ns1__AddEjectedMolds_ *, const char*, const char*);

inline int soap_read___ns1__AddEjectedMolds_(struct soap *soap, struct __ns1__AddEjectedMolds_ *p)
{
	if (p)
	{	::soap_default___ns1__AddEjectedMolds_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__AddEjectedMolds_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__AddEjectedMolds_(struct soap *soap, const char *URL, struct __ns1__AddEjectedMolds_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__AddEjectedMolds_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__AddEjectedMolds_(struct soap *soap, struct __ns1__AddEjectedMolds_ *p)
{
	if (::soap_read___ns1__AddEjectedMolds_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__ChangeMountedMolds__DEFINED
#define SOAP_TYPE___ns1__ChangeMountedMolds__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ChangeMountedMolds_(struct soap*, struct __ns1__ChangeMountedMolds_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ChangeMountedMolds_(struct soap*, const struct __ns1__ChangeMountedMolds_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ChangeMountedMolds_(struct soap*, const char*, int, const struct __ns1__ChangeMountedMolds_ *, const char*);
SOAP_FMAC3 struct __ns1__ChangeMountedMolds_ * SOAP_FMAC4 soap_in___ns1__ChangeMountedMolds_(struct soap*, const char*, struct __ns1__ChangeMountedMolds_ *, const char*);
SOAP_FMAC1 struct __ns1__ChangeMountedMolds_ * SOAP_FMAC2 soap_instantiate___ns1__ChangeMountedMolds_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ChangeMountedMolds_ * soap_new___ns1__ChangeMountedMolds_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ChangeMountedMolds_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ChangeMountedMolds_ * soap_new_req___ns1__ChangeMountedMolds_(
	struct soap *soap)
{
	struct __ns1__ChangeMountedMolds_ *_p = ::soap_new___ns1__ChangeMountedMolds_(soap);
	if (_p)
	{	::soap_default___ns1__ChangeMountedMolds_(soap, _p);
	}
	return _p;
}

inline struct __ns1__ChangeMountedMolds_ * soap_new_set___ns1__ChangeMountedMolds_(
	struct soap *soap,
	_ns1__ChangeMountedMolds *ns1__ChangeMountedMolds)
{
	struct __ns1__ChangeMountedMolds_ *_p = ::soap_new___ns1__ChangeMountedMolds_(soap);
	if (_p)
	{	::soap_default___ns1__ChangeMountedMolds_(soap, _p);
		_p->ns1__ChangeMountedMolds = ns1__ChangeMountedMolds;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ChangeMountedMolds_(struct soap*, const struct __ns1__ChangeMountedMolds_ *, const char*, const char*);

inline int soap_write___ns1__ChangeMountedMolds_(struct soap *soap, struct __ns1__ChangeMountedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ChangeMountedMolds_(soap, p), 0) || ::soap_put___ns1__ChangeMountedMolds_(soap, p, "-ns1:ChangeMountedMolds", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ChangeMountedMolds_(struct soap *soap, const char *URL, struct __ns1__ChangeMountedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMountedMolds_(soap, p), 0) || ::soap_put___ns1__ChangeMountedMolds_(soap, p, "-ns1:ChangeMountedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__ChangeMountedMolds_(struct soap *soap, const char *URL, struct __ns1__ChangeMountedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMountedMolds_(soap, p), 0) || ::soap_put___ns1__ChangeMountedMolds_(soap, p, "-ns1:ChangeMountedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ChangeMountedMolds_(struct soap *soap, const char *URL, struct __ns1__ChangeMountedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMountedMolds_(soap, p), 0) || ::soap_put___ns1__ChangeMountedMolds_(soap, p, "-ns1:ChangeMountedMolds", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ChangeMountedMolds_ * SOAP_FMAC4 soap_get___ns1__ChangeMountedMolds_(struct soap*, struct __ns1__ChangeMountedMolds_ *, const char*, const char*);

inline int soap_read___ns1__ChangeMountedMolds_(struct soap *soap, struct __ns1__ChangeMountedMolds_ *p)
{
	if (p)
	{	::soap_default___ns1__ChangeMountedMolds_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ChangeMountedMolds_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ChangeMountedMolds_(struct soap *soap, const char *URL, struct __ns1__ChangeMountedMolds_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ChangeMountedMolds_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__ChangeMountedMolds_(struct soap *soap, struct __ns1__ChangeMountedMolds_ *p)
{
	if (::soap_read___ns1__ChangeMountedMolds_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__GetMoldsInSampleTable__DEFINED
#define SOAP_TYPE___ns1__GetMoldsInSampleTable__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMoldsInSampleTable_(struct soap*, struct __ns1__GetMoldsInSampleTable_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMoldsInSampleTable_(struct soap*, const struct __ns1__GetMoldsInSampleTable_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMoldsInSampleTable_(struct soap*, const char*, int, const struct __ns1__GetMoldsInSampleTable_ *, const char*);
SOAP_FMAC3 struct __ns1__GetMoldsInSampleTable_ * SOAP_FMAC4 soap_in___ns1__GetMoldsInSampleTable_(struct soap*, const char*, struct __ns1__GetMoldsInSampleTable_ *, const char*);
SOAP_FMAC1 struct __ns1__GetMoldsInSampleTable_ * SOAP_FMAC2 soap_instantiate___ns1__GetMoldsInSampleTable_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMoldsInSampleTable_ * soap_new___ns1__GetMoldsInSampleTable_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMoldsInSampleTable_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMoldsInSampleTable_ * soap_new_req___ns1__GetMoldsInSampleTable_(
	struct soap *soap)
{
	struct __ns1__GetMoldsInSampleTable_ *_p = ::soap_new___ns1__GetMoldsInSampleTable_(soap);
	if (_p)
	{	::soap_default___ns1__GetMoldsInSampleTable_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMoldsInSampleTable_ * soap_new_set___ns1__GetMoldsInSampleTable_(
	struct soap *soap,
	_ns1__GetMoldsInSampleTable *ns1__GetMoldsInSampleTable)
{
	struct __ns1__GetMoldsInSampleTable_ *_p = ::soap_new___ns1__GetMoldsInSampleTable_(soap);
	if (_p)
	{	::soap_default___ns1__GetMoldsInSampleTable_(soap, _p);
		_p->ns1__GetMoldsInSampleTable = ns1__GetMoldsInSampleTable;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMoldsInSampleTable_(struct soap*, const struct __ns1__GetMoldsInSampleTable_ *, const char*, const char*);

inline int soap_write___ns1__GetMoldsInSampleTable_(struct soap *soap, struct __ns1__GetMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__GetMoldsInSampleTable_(soap, p, "-ns1:GetMoldsInSampleTable", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__GetMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__GetMoldsInSampleTable_(soap, p, "-ns1:GetMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__GetMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__GetMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__GetMoldsInSampleTable_(soap, p, "-ns1:GetMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__GetMoldsInSampleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMoldsInSampleTable_(soap, p), 0) || ::soap_put___ns1__GetMoldsInSampleTable_(soap, p, "-ns1:GetMoldsInSampleTable", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMoldsInSampleTable_ * SOAP_FMAC4 soap_get___ns1__GetMoldsInSampleTable_(struct soap*, struct __ns1__GetMoldsInSampleTable_ *, const char*, const char*);

inline int soap_read___ns1__GetMoldsInSampleTable_(struct soap *soap, struct __ns1__GetMoldsInSampleTable_ *p)
{
	if (p)
	{	::soap_default___ns1__GetMoldsInSampleTable_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMoldsInSampleTable_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMoldsInSampleTable_(struct soap *soap, const char *URL, struct __ns1__GetMoldsInSampleTable_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMoldsInSampleTable_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__GetMoldsInSampleTable_(struct soap *soap, struct __ns1__GetMoldsInSampleTable_ *p)
{
	if (::soap_read___ns1__GetMoldsInSampleTable_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__EjectedMolds__DEFINED
#define SOAP_TYPE___ns1__EjectedMolds__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__EjectedMolds_(struct soap*, struct __ns1__EjectedMolds_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__EjectedMolds_(struct soap*, const struct __ns1__EjectedMolds_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__EjectedMolds_(struct soap*, const char*, int, const struct __ns1__EjectedMolds_ *, const char*);
SOAP_FMAC3 struct __ns1__EjectedMolds_ * SOAP_FMAC4 soap_in___ns1__EjectedMolds_(struct soap*, const char*, struct __ns1__EjectedMolds_ *, const char*);
SOAP_FMAC1 struct __ns1__EjectedMolds_ * SOAP_FMAC2 soap_instantiate___ns1__EjectedMolds_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__EjectedMolds_ * soap_new___ns1__EjectedMolds_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__EjectedMolds_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__EjectedMolds_ * soap_new_req___ns1__EjectedMolds_(
	struct soap *soap)
{
	struct __ns1__EjectedMolds_ *_p = ::soap_new___ns1__EjectedMolds_(soap);
	if (_p)
	{	::soap_default___ns1__EjectedMolds_(soap, _p);
	}
	return _p;
}

inline struct __ns1__EjectedMolds_ * soap_new_set___ns1__EjectedMolds_(
	struct soap *soap,
	_ns1__EjectedMolds *ns1__EjectedMolds)
{
	struct __ns1__EjectedMolds_ *_p = ::soap_new___ns1__EjectedMolds_(soap);
	if (_p)
	{	::soap_default___ns1__EjectedMolds_(soap, _p);
		_p->ns1__EjectedMolds = ns1__EjectedMolds;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__EjectedMolds_(struct soap*, const struct __ns1__EjectedMolds_ *, const char*, const char*);

inline int soap_write___ns1__EjectedMolds_(struct soap *soap, struct __ns1__EjectedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__EjectedMolds_(soap, p), 0) || ::soap_put___ns1__EjectedMolds_(soap, p, "-ns1:EjectedMolds", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__EjectedMolds_(struct soap *soap, const char *URL, struct __ns1__EjectedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EjectedMolds_(soap, p), 0) || ::soap_put___ns1__EjectedMolds_(soap, p, "-ns1:EjectedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__EjectedMolds_(struct soap *soap, const char *URL, struct __ns1__EjectedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EjectedMolds_(soap, p), 0) || ::soap_put___ns1__EjectedMolds_(soap, p, "-ns1:EjectedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__EjectedMolds_(struct soap *soap, const char *URL, struct __ns1__EjectedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EjectedMolds_(soap, p), 0) || ::soap_put___ns1__EjectedMolds_(soap, p, "-ns1:EjectedMolds", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__EjectedMolds_ * SOAP_FMAC4 soap_get___ns1__EjectedMolds_(struct soap*, struct __ns1__EjectedMolds_ *, const char*, const char*);

inline int soap_read___ns1__EjectedMolds_(struct soap *soap, struct __ns1__EjectedMolds_ *p)
{
	if (p)
	{	::soap_default___ns1__EjectedMolds_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__EjectedMolds_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__EjectedMolds_(struct soap *soap, const char *URL, struct __ns1__EjectedMolds_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__EjectedMolds_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__EjectedMolds_(struct soap *soap, struct __ns1__EjectedMolds_ *p)
{
	if (::soap_read___ns1__EjectedMolds_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__ReadenMolds__DEFINED
#define SOAP_TYPE___ns1__ReadenMolds__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ReadenMolds_(struct soap*, struct __ns1__ReadenMolds_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ReadenMolds_(struct soap*, const struct __ns1__ReadenMolds_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ReadenMolds_(struct soap*, const char*, int, const struct __ns1__ReadenMolds_ *, const char*);
SOAP_FMAC3 struct __ns1__ReadenMolds_ * SOAP_FMAC4 soap_in___ns1__ReadenMolds_(struct soap*, const char*, struct __ns1__ReadenMolds_ *, const char*);
SOAP_FMAC1 struct __ns1__ReadenMolds_ * SOAP_FMAC2 soap_instantiate___ns1__ReadenMolds_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ReadenMolds_ * soap_new___ns1__ReadenMolds_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ReadenMolds_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ReadenMolds_ * soap_new_req___ns1__ReadenMolds_(
	struct soap *soap)
{
	struct __ns1__ReadenMolds_ *_p = ::soap_new___ns1__ReadenMolds_(soap);
	if (_p)
	{	::soap_default___ns1__ReadenMolds_(soap, _p);
	}
	return _p;
}

inline struct __ns1__ReadenMolds_ * soap_new_set___ns1__ReadenMolds_(
	struct soap *soap,
	_ns1__ReadenMolds *ns1__ReadenMolds)
{
	struct __ns1__ReadenMolds_ *_p = ::soap_new___ns1__ReadenMolds_(soap);
	if (_p)
	{	::soap_default___ns1__ReadenMolds_(soap, _p);
		_p->ns1__ReadenMolds = ns1__ReadenMolds;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ReadenMolds_(struct soap*, const struct __ns1__ReadenMolds_ *, const char*, const char*);

inline int soap_write___ns1__ReadenMolds_(struct soap *soap, struct __ns1__ReadenMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ReadenMolds_(soap, p), 0) || ::soap_put___ns1__ReadenMolds_(soap, p, "-ns1:ReadenMolds", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ReadenMolds_(struct soap *soap, const char *URL, struct __ns1__ReadenMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ReadenMolds_(soap, p), 0) || ::soap_put___ns1__ReadenMolds_(soap, p, "-ns1:ReadenMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__ReadenMolds_(struct soap *soap, const char *URL, struct __ns1__ReadenMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ReadenMolds_(soap, p), 0) || ::soap_put___ns1__ReadenMolds_(soap, p, "-ns1:ReadenMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ReadenMolds_(struct soap *soap, const char *URL, struct __ns1__ReadenMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ReadenMolds_(soap, p), 0) || ::soap_put___ns1__ReadenMolds_(soap, p, "-ns1:ReadenMolds", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ReadenMolds_ * SOAP_FMAC4 soap_get___ns1__ReadenMolds_(struct soap*, struct __ns1__ReadenMolds_ *, const char*, const char*);

inline int soap_read___ns1__ReadenMolds_(struct soap *soap, struct __ns1__ReadenMolds_ *p)
{
	if (p)
	{	::soap_default___ns1__ReadenMolds_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ReadenMolds_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ReadenMolds_(struct soap *soap, const char *URL, struct __ns1__ReadenMolds_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ReadenMolds_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__ReadenMolds_(struct soap *soap, struct __ns1__ReadenMolds_ *p)
{
	if (::soap_read___ns1__ReadenMolds_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__CumulCounts__DEFINED
#define SOAP_TYPE___ns1__CumulCounts__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CumulCounts_(struct soap*, struct __ns1__CumulCounts_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CumulCounts_(struct soap*, const struct __ns1__CumulCounts_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CumulCounts_(struct soap*, const char*, int, const struct __ns1__CumulCounts_ *, const char*);
SOAP_FMAC3 struct __ns1__CumulCounts_ * SOAP_FMAC4 soap_in___ns1__CumulCounts_(struct soap*, const char*, struct __ns1__CumulCounts_ *, const char*);
SOAP_FMAC1 struct __ns1__CumulCounts_ * SOAP_FMAC2 soap_instantiate___ns1__CumulCounts_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CumulCounts_ * soap_new___ns1__CumulCounts_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__CumulCounts_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__CumulCounts_ * soap_new_req___ns1__CumulCounts_(
	struct soap *soap)
{
	struct __ns1__CumulCounts_ *_p = ::soap_new___ns1__CumulCounts_(soap);
	if (_p)
	{	::soap_default___ns1__CumulCounts_(soap, _p);
	}
	return _p;
}

inline struct __ns1__CumulCounts_ * soap_new_set___ns1__CumulCounts_(
	struct soap *soap,
	_ns1__CumulCounts *ns1__CumulCounts)
{
	struct __ns1__CumulCounts_ *_p = ::soap_new___ns1__CumulCounts_(soap);
	if (_p)
	{	::soap_default___ns1__CumulCounts_(soap, _p);
		_p->ns1__CumulCounts = ns1__CumulCounts;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CumulCounts_(struct soap*, const struct __ns1__CumulCounts_ *, const char*, const char*);

inline int soap_write___ns1__CumulCounts_(struct soap *soap, struct __ns1__CumulCounts_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__CumulCounts_(soap, p), 0) || ::soap_put___ns1__CumulCounts_(soap, p, "-ns1:CumulCounts", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__CumulCounts_(struct soap *soap, const char *URL, struct __ns1__CumulCounts_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CumulCounts_(soap, p), 0) || ::soap_put___ns1__CumulCounts_(soap, p, "-ns1:CumulCounts", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__CumulCounts_(struct soap *soap, const char *URL, struct __ns1__CumulCounts_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CumulCounts_(soap, p), 0) || ::soap_put___ns1__CumulCounts_(soap, p, "-ns1:CumulCounts", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__CumulCounts_(struct soap *soap, const char *URL, struct __ns1__CumulCounts_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CumulCounts_(soap, p), 0) || ::soap_put___ns1__CumulCounts_(soap, p, "-ns1:CumulCounts", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__CumulCounts_ * SOAP_FMAC4 soap_get___ns1__CumulCounts_(struct soap*, struct __ns1__CumulCounts_ *, const char*, const char*);

inline int soap_read___ns1__CumulCounts_(struct soap *soap, struct __ns1__CumulCounts_ *p)
{
	if (p)
	{	::soap_default___ns1__CumulCounts_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__CumulCounts_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__CumulCounts_(struct soap *soap, const char *URL, struct __ns1__CumulCounts_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__CumulCounts_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__CumulCounts_(struct soap *soap, struct __ns1__CumulCounts_ *p)
{
	if (::soap_read___ns1__CumulCounts_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__Measures__DEFINED
#define SOAP_TYPE___ns1__Measures__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Measures_(struct soap*, struct __ns1__Measures_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Measures_(struct soap*, const struct __ns1__Measures_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Measures_(struct soap*, const char*, int, const struct __ns1__Measures_ *, const char*);
SOAP_FMAC3 struct __ns1__Measures_ * SOAP_FMAC4 soap_in___ns1__Measures_(struct soap*, const char*, struct __ns1__Measures_ *, const char*);
SOAP_FMAC1 struct __ns1__Measures_ * SOAP_FMAC2 soap_instantiate___ns1__Measures_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Measures_ * soap_new___ns1__Measures_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__Measures_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__Measures_ * soap_new_req___ns1__Measures_(
	struct soap *soap)
{
	struct __ns1__Measures_ *_p = ::soap_new___ns1__Measures_(soap);
	if (_p)
	{	::soap_default___ns1__Measures_(soap, _p);
	}
	return _p;
}

inline struct __ns1__Measures_ * soap_new_set___ns1__Measures_(
	struct soap *soap,
	_ns1__Measures *ns1__Measures)
{
	struct __ns1__Measures_ *_p = ::soap_new___ns1__Measures_(soap);
	if (_p)
	{	::soap_default___ns1__Measures_(soap, _p);
		_p->ns1__Measures = ns1__Measures;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Measures_(struct soap*, const struct __ns1__Measures_ *, const char*, const char*);

inline int soap_write___ns1__Measures_(struct soap *soap, struct __ns1__Measures_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__Measures_(soap, p), 0) || ::soap_put___ns1__Measures_(soap, p, "-ns1:Measures", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__Measures_(struct soap *soap, const char *URL, struct __ns1__Measures_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Measures_(soap, p), 0) || ::soap_put___ns1__Measures_(soap, p, "-ns1:Measures", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__Measures_(struct soap *soap, const char *URL, struct __ns1__Measures_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Measures_(soap, p), 0) || ::soap_put___ns1__Measures_(soap, p, "-ns1:Measures", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__Measures_(struct soap *soap, const char *URL, struct __ns1__Measures_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Measures_(soap, p), 0) || ::soap_put___ns1__Measures_(soap, p, "-ns1:Measures", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__Measures_ * SOAP_FMAC4 soap_get___ns1__Measures_(struct soap*, struct __ns1__Measures_ *, const char*, const char*);

inline int soap_read___ns1__Measures_(struct soap *soap, struct __ns1__Measures_ *p)
{
	if (p)
	{	::soap_default___ns1__Measures_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__Measures_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__Measures_(struct soap *soap, const char *URL, struct __ns1__Measures_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__Measures_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__Measures_(struct soap *soap, struct __ns1__Measures_ *p)
{
	if (::soap_read___ns1__Measures_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__MountedMolds__DEFINED
#define SOAP_TYPE___ns1__MountedMolds__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__MountedMolds_(struct soap*, struct __ns1__MountedMolds_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__MountedMolds_(struct soap*, const struct __ns1__MountedMolds_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__MountedMolds_(struct soap*, const char*, int, const struct __ns1__MountedMolds_ *, const char*);
SOAP_FMAC3 struct __ns1__MountedMolds_ * SOAP_FMAC4 soap_in___ns1__MountedMolds_(struct soap*, const char*, struct __ns1__MountedMolds_ *, const char*);
SOAP_FMAC1 struct __ns1__MountedMolds_ * SOAP_FMAC2 soap_instantiate___ns1__MountedMolds_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__MountedMolds_ * soap_new___ns1__MountedMolds_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__MountedMolds_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__MountedMolds_ * soap_new_req___ns1__MountedMolds_(
	struct soap *soap)
{
	struct __ns1__MountedMolds_ *_p = ::soap_new___ns1__MountedMolds_(soap);
	if (_p)
	{	::soap_default___ns1__MountedMolds_(soap, _p);
	}
	return _p;
}

inline struct __ns1__MountedMolds_ * soap_new_set___ns1__MountedMolds_(
	struct soap *soap,
	_ns1__MountedMolds *ns1__MountedMolds)
{
	struct __ns1__MountedMolds_ *_p = ::soap_new___ns1__MountedMolds_(soap);
	if (_p)
	{	::soap_default___ns1__MountedMolds_(soap, _p);
		_p->ns1__MountedMolds = ns1__MountedMolds;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__MountedMolds_(struct soap*, const struct __ns1__MountedMolds_ *, const char*, const char*);

inline int soap_write___ns1__MountedMolds_(struct soap *soap, struct __ns1__MountedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__MountedMolds_(soap, p), 0) || ::soap_put___ns1__MountedMolds_(soap, p, "-ns1:MountedMolds", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__MountedMolds_(struct soap *soap, const char *URL, struct __ns1__MountedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__MountedMolds_(soap, p), 0) || ::soap_put___ns1__MountedMolds_(soap, p, "-ns1:MountedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__MountedMolds_(struct soap *soap, const char *URL, struct __ns1__MountedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__MountedMolds_(soap, p), 0) || ::soap_put___ns1__MountedMolds_(soap, p, "-ns1:MountedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__MountedMolds_(struct soap *soap, const char *URL, struct __ns1__MountedMolds_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__MountedMolds_(soap, p), 0) || ::soap_put___ns1__MountedMolds_(soap, p, "-ns1:MountedMolds", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__MountedMolds_ * SOAP_FMAC4 soap_get___ns1__MountedMolds_(struct soap*, struct __ns1__MountedMolds_ *, const char*, const char*);

inline int soap_read___ns1__MountedMolds_(struct soap *soap, struct __ns1__MountedMolds_ *p)
{
	if (p)
	{	::soap_default___ns1__MountedMolds_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__MountedMolds_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__MountedMolds_(struct soap *soap, const char *URL, struct __ns1__MountedMolds_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__MountedMolds_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__MountedMolds_(struct soap *soap, struct __ns1__MountedMolds_ *p)
{
	if (::soap_read___ns1__MountedMolds_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__GetAlarms__DEFINED
#define SOAP_TYPE___ns1__GetAlarms__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetAlarms_(struct soap*, struct __ns1__GetAlarms_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetAlarms_(struct soap*, const struct __ns1__GetAlarms_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetAlarms_(struct soap*, const char*, int, const struct __ns1__GetAlarms_ *, const char*);
SOAP_FMAC3 struct __ns1__GetAlarms_ * SOAP_FMAC4 soap_in___ns1__GetAlarms_(struct soap*, const char*, struct __ns1__GetAlarms_ *, const char*);
SOAP_FMAC1 struct __ns1__GetAlarms_ * SOAP_FMAC2 soap_instantiate___ns1__GetAlarms_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetAlarms_ * soap_new___ns1__GetAlarms_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetAlarms_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetAlarms_ * soap_new_req___ns1__GetAlarms_(
	struct soap *soap)
{
	struct __ns1__GetAlarms_ *_p = ::soap_new___ns1__GetAlarms_(soap);
	if (_p)
	{	::soap_default___ns1__GetAlarms_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetAlarms_ * soap_new_set___ns1__GetAlarms_(
	struct soap *soap,
	_ns1__GetAlarms *ns1__GetAlarms)
{
	struct __ns1__GetAlarms_ *_p = ::soap_new___ns1__GetAlarms_(soap);
	if (_p)
	{	::soap_default___ns1__GetAlarms_(soap, _p);
		_p->ns1__GetAlarms = ns1__GetAlarms;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetAlarms_(struct soap*, const struct __ns1__GetAlarms_ *, const char*, const char*);

inline int soap_write___ns1__GetAlarms_(struct soap *soap, struct __ns1__GetAlarms_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetAlarms_(soap, p), 0) || ::soap_put___ns1__GetAlarms_(soap, p, "-ns1:GetAlarms", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetAlarms_(struct soap *soap, const char *URL, struct __ns1__GetAlarms_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarms_(soap, p), 0) || ::soap_put___ns1__GetAlarms_(soap, p, "-ns1:GetAlarms", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__GetAlarms_(struct soap *soap, const char *URL, struct __ns1__GetAlarms_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarms_(soap, p), 0) || ::soap_put___ns1__GetAlarms_(soap, p, "-ns1:GetAlarms", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetAlarms_(struct soap *soap, const char *URL, struct __ns1__GetAlarms_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarms_(soap, p), 0) || ::soap_put___ns1__GetAlarms_(soap, p, "-ns1:GetAlarms", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetAlarms_ * SOAP_FMAC4 soap_get___ns1__GetAlarms_(struct soap*, struct __ns1__GetAlarms_ *, const char*, const char*);

inline int soap_read___ns1__GetAlarms_(struct soap *soap, struct __ns1__GetAlarms_ *p)
{
	if (p)
	{	::soap_default___ns1__GetAlarms_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetAlarms_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetAlarms_(struct soap *soap, const char *URL, struct __ns1__GetAlarms_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetAlarms_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__GetAlarms_(struct soap *soap, struct __ns1__GetAlarms_ *p)
{
	if (::soap_read___ns1__GetAlarms_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__GetAlarmsSinceLastQuery__DEFINED
#define SOAP_TYPE___ns1__GetAlarmsSinceLastQuery__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetAlarmsSinceLastQuery_(struct soap*, struct __ns1__GetAlarmsSinceLastQuery_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetAlarmsSinceLastQuery_(struct soap*, const struct __ns1__GetAlarmsSinceLastQuery_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetAlarmsSinceLastQuery_(struct soap*, const char*, int, const struct __ns1__GetAlarmsSinceLastQuery_ *, const char*);
SOAP_FMAC3 struct __ns1__GetAlarmsSinceLastQuery_ * SOAP_FMAC4 soap_in___ns1__GetAlarmsSinceLastQuery_(struct soap*, const char*, struct __ns1__GetAlarmsSinceLastQuery_ *, const char*);
SOAP_FMAC1 struct __ns1__GetAlarmsSinceLastQuery_ * SOAP_FMAC2 soap_instantiate___ns1__GetAlarmsSinceLastQuery_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetAlarmsSinceLastQuery_ * soap_new___ns1__GetAlarmsSinceLastQuery_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetAlarmsSinceLastQuery_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetAlarmsSinceLastQuery_ * soap_new_req___ns1__GetAlarmsSinceLastQuery_(
	struct soap *soap)
{
	struct __ns1__GetAlarmsSinceLastQuery_ *_p = ::soap_new___ns1__GetAlarmsSinceLastQuery_(soap);
	if (_p)
	{	::soap_default___ns1__GetAlarmsSinceLastQuery_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetAlarmsSinceLastQuery_ * soap_new_set___ns1__GetAlarmsSinceLastQuery_(
	struct soap *soap,
	_ns1__GetAlarmsSinceLastQuery *ns1__GetAlarmsSinceLastQuery)
{
	struct __ns1__GetAlarmsSinceLastQuery_ *_p = ::soap_new___ns1__GetAlarmsSinceLastQuery_(soap);
	if (_p)
	{	::soap_default___ns1__GetAlarmsSinceLastQuery_(soap, _p);
		_p->ns1__GetAlarmsSinceLastQuery = ns1__GetAlarmsSinceLastQuery;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetAlarmsSinceLastQuery_(struct soap*, const struct __ns1__GetAlarmsSinceLastQuery_ *, const char*, const char*);

inline int soap_write___ns1__GetAlarmsSinceLastQuery_(struct soap *soap, struct __ns1__GetAlarmsSinceLastQuery_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetAlarmsSinceLastQuery_(soap, p), 0) || ::soap_put___ns1__GetAlarmsSinceLastQuery_(soap, p, "-ns1:GetAlarmsSinceLastQuery", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetAlarmsSinceLastQuery_(struct soap *soap, const char *URL, struct __ns1__GetAlarmsSinceLastQuery_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarmsSinceLastQuery_(soap, p), 0) || ::soap_put___ns1__GetAlarmsSinceLastQuery_(soap, p, "-ns1:GetAlarmsSinceLastQuery", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__GetAlarmsSinceLastQuery_(struct soap *soap, const char *URL, struct __ns1__GetAlarmsSinceLastQuery_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarmsSinceLastQuery_(soap, p), 0) || ::soap_put___ns1__GetAlarmsSinceLastQuery_(soap, p, "-ns1:GetAlarmsSinceLastQuery", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetAlarmsSinceLastQuery_(struct soap *soap, const char *URL, struct __ns1__GetAlarmsSinceLastQuery_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarmsSinceLastQuery_(soap, p), 0) || ::soap_put___ns1__GetAlarmsSinceLastQuery_(soap, p, "-ns1:GetAlarmsSinceLastQuery", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetAlarmsSinceLastQuery_ * SOAP_FMAC4 soap_get___ns1__GetAlarmsSinceLastQuery_(struct soap*, struct __ns1__GetAlarmsSinceLastQuery_ *, const char*, const char*);

inline int soap_read___ns1__GetAlarmsSinceLastQuery_(struct soap *soap, struct __ns1__GetAlarmsSinceLastQuery_ *p)
{
	if (p)
	{	::soap_default___ns1__GetAlarmsSinceLastQuery_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetAlarmsSinceLastQuery_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetAlarmsSinceLastQuery_(struct soap *soap, const char *URL, struct __ns1__GetAlarmsSinceLastQuery_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetAlarmsSinceLastQuery_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__GetAlarmsSinceLastQuery_(struct soap *soap, struct __ns1__GetAlarmsSinceLastQuery_ *p)
{
	if (::soap_read___ns1__GetAlarmsSinceLastQuery_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__Counts__DEFINED
#define SOAP_TYPE___ns1__Counts__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Counts_(struct soap*, struct __ns1__Counts_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Counts_(struct soap*, const struct __ns1__Counts_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Counts_(struct soap*, const char*, int, const struct __ns1__Counts_ *, const char*);
SOAP_FMAC3 struct __ns1__Counts_ * SOAP_FMAC4 soap_in___ns1__Counts_(struct soap*, const char*, struct __ns1__Counts_ *, const char*);
SOAP_FMAC1 struct __ns1__Counts_ * SOAP_FMAC2 soap_instantiate___ns1__Counts_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Counts_ * soap_new___ns1__Counts_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__Counts_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__Counts_ * soap_new_req___ns1__Counts_(
	struct soap *soap)
{
	struct __ns1__Counts_ *_p = ::soap_new___ns1__Counts_(soap);
	if (_p)
	{	::soap_default___ns1__Counts_(soap, _p);
	}
	return _p;
}

inline struct __ns1__Counts_ * soap_new_set___ns1__Counts_(
	struct soap *soap,
	_ns1__Counts *ns1__Counts)
{
	struct __ns1__Counts_ *_p = ::soap_new___ns1__Counts_(soap);
	if (_p)
	{	::soap_default___ns1__Counts_(soap, _p);
		_p->ns1__Counts = ns1__Counts;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Counts_(struct soap*, const struct __ns1__Counts_ *, const char*, const char*);

inline int soap_write___ns1__Counts_(struct soap *soap, struct __ns1__Counts_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__Counts_(soap, p), 0) || ::soap_put___ns1__Counts_(soap, p, "-ns1:Counts", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__Counts_(struct soap *soap, const char *URL, struct __ns1__Counts_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Counts_(soap, p), 0) || ::soap_put___ns1__Counts_(soap, p, "-ns1:Counts", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__Counts_(struct soap *soap, const char *URL, struct __ns1__Counts_ const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Counts_(soap, p), 0) || ::soap_put___ns1__Counts_(soap, p, "-ns1:Counts", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__Counts_(struct soap *soap, const char *URL, struct __ns1__Counts_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Counts_(soap, p), 0) || ::soap_put___ns1__Counts_(soap, p, "-ns1:Counts", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__Counts_ * SOAP_FMAC4 soap_get___ns1__Counts_(struct soap*, struct __ns1__Counts_ *, const char*, const char*);

inline int soap_read___ns1__Counts_(struct soap *soap, struct __ns1__Counts_ *p)
{
	if (p)
	{	::soap_default___ns1__Counts_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__Counts_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__Counts_(struct soap *soap, const char *URL, struct __ns1__Counts_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__Counts_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__Counts_(struct soap *soap, struct __ns1__Counts_ *p)
{
	if (::soap_read___ns1__Counts_(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__ChangeSamples_DEFINED
#define SOAP_TYPE___ns1__ChangeSamples_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ChangeSamples(struct soap*, struct __ns1__ChangeSamples *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ChangeSamples(struct soap*, const struct __ns1__ChangeSamples *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ChangeSamples(struct soap*, const char*, int, const struct __ns1__ChangeSamples *, const char*);
SOAP_FMAC3 struct __ns1__ChangeSamples * SOAP_FMAC4 soap_in___ns1__ChangeSamples(struct soap*, const char*, struct __ns1__ChangeSamples *, const char*);
SOAP_FMAC1 struct __ns1__ChangeSamples * SOAP_FMAC2 soap_instantiate___ns1__ChangeSamples(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ChangeSamples * soap_new___ns1__ChangeSamples(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ChangeSamples(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ChangeSamples * soap_new_req___ns1__ChangeSamples(
	struct soap *soap)
{
	struct __ns1__ChangeSamples *_p = ::soap_new___ns1__ChangeSamples(soap);
	if (_p)
	{	::soap_default___ns1__ChangeSamples(soap, _p);
	}
	return _p;
}

inline struct __ns1__ChangeSamples * soap_new_set___ns1__ChangeSamples(
	struct soap *soap,
	_ns1__ChangeSamples *ns1__ChangeSamples)
{
	struct __ns1__ChangeSamples *_p = ::soap_new___ns1__ChangeSamples(soap);
	if (_p)
	{	::soap_default___ns1__ChangeSamples(soap, _p);
		_p->ns1__ChangeSamples = ns1__ChangeSamples;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ChangeSamples(struct soap*, const struct __ns1__ChangeSamples *, const char*, const char*);

inline int soap_write___ns1__ChangeSamples(struct soap *soap, struct __ns1__ChangeSamples const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ChangeSamples(soap, p), 0) || ::soap_put___ns1__ChangeSamples(soap, p, "-ns1:ChangeSamples", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ChangeSamples(struct soap *soap, const char *URL, struct __ns1__ChangeSamples const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeSamples(soap, p), 0) || ::soap_put___ns1__ChangeSamples(soap, p, "-ns1:ChangeSamples", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__ChangeSamples(struct soap *soap, const char *URL, struct __ns1__ChangeSamples const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeSamples(soap, p), 0) || ::soap_put___ns1__ChangeSamples(soap, p, "-ns1:ChangeSamples", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ChangeSamples(struct soap *soap, const char *URL, struct __ns1__ChangeSamples const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeSamples(soap, p), 0) || ::soap_put___ns1__ChangeSamples(soap, p, "-ns1:ChangeSamples", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ChangeSamples * SOAP_FMAC4 soap_get___ns1__ChangeSamples(struct soap*, struct __ns1__ChangeSamples *, const char*, const char*);

inline int soap_read___ns1__ChangeSamples(struct soap *soap, struct __ns1__ChangeSamples *p)
{
	if (p)
	{	::soap_default___ns1__ChangeSamples(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ChangeSamples(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ChangeSamples(struct soap *soap, const char *URL, struct __ns1__ChangeSamples *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ChangeSamples(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__ChangeSamples(struct soap *soap, struct __ns1__ChangeSamples *p)
{
	if (::soap_read___ns1__ChangeSamples(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__GetVersions_DEFINED
#define SOAP_TYPE___ns1__GetVersions_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetVersions(struct soap*, struct __ns1__GetVersions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetVersions(struct soap*, const struct __ns1__GetVersions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetVersions(struct soap*, const char*, int, const struct __ns1__GetVersions *, const char*);
SOAP_FMAC3 struct __ns1__GetVersions * SOAP_FMAC4 soap_in___ns1__GetVersions(struct soap*, const char*, struct __ns1__GetVersions *, const char*);
SOAP_FMAC1 struct __ns1__GetVersions * SOAP_FMAC2 soap_instantiate___ns1__GetVersions(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetVersions * soap_new___ns1__GetVersions(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetVersions(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetVersions * soap_new_req___ns1__GetVersions(
	struct soap *soap)
{
	struct __ns1__GetVersions *_p = ::soap_new___ns1__GetVersions(soap);
	if (_p)
	{	::soap_default___ns1__GetVersions(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetVersions * soap_new_set___ns1__GetVersions(
	struct soap *soap,
	_ns1__GetVersions *ns1__GetVersions)
{
	struct __ns1__GetVersions *_p = ::soap_new___ns1__GetVersions(soap);
	if (_p)
	{	::soap_default___ns1__GetVersions(soap, _p);
		_p->ns1__GetVersions = ns1__GetVersions;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetVersions(struct soap*, const struct __ns1__GetVersions *, const char*, const char*);

inline int soap_write___ns1__GetVersions(struct soap *soap, struct __ns1__GetVersions const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetVersions(soap, p), 0) || ::soap_put___ns1__GetVersions(soap, p, "-ns1:GetVersions", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetVersions(struct soap *soap, const char *URL, struct __ns1__GetVersions const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetVersions(soap, p), 0) || ::soap_put___ns1__GetVersions(soap, p, "-ns1:GetVersions", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__GetVersions(struct soap *soap, const char *URL, struct __ns1__GetVersions const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetVersions(soap, p), 0) || ::soap_put___ns1__GetVersions(soap, p, "-ns1:GetVersions", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetVersions(struct soap *soap, const char *URL, struct __ns1__GetVersions const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetVersions(soap, p), 0) || ::soap_put___ns1__GetVersions(soap, p, "-ns1:GetVersions", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetVersions * SOAP_FMAC4 soap_get___ns1__GetVersions(struct soap*, struct __ns1__GetVersions *, const char*, const char*);

inline int soap_read___ns1__GetVersions(struct soap *soap, struct __ns1__GetVersions *p)
{
	if (p)
	{	::soap_default___ns1__GetVersions(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetVersions(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetVersions(struct soap *soap, const char *URL, struct __ns1__GetVersions *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetVersions(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__GetVersions(struct soap *soap, struct __ns1__GetVersions *p)
{
	if (::soap_read___ns1__GetVersions(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__ChangeMoldsInSampleTable_DEFINED
#define SOAP_TYPE___ns1__ChangeMoldsInSampleTable_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ChangeMoldsInSampleTable(struct soap*, struct __ns1__ChangeMoldsInSampleTable *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ChangeMoldsInSampleTable(struct soap*, const struct __ns1__ChangeMoldsInSampleTable *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ChangeMoldsInSampleTable(struct soap*, const char*, int, const struct __ns1__ChangeMoldsInSampleTable *, const char*);
SOAP_FMAC3 struct __ns1__ChangeMoldsInSampleTable * SOAP_FMAC4 soap_in___ns1__ChangeMoldsInSampleTable(struct soap*, const char*, struct __ns1__ChangeMoldsInSampleTable *, const char*);
SOAP_FMAC1 struct __ns1__ChangeMoldsInSampleTable * SOAP_FMAC2 soap_instantiate___ns1__ChangeMoldsInSampleTable(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ChangeMoldsInSampleTable * soap_new___ns1__ChangeMoldsInSampleTable(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ChangeMoldsInSampleTable(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ChangeMoldsInSampleTable * soap_new_req___ns1__ChangeMoldsInSampleTable(
	struct soap *soap)
{
	struct __ns1__ChangeMoldsInSampleTable *_p = ::soap_new___ns1__ChangeMoldsInSampleTable(soap);
	if (_p)
	{	::soap_default___ns1__ChangeMoldsInSampleTable(soap, _p);
	}
	return _p;
}

inline struct __ns1__ChangeMoldsInSampleTable * soap_new_set___ns1__ChangeMoldsInSampleTable(
	struct soap *soap,
	_ns1__ChangeMoldsInSampleTable *ns1__ChangeMoldsInSampleTable)
{
	struct __ns1__ChangeMoldsInSampleTable *_p = ::soap_new___ns1__ChangeMoldsInSampleTable(soap);
	if (_p)
	{	::soap_default___ns1__ChangeMoldsInSampleTable(soap, _p);
		_p->ns1__ChangeMoldsInSampleTable = ns1__ChangeMoldsInSampleTable;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ChangeMoldsInSampleTable(struct soap*, const struct __ns1__ChangeMoldsInSampleTable *, const char*, const char*);

inline int soap_write___ns1__ChangeMoldsInSampleTable(struct soap *soap, struct __ns1__ChangeMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ChangeMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__ChangeMoldsInSampleTable(soap, p, "-ns1:ChangeMoldsInSampleTable", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ChangeMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__ChangeMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__ChangeMoldsInSampleTable(soap, p, "-ns1:ChangeMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__ChangeMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__ChangeMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__ChangeMoldsInSampleTable(soap, p, "-ns1:ChangeMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ChangeMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__ChangeMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__ChangeMoldsInSampleTable(soap, p, "-ns1:ChangeMoldsInSampleTable", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ChangeMoldsInSampleTable * SOAP_FMAC4 soap_get___ns1__ChangeMoldsInSampleTable(struct soap*, struct __ns1__ChangeMoldsInSampleTable *, const char*, const char*);

inline int soap_read___ns1__ChangeMoldsInSampleTable(struct soap *soap, struct __ns1__ChangeMoldsInSampleTable *p)
{
	if (p)
	{	::soap_default___ns1__ChangeMoldsInSampleTable(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ChangeMoldsInSampleTable(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ChangeMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__ChangeMoldsInSampleTable *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ChangeMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__ChangeMoldsInSampleTable(struct soap *soap, struct __ns1__ChangeMoldsInSampleTable *p)
{
	if (::soap_read___ns1__ChangeMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__EraseMoldsInSampleTable_DEFINED
#define SOAP_TYPE___ns1__EraseMoldsInSampleTable_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__EraseMoldsInSampleTable(struct soap*, struct __ns1__EraseMoldsInSampleTable *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__EraseMoldsInSampleTable(struct soap*, const struct __ns1__EraseMoldsInSampleTable *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__EraseMoldsInSampleTable(struct soap*, const char*, int, const struct __ns1__EraseMoldsInSampleTable *, const char*);
SOAP_FMAC3 struct __ns1__EraseMoldsInSampleTable * SOAP_FMAC4 soap_in___ns1__EraseMoldsInSampleTable(struct soap*, const char*, struct __ns1__EraseMoldsInSampleTable *, const char*);
SOAP_FMAC1 struct __ns1__EraseMoldsInSampleTable * SOAP_FMAC2 soap_instantiate___ns1__EraseMoldsInSampleTable(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__EraseMoldsInSampleTable * soap_new___ns1__EraseMoldsInSampleTable(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__EraseMoldsInSampleTable(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__EraseMoldsInSampleTable * soap_new_req___ns1__EraseMoldsInSampleTable(
	struct soap *soap)
{
	struct __ns1__EraseMoldsInSampleTable *_p = ::soap_new___ns1__EraseMoldsInSampleTable(soap);
	if (_p)
	{	::soap_default___ns1__EraseMoldsInSampleTable(soap, _p);
	}
	return _p;
}

inline struct __ns1__EraseMoldsInSampleTable * soap_new_set___ns1__EraseMoldsInSampleTable(
	struct soap *soap,
	_ns1__EraseMoldsInSampleTable *ns1__EraseMoldsInSampleTable)
{
	struct __ns1__EraseMoldsInSampleTable *_p = ::soap_new___ns1__EraseMoldsInSampleTable(soap);
	if (_p)
	{	::soap_default___ns1__EraseMoldsInSampleTable(soap, _p);
		_p->ns1__EraseMoldsInSampleTable = ns1__EraseMoldsInSampleTable;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__EraseMoldsInSampleTable(struct soap*, const struct __ns1__EraseMoldsInSampleTable *, const char*, const char*);

inline int soap_write___ns1__EraseMoldsInSampleTable(struct soap *soap, struct __ns1__EraseMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__EraseMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__EraseMoldsInSampleTable(soap, p, "-ns1:EraseMoldsInSampleTable", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__EraseMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__EraseMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EraseMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__EraseMoldsInSampleTable(soap, p, "-ns1:EraseMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__EraseMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__EraseMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EraseMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__EraseMoldsInSampleTable(soap, p, "-ns1:EraseMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__EraseMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__EraseMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EraseMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__EraseMoldsInSampleTable(soap, p, "-ns1:EraseMoldsInSampleTable", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__EraseMoldsInSampleTable * SOAP_FMAC4 soap_get___ns1__EraseMoldsInSampleTable(struct soap*, struct __ns1__EraseMoldsInSampleTable *, const char*, const char*);

inline int soap_read___ns1__EraseMoldsInSampleTable(struct soap *soap, struct __ns1__EraseMoldsInSampleTable *p)
{
	if (p)
	{	::soap_default___ns1__EraseMoldsInSampleTable(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__EraseMoldsInSampleTable(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__EraseMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__EraseMoldsInSampleTable *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__EraseMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__EraseMoldsInSampleTable(struct soap *soap, struct __ns1__EraseMoldsInSampleTable *p)
{
	if (::soap_read___ns1__EraseMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__AddEjectedMolds_DEFINED
#define SOAP_TYPE___ns1__AddEjectedMolds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddEjectedMolds(struct soap*, struct __ns1__AddEjectedMolds *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddEjectedMolds(struct soap*, const struct __ns1__AddEjectedMolds *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddEjectedMolds(struct soap*, const char*, int, const struct __ns1__AddEjectedMolds *, const char*);
SOAP_FMAC3 struct __ns1__AddEjectedMolds * SOAP_FMAC4 soap_in___ns1__AddEjectedMolds(struct soap*, const char*, struct __ns1__AddEjectedMolds *, const char*);
SOAP_FMAC1 struct __ns1__AddEjectedMolds * SOAP_FMAC2 soap_instantiate___ns1__AddEjectedMolds(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddEjectedMolds * soap_new___ns1__AddEjectedMolds(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__AddEjectedMolds(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__AddEjectedMolds * soap_new_req___ns1__AddEjectedMolds(
	struct soap *soap)
{
	struct __ns1__AddEjectedMolds *_p = ::soap_new___ns1__AddEjectedMolds(soap);
	if (_p)
	{	::soap_default___ns1__AddEjectedMolds(soap, _p);
	}
	return _p;
}

inline struct __ns1__AddEjectedMolds * soap_new_set___ns1__AddEjectedMolds(
	struct soap *soap,
	_ns1__AddEjectedMolds *ns1__AddEjectedMolds)
{
	struct __ns1__AddEjectedMolds *_p = ::soap_new___ns1__AddEjectedMolds(soap);
	if (_p)
	{	::soap_default___ns1__AddEjectedMolds(soap, _p);
		_p->ns1__AddEjectedMolds = ns1__AddEjectedMolds;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddEjectedMolds(struct soap*, const struct __ns1__AddEjectedMolds *, const char*, const char*);

inline int soap_write___ns1__AddEjectedMolds(struct soap *soap, struct __ns1__AddEjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__AddEjectedMolds(soap, p), 0) || ::soap_put___ns1__AddEjectedMolds(soap, p, "-ns1:AddEjectedMolds", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__AddEjectedMolds(struct soap *soap, const char *URL, struct __ns1__AddEjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__AddEjectedMolds(soap, p), 0) || ::soap_put___ns1__AddEjectedMolds(soap, p, "-ns1:AddEjectedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__AddEjectedMolds(struct soap *soap, const char *URL, struct __ns1__AddEjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__AddEjectedMolds(soap, p), 0) || ::soap_put___ns1__AddEjectedMolds(soap, p, "-ns1:AddEjectedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__AddEjectedMolds(struct soap *soap, const char *URL, struct __ns1__AddEjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__AddEjectedMolds(soap, p), 0) || ::soap_put___ns1__AddEjectedMolds(soap, p, "-ns1:AddEjectedMolds", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__AddEjectedMolds * SOAP_FMAC4 soap_get___ns1__AddEjectedMolds(struct soap*, struct __ns1__AddEjectedMolds *, const char*, const char*);

inline int soap_read___ns1__AddEjectedMolds(struct soap *soap, struct __ns1__AddEjectedMolds *p)
{
	if (p)
	{	::soap_default___ns1__AddEjectedMolds(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__AddEjectedMolds(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__AddEjectedMolds(struct soap *soap, const char *URL, struct __ns1__AddEjectedMolds *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__AddEjectedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__AddEjectedMolds(struct soap *soap, struct __ns1__AddEjectedMolds *p)
{
	if (::soap_read___ns1__AddEjectedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__ChangeMountedMolds_DEFINED
#define SOAP_TYPE___ns1__ChangeMountedMolds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ChangeMountedMolds(struct soap*, struct __ns1__ChangeMountedMolds *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ChangeMountedMolds(struct soap*, const struct __ns1__ChangeMountedMolds *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ChangeMountedMolds(struct soap*, const char*, int, const struct __ns1__ChangeMountedMolds *, const char*);
SOAP_FMAC3 struct __ns1__ChangeMountedMolds * SOAP_FMAC4 soap_in___ns1__ChangeMountedMolds(struct soap*, const char*, struct __ns1__ChangeMountedMolds *, const char*);
SOAP_FMAC1 struct __ns1__ChangeMountedMolds * SOAP_FMAC2 soap_instantiate___ns1__ChangeMountedMolds(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ChangeMountedMolds * soap_new___ns1__ChangeMountedMolds(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ChangeMountedMolds(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ChangeMountedMolds * soap_new_req___ns1__ChangeMountedMolds(
	struct soap *soap)
{
	struct __ns1__ChangeMountedMolds *_p = ::soap_new___ns1__ChangeMountedMolds(soap);
	if (_p)
	{	::soap_default___ns1__ChangeMountedMolds(soap, _p);
	}
	return _p;
}

inline struct __ns1__ChangeMountedMolds * soap_new_set___ns1__ChangeMountedMolds(
	struct soap *soap,
	_ns1__ChangeMountedMolds *ns1__ChangeMountedMolds)
{
	struct __ns1__ChangeMountedMolds *_p = ::soap_new___ns1__ChangeMountedMolds(soap);
	if (_p)
	{	::soap_default___ns1__ChangeMountedMolds(soap, _p);
		_p->ns1__ChangeMountedMolds = ns1__ChangeMountedMolds;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ChangeMountedMolds(struct soap*, const struct __ns1__ChangeMountedMolds *, const char*, const char*);

inline int soap_write___ns1__ChangeMountedMolds(struct soap *soap, struct __ns1__ChangeMountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ChangeMountedMolds(soap, p), 0) || ::soap_put___ns1__ChangeMountedMolds(soap, p, "-ns1:ChangeMountedMolds", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ChangeMountedMolds(struct soap *soap, const char *URL, struct __ns1__ChangeMountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMountedMolds(soap, p), 0) || ::soap_put___ns1__ChangeMountedMolds(soap, p, "-ns1:ChangeMountedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__ChangeMountedMolds(struct soap *soap, const char *URL, struct __ns1__ChangeMountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMountedMolds(soap, p), 0) || ::soap_put___ns1__ChangeMountedMolds(soap, p, "-ns1:ChangeMountedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ChangeMountedMolds(struct soap *soap, const char *URL, struct __ns1__ChangeMountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChangeMountedMolds(soap, p), 0) || ::soap_put___ns1__ChangeMountedMolds(soap, p, "-ns1:ChangeMountedMolds", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ChangeMountedMolds * SOAP_FMAC4 soap_get___ns1__ChangeMountedMolds(struct soap*, struct __ns1__ChangeMountedMolds *, const char*, const char*);

inline int soap_read___ns1__ChangeMountedMolds(struct soap *soap, struct __ns1__ChangeMountedMolds *p)
{
	if (p)
	{	::soap_default___ns1__ChangeMountedMolds(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ChangeMountedMolds(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ChangeMountedMolds(struct soap *soap, const char *URL, struct __ns1__ChangeMountedMolds *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ChangeMountedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__ChangeMountedMolds(struct soap *soap, struct __ns1__ChangeMountedMolds *p)
{
	if (::soap_read___ns1__ChangeMountedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__GetMoldsInSampleTable_DEFINED
#define SOAP_TYPE___ns1__GetMoldsInSampleTable_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMoldsInSampleTable(struct soap*, struct __ns1__GetMoldsInSampleTable *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMoldsInSampleTable(struct soap*, const struct __ns1__GetMoldsInSampleTable *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMoldsInSampleTable(struct soap*, const char*, int, const struct __ns1__GetMoldsInSampleTable *, const char*);
SOAP_FMAC3 struct __ns1__GetMoldsInSampleTable * SOAP_FMAC4 soap_in___ns1__GetMoldsInSampleTable(struct soap*, const char*, struct __ns1__GetMoldsInSampleTable *, const char*);
SOAP_FMAC1 struct __ns1__GetMoldsInSampleTable * SOAP_FMAC2 soap_instantiate___ns1__GetMoldsInSampleTable(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMoldsInSampleTable * soap_new___ns1__GetMoldsInSampleTable(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMoldsInSampleTable(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMoldsInSampleTable * soap_new_req___ns1__GetMoldsInSampleTable(
	struct soap *soap)
{
	struct __ns1__GetMoldsInSampleTable *_p = ::soap_new___ns1__GetMoldsInSampleTable(soap);
	if (_p)
	{	::soap_default___ns1__GetMoldsInSampleTable(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMoldsInSampleTable * soap_new_set___ns1__GetMoldsInSampleTable(
	struct soap *soap,
	_ns1__GetMoldsInSampleTable *ns1__GetMoldsInSampleTable)
{
	struct __ns1__GetMoldsInSampleTable *_p = ::soap_new___ns1__GetMoldsInSampleTable(soap);
	if (_p)
	{	::soap_default___ns1__GetMoldsInSampleTable(soap, _p);
		_p->ns1__GetMoldsInSampleTable = ns1__GetMoldsInSampleTable;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMoldsInSampleTable(struct soap*, const struct __ns1__GetMoldsInSampleTable *, const char*, const char*);

inline int soap_write___ns1__GetMoldsInSampleTable(struct soap *soap, struct __ns1__GetMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__GetMoldsInSampleTable(soap, p, "-ns1:GetMoldsInSampleTable", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__GetMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__GetMoldsInSampleTable(soap, p, "-ns1:GetMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__GetMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__GetMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__GetMoldsInSampleTable(soap, p, "-ns1:GetMoldsInSampleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__GetMoldsInSampleTable const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMoldsInSampleTable(soap, p), 0) || ::soap_put___ns1__GetMoldsInSampleTable(soap, p, "-ns1:GetMoldsInSampleTable", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMoldsInSampleTable * SOAP_FMAC4 soap_get___ns1__GetMoldsInSampleTable(struct soap*, struct __ns1__GetMoldsInSampleTable *, const char*, const char*);

inline int soap_read___ns1__GetMoldsInSampleTable(struct soap *soap, struct __ns1__GetMoldsInSampleTable *p)
{
	if (p)
	{	::soap_default___ns1__GetMoldsInSampleTable(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMoldsInSampleTable(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMoldsInSampleTable(struct soap *soap, const char *URL, struct __ns1__GetMoldsInSampleTable *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__GetMoldsInSampleTable(struct soap *soap, struct __ns1__GetMoldsInSampleTable *p)
{
	if (::soap_read___ns1__GetMoldsInSampleTable(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__EjectedMolds_DEFINED
#define SOAP_TYPE___ns1__EjectedMolds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__EjectedMolds(struct soap*, struct __ns1__EjectedMolds *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__EjectedMolds(struct soap*, const struct __ns1__EjectedMolds *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__EjectedMolds(struct soap*, const char*, int, const struct __ns1__EjectedMolds *, const char*);
SOAP_FMAC3 struct __ns1__EjectedMolds * SOAP_FMAC4 soap_in___ns1__EjectedMolds(struct soap*, const char*, struct __ns1__EjectedMolds *, const char*);
SOAP_FMAC1 struct __ns1__EjectedMolds * SOAP_FMAC2 soap_instantiate___ns1__EjectedMolds(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__EjectedMolds * soap_new___ns1__EjectedMolds(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__EjectedMolds(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__EjectedMolds * soap_new_req___ns1__EjectedMolds(
	struct soap *soap)
{
	struct __ns1__EjectedMolds *_p = ::soap_new___ns1__EjectedMolds(soap);
	if (_p)
	{	::soap_default___ns1__EjectedMolds(soap, _p);
	}
	return _p;
}

inline struct __ns1__EjectedMolds * soap_new_set___ns1__EjectedMolds(
	struct soap *soap,
	_ns1__EjectedMolds *ns1__EjectedMolds)
{
	struct __ns1__EjectedMolds *_p = ::soap_new___ns1__EjectedMolds(soap);
	if (_p)
	{	::soap_default___ns1__EjectedMolds(soap, _p);
		_p->ns1__EjectedMolds = ns1__EjectedMolds;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__EjectedMolds(struct soap*, const struct __ns1__EjectedMolds *, const char*, const char*);

inline int soap_write___ns1__EjectedMolds(struct soap *soap, struct __ns1__EjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__EjectedMolds(soap, p), 0) || ::soap_put___ns1__EjectedMolds(soap, p, "-ns1:EjectedMolds", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__EjectedMolds(struct soap *soap, const char *URL, struct __ns1__EjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EjectedMolds(soap, p), 0) || ::soap_put___ns1__EjectedMolds(soap, p, "-ns1:EjectedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__EjectedMolds(struct soap *soap, const char *URL, struct __ns1__EjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EjectedMolds(soap, p), 0) || ::soap_put___ns1__EjectedMolds(soap, p, "-ns1:EjectedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__EjectedMolds(struct soap *soap, const char *URL, struct __ns1__EjectedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__EjectedMolds(soap, p), 0) || ::soap_put___ns1__EjectedMolds(soap, p, "-ns1:EjectedMolds", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__EjectedMolds * SOAP_FMAC4 soap_get___ns1__EjectedMolds(struct soap*, struct __ns1__EjectedMolds *, const char*, const char*);

inline int soap_read___ns1__EjectedMolds(struct soap *soap, struct __ns1__EjectedMolds *p)
{
	if (p)
	{	::soap_default___ns1__EjectedMolds(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__EjectedMolds(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__EjectedMolds(struct soap *soap, const char *URL, struct __ns1__EjectedMolds *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__EjectedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__EjectedMolds(struct soap *soap, struct __ns1__EjectedMolds *p)
{
	if (::soap_read___ns1__EjectedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__ReadenMolds_DEFINED
#define SOAP_TYPE___ns1__ReadenMolds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ReadenMolds(struct soap*, struct __ns1__ReadenMolds *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ReadenMolds(struct soap*, const struct __ns1__ReadenMolds *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ReadenMolds(struct soap*, const char*, int, const struct __ns1__ReadenMolds *, const char*);
SOAP_FMAC3 struct __ns1__ReadenMolds * SOAP_FMAC4 soap_in___ns1__ReadenMolds(struct soap*, const char*, struct __ns1__ReadenMolds *, const char*);
SOAP_FMAC1 struct __ns1__ReadenMolds * SOAP_FMAC2 soap_instantiate___ns1__ReadenMolds(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ReadenMolds * soap_new___ns1__ReadenMolds(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ReadenMolds(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ReadenMolds * soap_new_req___ns1__ReadenMolds(
	struct soap *soap)
{
	struct __ns1__ReadenMolds *_p = ::soap_new___ns1__ReadenMolds(soap);
	if (_p)
	{	::soap_default___ns1__ReadenMolds(soap, _p);
	}
	return _p;
}

inline struct __ns1__ReadenMolds * soap_new_set___ns1__ReadenMolds(
	struct soap *soap,
	_ns1__ReadenMolds *ns1__ReadenMolds)
{
	struct __ns1__ReadenMolds *_p = ::soap_new___ns1__ReadenMolds(soap);
	if (_p)
	{	::soap_default___ns1__ReadenMolds(soap, _p);
		_p->ns1__ReadenMolds = ns1__ReadenMolds;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ReadenMolds(struct soap*, const struct __ns1__ReadenMolds *, const char*, const char*);

inline int soap_write___ns1__ReadenMolds(struct soap *soap, struct __ns1__ReadenMolds const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ReadenMolds(soap, p), 0) || ::soap_put___ns1__ReadenMolds(soap, p, "-ns1:ReadenMolds", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ReadenMolds(struct soap *soap, const char *URL, struct __ns1__ReadenMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ReadenMolds(soap, p), 0) || ::soap_put___ns1__ReadenMolds(soap, p, "-ns1:ReadenMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__ReadenMolds(struct soap *soap, const char *URL, struct __ns1__ReadenMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ReadenMolds(soap, p), 0) || ::soap_put___ns1__ReadenMolds(soap, p, "-ns1:ReadenMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ReadenMolds(struct soap *soap, const char *URL, struct __ns1__ReadenMolds const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ReadenMolds(soap, p), 0) || ::soap_put___ns1__ReadenMolds(soap, p, "-ns1:ReadenMolds", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ReadenMolds * SOAP_FMAC4 soap_get___ns1__ReadenMolds(struct soap*, struct __ns1__ReadenMolds *, const char*, const char*);

inline int soap_read___ns1__ReadenMolds(struct soap *soap, struct __ns1__ReadenMolds *p)
{
	if (p)
	{	::soap_default___ns1__ReadenMolds(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ReadenMolds(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ReadenMolds(struct soap *soap, const char *URL, struct __ns1__ReadenMolds *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ReadenMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__ReadenMolds(struct soap *soap, struct __ns1__ReadenMolds *p)
{
	if (::soap_read___ns1__ReadenMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__CumulCounts_DEFINED
#define SOAP_TYPE___ns1__CumulCounts_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CumulCounts(struct soap*, struct __ns1__CumulCounts *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CumulCounts(struct soap*, const struct __ns1__CumulCounts *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CumulCounts(struct soap*, const char*, int, const struct __ns1__CumulCounts *, const char*);
SOAP_FMAC3 struct __ns1__CumulCounts * SOAP_FMAC4 soap_in___ns1__CumulCounts(struct soap*, const char*, struct __ns1__CumulCounts *, const char*);
SOAP_FMAC1 struct __ns1__CumulCounts * SOAP_FMAC2 soap_instantiate___ns1__CumulCounts(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CumulCounts * soap_new___ns1__CumulCounts(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__CumulCounts(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__CumulCounts * soap_new_req___ns1__CumulCounts(
	struct soap *soap)
{
	struct __ns1__CumulCounts *_p = ::soap_new___ns1__CumulCounts(soap);
	if (_p)
	{	::soap_default___ns1__CumulCounts(soap, _p);
	}
	return _p;
}

inline struct __ns1__CumulCounts * soap_new_set___ns1__CumulCounts(
	struct soap *soap,
	_ns1__CumulCounts *ns1__CumulCounts)
{
	struct __ns1__CumulCounts *_p = ::soap_new___ns1__CumulCounts(soap);
	if (_p)
	{	::soap_default___ns1__CumulCounts(soap, _p);
		_p->ns1__CumulCounts = ns1__CumulCounts;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CumulCounts(struct soap*, const struct __ns1__CumulCounts *, const char*, const char*);

inline int soap_write___ns1__CumulCounts(struct soap *soap, struct __ns1__CumulCounts const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__CumulCounts(soap, p), 0) || ::soap_put___ns1__CumulCounts(soap, p, "-ns1:CumulCounts", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__CumulCounts(struct soap *soap, const char *URL, struct __ns1__CumulCounts const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CumulCounts(soap, p), 0) || ::soap_put___ns1__CumulCounts(soap, p, "-ns1:CumulCounts", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__CumulCounts(struct soap *soap, const char *URL, struct __ns1__CumulCounts const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CumulCounts(soap, p), 0) || ::soap_put___ns1__CumulCounts(soap, p, "-ns1:CumulCounts", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__CumulCounts(struct soap *soap, const char *URL, struct __ns1__CumulCounts const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CumulCounts(soap, p), 0) || ::soap_put___ns1__CumulCounts(soap, p, "-ns1:CumulCounts", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__CumulCounts * SOAP_FMAC4 soap_get___ns1__CumulCounts(struct soap*, struct __ns1__CumulCounts *, const char*, const char*);

inline int soap_read___ns1__CumulCounts(struct soap *soap, struct __ns1__CumulCounts *p)
{
	if (p)
	{	::soap_default___ns1__CumulCounts(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__CumulCounts(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__CumulCounts(struct soap *soap, const char *URL, struct __ns1__CumulCounts *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__CumulCounts(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__CumulCounts(struct soap *soap, struct __ns1__CumulCounts *p)
{
	if (::soap_read___ns1__CumulCounts(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__Measures_DEFINED
#define SOAP_TYPE___ns1__Measures_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Measures(struct soap*, struct __ns1__Measures *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Measures(struct soap*, const struct __ns1__Measures *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Measures(struct soap*, const char*, int, const struct __ns1__Measures *, const char*);
SOAP_FMAC3 struct __ns1__Measures * SOAP_FMAC4 soap_in___ns1__Measures(struct soap*, const char*, struct __ns1__Measures *, const char*);
SOAP_FMAC1 struct __ns1__Measures * SOAP_FMAC2 soap_instantiate___ns1__Measures(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Measures * soap_new___ns1__Measures(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__Measures(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__Measures * soap_new_req___ns1__Measures(
	struct soap *soap)
{
	struct __ns1__Measures *_p = ::soap_new___ns1__Measures(soap);
	if (_p)
	{	::soap_default___ns1__Measures(soap, _p);
	}
	return _p;
}

inline struct __ns1__Measures * soap_new_set___ns1__Measures(
	struct soap *soap,
	_ns1__Measures *ns1__Measures)
{
	struct __ns1__Measures *_p = ::soap_new___ns1__Measures(soap);
	if (_p)
	{	::soap_default___ns1__Measures(soap, _p);
		_p->ns1__Measures = ns1__Measures;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Measures(struct soap*, const struct __ns1__Measures *, const char*, const char*);

inline int soap_write___ns1__Measures(struct soap *soap, struct __ns1__Measures const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__Measures(soap, p), 0) || ::soap_put___ns1__Measures(soap, p, "-ns1:Measures", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__Measures(struct soap *soap, const char *URL, struct __ns1__Measures const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Measures(soap, p), 0) || ::soap_put___ns1__Measures(soap, p, "-ns1:Measures", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__Measures(struct soap *soap, const char *URL, struct __ns1__Measures const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Measures(soap, p), 0) || ::soap_put___ns1__Measures(soap, p, "-ns1:Measures", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__Measures(struct soap *soap, const char *URL, struct __ns1__Measures const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Measures(soap, p), 0) || ::soap_put___ns1__Measures(soap, p, "-ns1:Measures", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__Measures * SOAP_FMAC4 soap_get___ns1__Measures(struct soap*, struct __ns1__Measures *, const char*, const char*);

inline int soap_read___ns1__Measures(struct soap *soap, struct __ns1__Measures *p)
{
	if (p)
	{	::soap_default___ns1__Measures(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__Measures(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__Measures(struct soap *soap, const char *URL, struct __ns1__Measures *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__Measures(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__Measures(struct soap *soap, struct __ns1__Measures *p)
{
	if (::soap_read___ns1__Measures(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__MountedMolds_DEFINED
#define SOAP_TYPE___ns1__MountedMolds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__MountedMolds(struct soap*, struct __ns1__MountedMolds *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__MountedMolds(struct soap*, const struct __ns1__MountedMolds *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__MountedMolds(struct soap*, const char*, int, const struct __ns1__MountedMolds *, const char*);
SOAP_FMAC3 struct __ns1__MountedMolds * SOAP_FMAC4 soap_in___ns1__MountedMolds(struct soap*, const char*, struct __ns1__MountedMolds *, const char*);
SOAP_FMAC1 struct __ns1__MountedMolds * SOAP_FMAC2 soap_instantiate___ns1__MountedMolds(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__MountedMolds * soap_new___ns1__MountedMolds(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__MountedMolds(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__MountedMolds * soap_new_req___ns1__MountedMolds(
	struct soap *soap)
{
	struct __ns1__MountedMolds *_p = ::soap_new___ns1__MountedMolds(soap);
	if (_p)
	{	::soap_default___ns1__MountedMolds(soap, _p);
	}
	return _p;
}

inline struct __ns1__MountedMolds * soap_new_set___ns1__MountedMolds(
	struct soap *soap,
	_ns1__MountedMolds *ns1__MountedMolds)
{
	struct __ns1__MountedMolds *_p = ::soap_new___ns1__MountedMolds(soap);
	if (_p)
	{	::soap_default___ns1__MountedMolds(soap, _p);
		_p->ns1__MountedMolds = ns1__MountedMolds;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__MountedMolds(struct soap*, const struct __ns1__MountedMolds *, const char*, const char*);

inline int soap_write___ns1__MountedMolds(struct soap *soap, struct __ns1__MountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__MountedMolds(soap, p), 0) || ::soap_put___ns1__MountedMolds(soap, p, "-ns1:MountedMolds", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__MountedMolds(struct soap *soap, const char *URL, struct __ns1__MountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__MountedMolds(soap, p), 0) || ::soap_put___ns1__MountedMolds(soap, p, "-ns1:MountedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__MountedMolds(struct soap *soap, const char *URL, struct __ns1__MountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__MountedMolds(soap, p), 0) || ::soap_put___ns1__MountedMolds(soap, p, "-ns1:MountedMolds", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__MountedMolds(struct soap *soap, const char *URL, struct __ns1__MountedMolds const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__MountedMolds(soap, p), 0) || ::soap_put___ns1__MountedMolds(soap, p, "-ns1:MountedMolds", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__MountedMolds * SOAP_FMAC4 soap_get___ns1__MountedMolds(struct soap*, struct __ns1__MountedMolds *, const char*, const char*);

inline int soap_read___ns1__MountedMolds(struct soap *soap, struct __ns1__MountedMolds *p)
{
	if (p)
	{	::soap_default___ns1__MountedMolds(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__MountedMolds(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__MountedMolds(struct soap *soap, const char *URL, struct __ns1__MountedMolds *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__MountedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__MountedMolds(struct soap *soap, struct __ns1__MountedMolds *p)
{
	if (::soap_read___ns1__MountedMolds(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__GetAlarms_DEFINED
#define SOAP_TYPE___ns1__GetAlarms_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetAlarms(struct soap*, struct __ns1__GetAlarms *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetAlarms(struct soap*, const struct __ns1__GetAlarms *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetAlarms(struct soap*, const char*, int, const struct __ns1__GetAlarms *, const char*);
SOAP_FMAC3 struct __ns1__GetAlarms * SOAP_FMAC4 soap_in___ns1__GetAlarms(struct soap*, const char*, struct __ns1__GetAlarms *, const char*);
SOAP_FMAC1 struct __ns1__GetAlarms * SOAP_FMAC2 soap_instantiate___ns1__GetAlarms(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetAlarms * soap_new___ns1__GetAlarms(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetAlarms(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetAlarms * soap_new_req___ns1__GetAlarms(
	struct soap *soap)
{
	struct __ns1__GetAlarms *_p = ::soap_new___ns1__GetAlarms(soap);
	if (_p)
	{	::soap_default___ns1__GetAlarms(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetAlarms * soap_new_set___ns1__GetAlarms(
	struct soap *soap,
	_ns1__GetAlarms *ns1__GetAlarms)
{
	struct __ns1__GetAlarms *_p = ::soap_new___ns1__GetAlarms(soap);
	if (_p)
	{	::soap_default___ns1__GetAlarms(soap, _p);
		_p->ns1__GetAlarms = ns1__GetAlarms;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetAlarms(struct soap*, const struct __ns1__GetAlarms *, const char*, const char*);

inline int soap_write___ns1__GetAlarms(struct soap *soap, struct __ns1__GetAlarms const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetAlarms(soap, p), 0) || ::soap_put___ns1__GetAlarms(soap, p, "-ns1:GetAlarms", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetAlarms(struct soap *soap, const char *URL, struct __ns1__GetAlarms const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarms(soap, p), 0) || ::soap_put___ns1__GetAlarms(soap, p, "-ns1:GetAlarms", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__GetAlarms(struct soap *soap, const char *URL, struct __ns1__GetAlarms const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarms(soap, p), 0) || ::soap_put___ns1__GetAlarms(soap, p, "-ns1:GetAlarms", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetAlarms(struct soap *soap, const char *URL, struct __ns1__GetAlarms const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarms(soap, p), 0) || ::soap_put___ns1__GetAlarms(soap, p, "-ns1:GetAlarms", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetAlarms * SOAP_FMAC4 soap_get___ns1__GetAlarms(struct soap*, struct __ns1__GetAlarms *, const char*, const char*);

inline int soap_read___ns1__GetAlarms(struct soap *soap, struct __ns1__GetAlarms *p)
{
	if (p)
	{	::soap_default___ns1__GetAlarms(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetAlarms(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetAlarms(struct soap *soap, const char *URL, struct __ns1__GetAlarms *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetAlarms(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__GetAlarms(struct soap *soap, struct __ns1__GetAlarms *p)
{
	if (::soap_read___ns1__GetAlarms(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__GetAlarmsSinceLastQuery_DEFINED
#define SOAP_TYPE___ns1__GetAlarmsSinceLastQuery_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetAlarmsSinceLastQuery(struct soap*, struct __ns1__GetAlarmsSinceLastQuery *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetAlarmsSinceLastQuery(struct soap*, const struct __ns1__GetAlarmsSinceLastQuery *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetAlarmsSinceLastQuery(struct soap*, const char*, int, const struct __ns1__GetAlarmsSinceLastQuery *, const char*);
SOAP_FMAC3 struct __ns1__GetAlarmsSinceLastQuery * SOAP_FMAC4 soap_in___ns1__GetAlarmsSinceLastQuery(struct soap*, const char*, struct __ns1__GetAlarmsSinceLastQuery *, const char*);
SOAP_FMAC1 struct __ns1__GetAlarmsSinceLastQuery * SOAP_FMAC2 soap_instantiate___ns1__GetAlarmsSinceLastQuery(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetAlarmsSinceLastQuery * soap_new___ns1__GetAlarmsSinceLastQuery(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetAlarmsSinceLastQuery(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetAlarmsSinceLastQuery * soap_new_req___ns1__GetAlarmsSinceLastQuery(
	struct soap *soap)
{
	struct __ns1__GetAlarmsSinceLastQuery *_p = ::soap_new___ns1__GetAlarmsSinceLastQuery(soap);
	if (_p)
	{	::soap_default___ns1__GetAlarmsSinceLastQuery(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetAlarmsSinceLastQuery * soap_new_set___ns1__GetAlarmsSinceLastQuery(
	struct soap *soap,
	_ns1__GetAlarmsSinceLastQuery *ns1__GetAlarmsSinceLastQuery)
{
	struct __ns1__GetAlarmsSinceLastQuery *_p = ::soap_new___ns1__GetAlarmsSinceLastQuery(soap);
	if (_p)
	{	::soap_default___ns1__GetAlarmsSinceLastQuery(soap, _p);
		_p->ns1__GetAlarmsSinceLastQuery = ns1__GetAlarmsSinceLastQuery;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetAlarmsSinceLastQuery(struct soap*, const struct __ns1__GetAlarmsSinceLastQuery *, const char*, const char*);

inline int soap_write___ns1__GetAlarmsSinceLastQuery(struct soap *soap, struct __ns1__GetAlarmsSinceLastQuery const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetAlarmsSinceLastQuery(soap, p), 0) || ::soap_put___ns1__GetAlarmsSinceLastQuery(soap, p, "-ns1:GetAlarmsSinceLastQuery", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetAlarmsSinceLastQuery(struct soap *soap, const char *URL, struct __ns1__GetAlarmsSinceLastQuery const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarmsSinceLastQuery(soap, p), 0) || ::soap_put___ns1__GetAlarmsSinceLastQuery(soap, p, "-ns1:GetAlarmsSinceLastQuery", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__GetAlarmsSinceLastQuery(struct soap *soap, const char *URL, struct __ns1__GetAlarmsSinceLastQuery const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarmsSinceLastQuery(soap, p), 0) || ::soap_put___ns1__GetAlarmsSinceLastQuery(soap, p, "-ns1:GetAlarmsSinceLastQuery", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetAlarmsSinceLastQuery(struct soap *soap, const char *URL, struct __ns1__GetAlarmsSinceLastQuery const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAlarmsSinceLastQuery(soap, p), 0) || ::soap_put___ns1__GetAlarmsSinceLastQuery(soap, p, "-ns1:GetAlarmsSinceLastQuery", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetAlarmsSinceLastQuery * SOAP_FMAC4 soap_get___ns1__GetAlarmsSinceLastQuery(struct soap*, struct __ns1__GetAlarmsSinceLastQuery *, const char*, const char*);

inline int soap_read___ns1__GetAlarmsSinceLastQuery(struct soap *soap, struct __ns1__GetAlarmsSinceLastQuery *p)
{
	if (p)
	{	::soap_default___ns1__GetAlarmsSinceLastQuery(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetAlarmsSinceLastQuery(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetAlarmsSinceLastQuery(struct soap *soap, const char *URL, struct __ns1__GetAlarmsSinceLastQuery *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetAlarmsSinceLastQuery(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__GetAlarmsSinceLastQuery(struct soap *soap, struct __ns1__GetAlarmsSinceLastQuery *p)
{
	if (::soap_read___ns1__GetAlarmsSinceLastQuery(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE___ns1__Counts_DEFINED
#define SOAP_TYPE___ns1__Counts_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Counts(struct soap*, struct __ns1__Counts *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Counts(struct soap*, const struct __ns1__Counts *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Counts(struct soap*, const char*, int, const struct __ns1__Counts *, const char*);
SOAP_FMAC3 struct __ns1__Counts * SOAP_FMAC4 soap_in___ns1__Counts(struct soap*, const char*, struct __ns1__Counts *, const char*);
SOAP_FMAC1 struct __ns1__Counts * SOAP_FMAC2 soap_instantiate___ns1__Counts(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Counts * soap_new___ns1__Counts(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__Counts(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__Counts * soap_new_req___ns1__Counts(
	struct soap *soap)
{
	struct __ns1__Counts *_p = ::soap_new___ns1__Counts(soap);
	if (_p)
	{	::soap_default___ns1__Counts(soap, _p);
	}
	return _p;
}

inline struct __ns1__Counts * soap_new_set___ns1__Counts(
	struct soap *soap,
	_ns1__Counts *ns1__Counts)
{
	struct __ns1__Counts *_p = ::soap_new___ns1__Counts(soap);
	if (_p)
	{	::soap_default___ns1__Counts(soap, _p);
		_p->ns1__Counts = ns1__Counts;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Counts(struct soap*, const struct __ns1__Counts *, const char*, const char*);

inline int soap_write___ns1__Counts(struct soap *soap, struct __ns1__Counts const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__Counts(soap, p), 0) || ::soap_put___ns1__Counts(soap, p, "-ns1:Counts", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__Counts(struct soap *soap, const char *URL, struct __ns1__Counts const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Counts(soap, p), 0) || ::soap_put___ns1__Counts(soap, p, "-ns1:Counts", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___ns1__Counts(struct soap *soap, const char *URL, struct __ns1__Counts const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Counts(soap, p), 0) || ::soap_put___ns1__Counts(soap, p, "-ns1:Counts", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__Counts(struct soap *soap, const char *URL, struct __ns1__Counts const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__Counts(soap, p), 0) || ::soap_put___ns1__Counts(soap, p, "-ns1:Counts", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__Counts * SOAP_FMAC4 soap_get___ns1__Counts(struct soap*, struct __ns1__Counts *, const char*, const char*);

inline int soap_read___ns1__Counts(struct soap *soap, struct __ns1__Counts *p)
{
	if (p)
	{	::soap_default___ns1__Counts(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__Counts(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__Counts(struct soap *soap, const char *URL, struct __ns1__Counts *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__Counts(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___ns1__Counts(struct soap *soap, struct __ns1__Counts *p)
{
	if (::soap_read___ns1__Counts(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ChangeSamples_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ChangeSamples_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ChangeSamples(struct soap*, _ns1__ChangeSamples *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ChangeSamples(struct soap*, const char *, int, _ns1__ChangeSamples *const*, const char *);
SOAP_FMAC3 _ns1__ChangeSamples ** SOAP_FMAC4 soap_in_PointerTo_ns1__ChangeSamples(struct soap*, const char*, _ns1__ChangeSamples **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ChangeSamples(struct soap*, _ns1__ChangeSamples *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ChangeSamples ** SOAP_FMAC4 soap_get_PointerTo_ns1__ChangeSamples(struct soap*, _ns1__ChangeSamples **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetVersions_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetVersions_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetVersions(struct soap*, _ns1__GetVersions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetVersions(struct soap*, const char *, int, _ns1__GetVersions *const*, const char *);
SOAP_FMAC3 _ns1__GetVersions ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetVersions(struct soap*, const char*, _ns1__GetVersions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetVersions(struct soap*, _ns1__GetVersions *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetVersions ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetVersions(struct soap*, _ns1__GetVersions **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ChangeMoldsInSampleTable_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ChangeMoldsInSampleTable_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ChangeMoldsInSampleTable(struct soap*, _ns1__ChangeMoldsInSampleTable *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ChangeMoldsInSampleTable(struct soap*, const char *, int, _ns1__ChangeMoldsInSampleTable *const*, const char *);
SOAP_FMAC3 _ns1__ChangeMoldsInSampleTable ** SOAP_FMAC4 soap_in_PointerTo_ns1__ChangeMoldsInSampleTable(struct soap*, const char*, _ns1__ChangeMoldsInSampleTable **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ChangeMoldsInSampleTable(struct soap*, _ns1__ChangeMoldsInSampleTable *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ChangeMoldsInSampleTable ** SOAP_FMAC4 soap_get_PointerTo_ns1__ChangeMoldsInSampleTable(struct soap*, _ns1__ChangeMoldsInSampleTable **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__EraseMoldsInSampleTable_DEFINED
#define SOAP_TYPE_PointerTo_ns1__EraseMoldsInSampleTable_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__EraseMoldsInSampleTable(struct soap*, _ns1__EraseMoldsInSampleTable *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__EraseMoldsInSampleTable(struct soap*, const char *, int, _ns1__EraseMoldsInSampleTable *const*, const char *);
SOAP_FMAC3 _ns1__EraseMoldsInSampleTable ** SOAP_FMAC4 soap_in_PointerTo_ns1__EraseMoldsInSampleTable(struct soap*, const char*, _ns1__EraseMoldsInSampleTable **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__EraseMoldsInSampleTable(struct soap*, _ns1__EraseMoldsInSampleTable *const*, const char*, const char*);
SOAP_FMAC3 _ns1__EraseMoldsInSampleTable ** SOAP_FMAC4 soap_get_PointerTo_ns1__EraseMoldsInSampleTable(struct soap*, _ns1__EraseMoldsInSampleTable **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__AddEjectedMolds_DEFINED
#define SOAP_TYPE_PointerTo_ns1__AddEjectedMolds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AddEjectedMolds(struct soap*, _ns1__AddEjectedMolds *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AddEjectedMolds(struct soap*, const char *, int, _ns1__AddEjectedMolds *const*, const char *);
SOAP_FMAC3 _ns1__AddEjectedMolds ** SOAP_FMAC4 soap_in_PointerTo_ns1__AddEjectedMolds(struct soap*, const char*, _ns1__AddEjectedMolds **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AddEjectedMolds(struct soap*, _ns1__AddEjectedMolds *const*, const char*, const char*);
SOAP_FMAC3 _ns1__AddEjectedMolds ** SOAP_FMAC4 soap_get_PointerTo_ns1__AddEjectedMolds(struct soap*, _ns1__AddEjectedMolds **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ChangeMountedMolds_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ChangeMountedMolds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ChangeMountedMolds(struct soap*, _ns1__ChangeMountedMolds *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ChangeMountedMolds(struct soap*, const char *, int, _ns1__ChangeMountedMolds *const*, const char *);
SOAP_FMAC3 _ns1__ChangeMountedMolds ** SOAP_FMAC4 soap_in_PointerTo_ns1__ChangeMountedMolds(struct soap*, const char*, _ns1__ChangeMountedMolds **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ChangeMountedMolds(struct soap*, _ns1__ChangeMountedMolds *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ChangeMountedMolds ** SOAP_FMAC4 soap_get_PointerTo_ns1__ChangeMountedMolds(struct soap*, _ns1__ChangeMountedMolds **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMoldsInSampleTable_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMoldsInSampleTable_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMoldsInSampleTable(struct soap*, _ns1__GetMoldsInSampleTable *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMoldsInSampleTable(struct soap*, const char *, int, _ns1__GetMoldsInSampleTable *const*, const char *);
SOAP_FMAC3 _ns1__GetMoldsInSampleTable ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMoldsInSampleTable(struct soap*, const char*, _ns1__GetMoldsInSampleTable **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMoldsInSampleTable(struct soap*, _ns1__GetMoldsInSampleTable *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMoldsInSampleTable ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMoldsInSampleTable(struct soap*, _ns1__GetMoldsInSampleTable **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__EjectedMolds_DEFINED
#define SOAP_TYPE_PointerTo_ns1__EjectedMolds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__EjectedMolds(struct soap*, _ns1__EjectedMolds *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__EjectedMolds(struct soap*, const char *, int, _ns1__EjectedMolds *const*, const char *);
SOAP_FMAC3 _ns1__EjectedMolds ** SOAP_FMAC4 soap_in_PointerTo_ns1__EjectedMolds(struct soap*, const char*, _ns1__EjectedMolds **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__EjectedMolds(struct soap*, _ns1__EjectedMolds *const*, const char*, const char*);
SOAP_FMAC3 _ns1__EjectedMolds ** SOAP_FMAC4 soap_get_PointerTo_ns1__EjectedMolds(struct soap*, _ns1__EjectedMolds **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ReadenMolds_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ReadenMolds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ReadenMolds(struct soap*, _ns1__ReadenMolds *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ReadenMolds(struct soap*, const char *, int, _ns1__ReadenMolds *const*, const char *);
SOAP_FMAC3 _ns1__ReadenMolds ** SOAP_FMAC4 soap_in_PointerTo_ns1__ReadenMolds(struct soap*, const char*, _ns1__ReadenMolds **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ReadenMolds(struct soap*, _ns1__ReadenMolds *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ReadenMolds ** SOAP_FMAC4 soap_get_PointerTo_ns1__ReadenMolds(struct soap*, _ns1__ReadenMolds **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__CumulCounts_DEFINED
#define SOAP_TYPE_PointerTo_ns1__CumulCounts_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CumulCounts(struct soap*, _ns1__CumulCounts *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CumulCounts(struct soap*, const char *, int, _ns1__CumulCounts *const*, const char *);
SOAP_FMAC3 _ns1__CumulCounts ** SOAP_FMAC4 soap_in_PointerTo_ns1__CumulCounts(struct soap*, const char*, _ns1__CumulCounts **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CumulCounts(struct soap*, _ns1__CumulCounts *const*, const char*, const char*);
SOAP_FMAC3 _ns1__CumulCounts ** SOAP_FMAC4 soap_get_PointerTo_ns1__CumulCounts(struct soap*, _ns1__CumulCounts **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__Measures_DEFINED
#define SOAP_TYPE_PointerTo_ns1__Measures_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Measures(struct soap*, _ns1__Measures *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Measures(struct soap*, const char *, int, _ns1__Measures *const*, const char *);
SOAP_FMAC3 _ns1__Measures ** SOAP_FMAC4 soap_in_PointerTo_ns1__Measures(struct soap*, const char*, _ns1__Measures **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Measures(struct soap*, _ns1__Measures *const*, const char*, const char*);
SOAP_FMAC3 _ns1__Measures ** SOAP_FMAC4 soap_get_PointerTo_ns1__Measures(struct soap*, _ns1__Measures **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__MountedMolds_DEFINED
#define SOAP_TYPE_PointerTo_ns1__MountedMolds_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__MountedMolds(struct soap*, _ns1__MountedMolds *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__MountedMolds(struct soap*, const char *, int, _ns1__MountedMolds *const*, const char *);
SOAP_FMAC3 _ns1__MountedMolds ** SOAP_FMAC4 soap_in_PointerTo_ns1__MountedMolds(struct soap*, const char*, _ns1__MountedMolds **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__MountedMolds(struct soap*, _ns1__MountedMolds *const*, const char*, const char*);
SOAP_FMAC3 _ns1__MountedMolds ** SOAP_FMAC4 soap_get_PointerTo_ns1__MountedMolds(struct soap*, _ns1__MountedMolds **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetAlarms_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetAlarms_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetAlarms(struct soap*, _ns1__GetAlarms *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetAlarms(struct soap*, const char *, int, _ns1__GetAlarms *const*, const char *);
SOAP_FMAC3 _ns1__GetAlarms ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetAlarms(struct soap*, const char*, _ns1__GetAlarms **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetAlarms(struct soap*, _ns1__GetAlarms *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetAlarms ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetAlarms(struct soap*, _ns1__GetAlarms **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetAlarmsSinceLastQuery_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetAlarmsSinceLastQuery_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetAlarmsSinceLastQuery(struct soap*, _ns1__GetAlarmsSinceLastQuery *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetAlarmsSinceLastQuery(struct soap*, const char *, int, _ns1__GetAlarmsSinceLastQuery *const*, const char *);
SOAP_FMAC3 _ns1__GetAlarmsSinceLastQuery ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetAlarmsSinceLastQuery(struct soap*, const char*, _ns1__GetAlarmsSinceLastQuery **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetAlarmsSinceLastQuery(struct soap*, _ns1__GetAlarmsSinceLastQuery *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetAlarmsSinceLastQuery ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetAlarmsSinceLastQuery(struct soap*, _ns1__GetAlarmsSinceLastQuery **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__Counts_DEFINED
#define SOAP_TYPE_PointerTo_ns1__Counts_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Counts(struct soap*, _ns1__Counts *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Counts(struct soap*, const char *, int, _ns1__Counts *const*, const char *);
SOAP_FMAC3 _ns1__Counts ** SOAP_FMAC4 soap_in_PointerTo_ns1__Counts(struct soap*, const char*, _ns1__Counts **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Counts(struct soap*, _ns1__Counts *const*, const char*, const char*);
SOAP_FMAC3 _ns1__Counts ** SOAP_FMAC4 soap_get_PointerTo_ns1__Counts(struct soap*, _ns1__Counts **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ChangeSamplesResponse_ChangeSamplesResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ChangeSamplesResponse_ChangeSamplesResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap*, _ns1__ChangeSamplesResponse_ChangeSamplesResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap*, const char *, int, _ns1__ChangeSamplesResponse_ChangeSamplesResult *const*, const char *);
SOAP_FMAC3 _ns1__ChangeSamplesResponse_ChangeSamplesResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap*, const char*, _ns1__ChangeSamplesResponse_ChangeSamplesResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap*, _ns1__ChangeSamplesResponse_ChangeSamplesResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ChangeSamplesResponse_ChangeSamplesResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__ChangeSamplesResponse_ChangeSamplesResult(struct soap*, _ns1__ChangeSamplesResponse_ChangeSamplesResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__MoulesPrelevesXml_DEFINED
#define SOAP_TYPE_PointerTons1__MoulesPrelevesXml_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__MoulesPrelevesXml(struct soap*, ns1__MoulesPrelevesXml *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__MoulesPrelevesXml(struct soap*, const char *, int, ns1__MoulesPrelevesXml *const*, const char *);
SOAP_FMAC3 ns1__MoulesPrelevesXml ** SOAP_FMAC4 soap_in_PointerTons1__MoulesPrelevesXml(struct soap*, const char*, ns1__MoulesPrelevesXml **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__MoulesPrelevesXml(struct soap*, ns1__MoulesPrelevesXml *const*, const char*, const char*);
SOAP_FMAC3 ns1__MoulesPrelevesXml ** SOAP_FMAC4 soap_get_PointerTons1__MoulesPrelevesXml(struct soap*, ns1__MoulesPrelevesXml **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetVersionsResponse_GetVersionsResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetVersionsResponse_GetVersionsResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetVersionsResponse_GetVersionsResult(struct soap*, _ns1__GetVersionsResponse_GetVersionsResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetVersionsResponse_GetVersionsResult(struct soap*, const char *, int, _ns1__GetVersionsResponse_GetVersionsResult *const*, const char *);
SOAP_FMAC3 _ns1__GetVersionsResponse_GetVersionsResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetVersionsResponse_GetVersionsResult(struct soap*, const char*, _ns1__GetVersionsResponse_GetVersionsResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetVersionsResponse_GetVersionsResult(struct soap*, _ns1__GetVersionsResponse_GetVersionsResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetVersionsResponse_GetVersionsResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetVersionsResponse_GetVersionsResult(struct soap*, _ns1__GetVersionsResponse_GetVersionsResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap*, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap*, const char *, int, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *const*, const char *);
SOAP_FMAC3 _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap*, const char*, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap*, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult(struct soap*, _ns1__ChangeMoldsInSampleTableResponse_ChangeMoldsInSampleTableResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9_DEFINED
#define SOAP_TYPE_PointerTons1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap*, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap*, const char *, int, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *const*, const char *);
SOAP_FMAC3 ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 ** SOAP_FMAC4 soap_in_PointerTons1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap*, const char*, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap*, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 *const*, const char*, const char*);
SOAP_FMAC3 ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 ** SOAP_FMAC4 soap_get_PointerTons1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9(struct soap*, ns1__MoulesPrelevesXmlPourWS1_USCORE0_USCORE9 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap*, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap*, const char *, int, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *const*, const char *);
SOAP_FMAC3 _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap*, const char*, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap*, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult(struct soap*, _ns1__EraseMoldsInSampleTableResponse_EraseMoldsInSampleTableResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__MoulesEjectesXml_DEFINED
#define SOAP_TYPE_PointerTons1__MoulesEjectesXml_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__MoulesEjectesXml(struct soap*, ns1__MoulesEjectesXml *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__MoulesEjectesXml(struct soap*, const char *, int, ns1__MoulesEjectesXml *const*, const char *);
SOAP_FMAC3 ns1__MoulesEjectesXml ** SOAP_FMAC4 soap_in_PointerTons1__MoulesEjectesXml(struct soap*, const char*, ns1__MoulesEjectesXml **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__MoulesEjectesXml(struct soap*, ns1__MoulesEjectesXml *const*, const char*, const char*);
SOAP_FMAC3 ns1__MoulesEjectesXml ** SOAP_FMAC4 soap_get_PointerTons1__MoulesEjectesXml(struct soap*, ns1__MoulesEjectesXml **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap*, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap*, const char *, int, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *const*, const char *);
SOAP_FMAC3 _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap*, const char*, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap*, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult(struct soap*, _ns1__ChangeMountedMoldsResponse_ChangeMountedMoldsResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__MountedMoldsXml_DEFINED
#define SOAP_TYPE_PointerTons1__MountedMoldsXml_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__MountedMoldsXml(struct soap*, ns1__MountedMoldsXml *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__MountedMoldsXml(struct soap*, const char *, int, ns1__MountedMoldsXml *const*, const char *);
SOAP_FMAC3 ns1__MountedMoldsXml ** SOAP_FMAC4 soap_in_PointerTons1__MountedMoldsXml(struct soap*, const char*, ns1__MountedMoldsXml **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__MountedMoldsXml(struct soap*, ns1__MountedMoldsXml *const*, const char*, const char*);
SOAP_FMAC3 ns1__MountedMoldsXml ** SOAP_FMAC4 soap_get_PointerTons1__MountedMoldsXml(struct soap*, ns1__MountedMoldsXml **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap*, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap*, const char *, int, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *const*, const char *);
SOAP_FMAC3 _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap*, const char*, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap*, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult(struct soap*, _ns1__GetMoldsInSampleTableResponse_GetMoldsInSampleTableResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__EjectedMoldsResponse_EjectedMoldsResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__EjectedMoldsResponse_EjectedMoldsResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap*, _ns1__EjectedMoldsResponse_EjectedMoldsResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap*, const char *, int, _ns1__EjectedMoldsResponse_EjectedMoldsResult *const*, const char *);
SOAP_FMAC3 _ns1__EjectedMoldsResponse_EjectedMoldsResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap*, const char*, _ns1__EjectedMoldsResponse_EjectedMoldsResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap*, _ns1__EjectedMoldsResponse_EjectedMoldsResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__EjectedMoldsResponse_EjectedMoldsResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__EjectedMoldsResponse_EjectedMoldsResult(struct soap*, _ns1__EjectedMoldsResponse_EjectedMoldsResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ReadenMoldsResponse_ReadenMoldsResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ReadenMoldsResponse_ReadenMoldsResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap*, _ns1__ReadenMoldsResponse_ReadenMoldsResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap*, const char *, int, _ns1__ReadenMoldsResponse_ReadenMoldsResult *const*, const char *);
SOAP_FMAC3 _ns1__ReadenMoldsResponse_ReadenMoldsResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap*, const char*, _ns1__ReadenMoldsResponse_ReadenMoldsResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap*, _ns1__ReadenMoldsResponse_ReadenMoldsResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ReadenMoldsResponse_ReadenMoldsResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__ReadenMoldsResponse_ReadenMoldsResult(struct soap*, _ns1__ReadenMoldsResponse_ReadenMoldsResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__CumulCountsResponse_CumulCountsResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__CumulCountsResponse_CumulCountsResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CumulCountsResponse_CumulCountsResult(struct soap*, _ns1__CumulCountsResponse_CumulCountsResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CumulCountsResponse_CumulCountsResult(struct soap*, const char *, int, _ns1__CumulCountsResponse_CumulCountsResult *const*, const char *);
SOAP_FMAC3 _ns1__CumulCountsResponse_CumulCountsResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__CumulCountsResponse_CumulCountsResult(struct soap*, const char*, _ns1__CumulCountsResponse_CumulCountsResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CumulCountsResponse_CumulCountsResult(struct soap*, _ns1__CumulCountsResponse_CumulCountsResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__CumulCountsResponse_CumulCountsResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__CumulCountsResponse_CumulCountsResult(struct soap*, _ns1__CumulCountsResponse_CumulCountsResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__MeasuresResponse_MeasuresResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__MeasuresResponse_MeasuresResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__MeasuresResponse_MeasuresResult(struct soap*, _ns1__MeasuresResponse_MeasuresResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__MeasuresResponse_MeasuresResult(struct soap*, const char *, int, _ns1__MeasuresResponse_MeasuresResult *const*, const char *);
SOAP_FMAC3 _ns1__MeasuresResponse_MeasuresResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__MeasuresResponse_MeasuresResult(struct soap*, const char*, _ns1__MeasuresResponse_MeasuresResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__MeasuresResponse_MeasuresResult(struct soap*, _ns1__MeasuresResponse_MeasuresResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__MeasuresResponse_MeasuresResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__MeasuresResponse_MeasuresResult(struct soap*, _ns1__MeasuresResponse_MeasuresResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__MountedMoldsResponse_MountedMoldsResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__MountedMoldsResponse_MountedMoldsResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__MountedMoldsResponse_MountedMoldsResult(struct soap*, _ns1__MountedMoldsResponse_MountedMoldsResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__MountedMoldsResponse_MountedMoldsResult(struct soap*, const char *, int, _ns1__MountedMoldsResponse_MountedMoldsResult *const*, const char *);
SOAP_FMAC3 _ns1__MountedMoldsResponse_MountedMoldsResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__MountedMoldsResponse_MountedMoldsResult(struct soap*, const char*, _ns1__MountedMoldsResponse_MountedMoldsResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__MountedMoldsResponse_MountedMoldsResult(struct soap*, _ns1__MountedMoldsResponse_MountedMoldsResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__MountedMoldsResponse_MountedMoldsResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__MountedMoldsResponse_MountedMoldsResult(struct soap*, _ns1__MountedMoldsResponse_MountedMoldsResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetAlarmsResponse_GetAlarmsResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetAlarmsResponse_GetAlarmsResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetAlarmsResponse_GetAlarmsResult(struct soap*, _ns1__GetAlarmsResponse_GetAlarmsResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetAlarmsResponse_GetAlarmsResult(struct soap*, const char *, int, _ns1__GetAlarmsResponse_GetAlarmsResult *const*, const char *);
SOAP_FMAC3 _ns1__GetAlarmsResponse_GetAlarmsResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetAlarmsResponse_GetAlarmsResult(struct soap*, const char*, _ns1__GetAlarmsResponse_GetAlarmsResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetAlarmsResponse_GetAlarmsResult(struct soap*, _ns1__GetAlarmsResponse_GetAlarmsResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetAlarmsResponse_GetAlarmsResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetAlarmsResponse_GetAlarmsResult(struct soap*, _ns1__GetAlarmsResponse_GetAlarmsResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap*, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap*, const char *, int, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *const*, const char *);
SOAP_FMAC3 _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap*, const char*, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap*, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult(struct soap*, _ns1__GetAlarmsSinceLastQueryResponse_GetAlarmsSinceLastQueryResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__CountsResponse_CountsResult_DEFINED
#define SOAP_TYPE_PointerTo_ns1__CountsResponse_CountsResult_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CountsResponse_CountsResult(struct soap*, _ns1__CountsResponse_CountsResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CountsResponse_CountsResult(struct soap*, const char *, int, _ns1__CountsResponse_CountsResult *const*, const char *);
SOAP_FMAC3 _ns1__CountsResponse_CountsResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__CountsResponse_CountsResult(struct soap*, const char*, _ns1__CountsResponse_CountsResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CountsResponse_CountsResult(struct soap*, _ns1__CountsResponse_CountsResult *const*, const char*, const char*);
SOAP_FMAC3 _ns1__CountsResponse_CountsResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__CountsResponse_CountsResult(struct soap*, _ns1__CountsResponse_CountsResult **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTons1__PrelevementUnitaire_DEFINED
#define SOAP_TYPE_PointerToPointerTons1__PrelevementUnitaire_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__PrelevementUnitaire(struct soap*, ns1__PrelevementUnitaire **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__PrelevementUnitaire(struct soap*, const char *, int, ns1__PrelevementUnitaire **const*, const char *);
SOAP_FMAC3 ns1__PrelevementUnitaire *** SOAP_FMAC4 soap_in_PointerToPointerTons1__PrelevementUnitaire(struct soap*, const char*, ns1__PrelevementUnitaire ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__PrelevementUnitaire(struct soap*, ns1__PrelevementUnitaire **const*, const char*, const char*);
SOAP_FMAC3 ns1__PrelevementUnitaire *** SOAP_FMAC4 soap_get_PointerToPointerTons1__PrelevementUnitaire(struct soap*, ns1__PrelevementUnitaire ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__PrelevementUnitaire_DEFINED
#define SOAP_TYPE_PointerTons1__PrelevementUnitaire_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__PrelevementUnitaire(struct soap*, ns1__PrelevementUnitaire *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__PrelevementUnitaire(struct soap*, const char *, int, ns1__PrelevementUnitaire *const*, const char *);
SOAP_FMAC3 ns1__PrelevementUnitaire ** SOAP_FMAC4 soap_in_PointerTons1__PrelevementUnitaire(struct soap*, const char*, ns1__PrelevementUnitaire **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__PrelevementUnitaire(struct soap*, ns1__PrelevementUnitaire *const*, const char*, const char*);
SOAP_FMAC3 ns1__PrelevementUnitaire ** SOAP_FMAC4 soap_get_PointerTons1__PrelevementUnitaire(struct soap*, ns1__PrelevementUnitaire **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__ArrayOfPrelevementUnitaire_DEFINED
#define SOAP_TYPE_PointerTons1__ArrayOfPrelevementUnitaire_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfPrelevementUnitaire(struct soap*, ns1__ArrayOfPrelevementUnitaire *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfPrelevementUnitaire(struct soap*, const char *, int, ns1__ArrayOfPrelevementUnitaire *const*, const char *);
SOAP_FMAC3 ns1__ArrayOfPrelevementUnitaire ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfPrelevementUnitaire(struct soap*, const char*, ns1__ArrayOfPrelevementUnitaire **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfPrelevementUnitaire(struct soap*, ns1__ArrayOfPrelevementUnitaire *const*, const char*, const char*);
SOAP_FMAC3 ns1__ArrayOfPrelevementUnitaire ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfPrelevementUnitaire(struct soap*, ns1__ArrayOfPrelevementUnitaire **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9_DEFINED
#define SOAP_TYPE_PointerToPointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, const char *, int, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 **const*, const char *);
SOAP_FMAC3 ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *** SOAP_FMAC4 soap_in_PointerToPointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, const char*, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 **const*, const char*, const char*);
SOAP_FMAC3 ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *** SOAP_FMAC4 soap_get_PointerToPointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9_DEFINED
#define SOAP_TYPE_PointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, const char *, int, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *const*, const char *);
SOAP_FMAC3 ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 ** SOAP_FMAC4 soap_in_PointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, const char*, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 *const*, const char*, const char*);
SOAP_FMAC3 ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 ** SOAP_FMAC4 soap_get_PointerTons1__PrelevementWS_USCORE1_USCORE0_USCORE9(struct soap*, ns1__PrelevementWS_USCORE1_USCORE0_USCORE9 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTons1__RejetMouleVue_DEFINED
#define SOAP_TYPE_PointerToPointerTons1__RejetMouleVue_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__RejetMouleVue(struct soap*, ns1__RejetMouleVue **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__RejetMouleVue(struct soap*, const char *, int, ns1__RejetMouleVue **const*, const char *);
SOAP_FMAC3 ns1__RejetMouleVue *** SOAP_FMAC4 soap_in_PointerToPointerTons1__RejetMouleVue(struct soap*, const char*, ns1__RejetMouleVue ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__RejetMouleVue(struct soap*, ns1__RejetMouleVue **const*, const char*, const char*);
SOAP_FMAC3 ns1__RejetMouleVue *** SOAP_FMAC4 soap_get_PointerToPointerTons1__RejetMouleVue(struct soap*, ns1__RejetMouleVue ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__RejetMouleVue_DEFINED
#define SOAP_TYPE_PointerTons1__RejetMouleVue_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__RejetMouleVue(struct soap*, ns1__RejetMouleVue *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__RejetMouleVue(struct soap*, const char *, int, ns1__RejetMouleVue *const*, const char *);
SOAP_FMAC3 ns1__RejetMouleVue ** SOAP_FMAC4 soap_in_PointerTons1__RejetMouleVue(struct soap*, const char*, ns1__RejetMouleVue **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__RejetMouleVue(struct soap*, ns1__RejetMouleVue *const*, const char*, const char*);
SOAP_FMAC3 ns1__RejetMouleVue ** SOAP_FMAC4 soap_get_PointerTons1__RejetMouleVue(struct soap*, ns1__RejetMouleVue **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__ArrayOfRejetMouleVue_DEFINED
#define SOAP_TYPE_PointerTons1__ArrayOfRejetMouleVue_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfRejetMouleVue(struct soap*, ns1__ArrayOfRejetMouleVue *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfRejetMouleVue(struct soap*, const char *, int, ns1__ArrayOfRejetMouleVue *const*, const char *);
SOAP_FMAC3 ns1__ArrayOfRejetMouleVue ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfRejetMouleVue(struct soap*, const char*, ns1__ArrayOfRejetMouleVue **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfRejetMouleVue(struct soap*, ns1__ArrayOfRejetMouleVue *const*, const char*, const char*);
SOAP_FMAC3 ns1__ArrayOfRejetMouleVue ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfRejetMouleVue(struct soap*, ns1__ArrayOfRejetMouleVue **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTons1__Moule_DEFINED
#define SOAP_TYPE_PointerToPointerTons1__Moule_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__Moule(struct soap*, ns1__Moule **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__Moule(struct soap*, const char *, int, ns1__Moule **const*, const char *);
SOAP_FMAC3 ns1__Moule *** SOAP_FMAC4 soap_in_PointerToPointerTons1__Moule(struct soap*, const char*, ns1__Moule ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__Moule(struct soap*, ns1__Moule **const*, const char*, const char*);
SOAP_FMAC3 ns1__Moule *** SOAP_FMAC4 soap_get_PointerToPointerTons1__Moule(struct soap*, ns1__Moule ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__Moule_DEFINED
#define SOAP_TYPE_PointerTons1__Moule_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Moule(struct soap*, ns1__Moule *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Moule(struct soap*, const char *, int, ns1__Moule *const*, const char *);
SOAP_FMAC3 ns1__Moule ** SOAP_FMAC4 soap_in_PointerTons1__Moule(struct soap*, const char*, ns1__Moule **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Moule(struct soap*, ns1__Moule *const*, const char*, const char*);
SOAP_FMAC3 ns1__Moule ** SOAP_FMAC4 soap_get_PointerTons1__Moule(struct soap*, ns1__Moule **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__ArrayOfMoule_DEFINED
#define SOAP_TYPE_PointerTons1__ArrayOfMoule_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfMoule(struct soap*, ns1__ArrayOfMoule *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfMoule(struct soap*, const char *, int, ns1__ArrayOfMoule *const*, const char *);
SOAP_FMAC3 ns1__ArrayOfMoule ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfMoule(struct soap*, const char*, ns1__ArrayOfMoule **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfMoule(struct soap*, ns1__ArrayOfMoule *const*, const char*, const char*);
SOAP_FMAC3 ns1__ArrayOfMoule ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfMoule(struct soap*, ns1__ArrayOfMoule **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

inline void soap_default__QName(struct soap *soap, char **a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT__QName
	*a = SOAP_DEFAULT__QName;
#else
	*a = (char *)0;
#endif
}
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_instantiate__QName soap_instantiate_string


#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

inline int soap_write__QName(struct soap *soap, char *const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put__QName(soap, p, "QName", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT__QName(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put__QName(soap, p, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__QName(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put__QName(soap, p, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__QName(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put__QName(soap, p, "QName", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

inline int soap_read__QName(struct soap *soap, char **p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get__QName(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__QName(struct soap *soap, const char *URL, char **p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__QName(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__QName(struct soap *soap, char **p)
{
	if (::soap_read__QName(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

inline void soap_default_string(struct soap *soap, char **a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_string
	*a = SOAP_DEFAULT_string;
#else
	*a = (char *)0;
#endif
}
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

inline int soap_write_string(struct soap *soap, char *const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_string(soap, p, "string", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_string(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_string(soap, p, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_string(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_string(soap, p, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_string(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_string(soap, p, "string", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

inline int soap_read_string(struct soap *soap, char **p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_string(struct soap *soap, const char *URL, char **p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_string(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_string(struct soap *soap, char **p)
{
	if (::soap_read_string(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#endif

/* End of soapH.h */
